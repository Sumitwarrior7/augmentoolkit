AsyncAPI Blogs Data Part 1

================================================================================

Post 1
ID: https://www.asyncapi.com/blog/conference-2024-summary?utm_source=rss
Title: AsyncAPI Conference 2024 Report
Link: https://www.asyncapi.com/blog/conference-2024-summary?utm_source=rss
Summary: AsyncAPI Conference Summary for 2024
Content:
"""
As the saying goes,"The second time is a charm."AsyncAPI Conf on Tour returned in 2024 for a set of events across different locations. Not only did we run in-person conferences, but we also brought back our beloved online conference this time around, making the whole experience complete.In the AsyncAPI Conf on Tour 2023, I mentioned a few things I would love to improve; let's see what we changed, the challenges we faced, and what we are changing as we advance.Planning ProcessAfter a successful partnership with the APIdays Paris event, they offered to sponsor a track at other events they were hosting. Given the positive outcome in Paris, we were eager to explore the options. We decided to hold three in-person events with APIdays as our venue and host sponsor.Later in the year, I thought it would be a great idea to bring back the online conference to provide an opportunity for those who can't travel but still want to speak and share their expertise. This idea completed the entire experience, bringing the total number of events to four.For a detailed summary of what happened at each event, please read the following summaries:AsyncAPI Conference HelsinkiAsyncAPI Conference LondonAsyncAPI Online ConferenceAsyncAPI Conf in ParisChallengesThe first challenge we faced was that most of the conferences were held in Europe this time, and for many, obtaining a Schengen visa isn't an easy process.Secondly, although we have a venue and host sponsor, we still need financial support to cover costs such as shipping swags and providing travel funding for speakers.AttendanceWe had an incredible turnout for all our in-person events. The highlight was networking with community members, ambassadors, and friends at the APIs Standards booth. This booth became a hub for discussions with various companies and experts while maintaining vendor neutrality.Over580people attended our in-person conference, and we had more than450views during our AsyncAPI Online Conference livestream. Additionally, the recorded sessions received over446views after the conference.You can also catch up on therecordings from the AsyncAPI Online Conference.Conference SponsorsAACoT'24 was possible thanks toAPIdays, our Event Host and Sponsor. They not only provided a venue to host the conferences and sponsored us for lunch, breakfast, and refreshments, but we also had anAPI Standardsbooth.I want to thank our financial sponsors,Gravitee.ioandPostman, for supporting the conference. Thanks to their sponsorship, I traveled to London to support the event in person.
Additionally, we were able to provide partial assistance to speakers at the Paris conference and covered the logistics of swag shipment.Special Shout OutFirstly, my gratitude goes out to all the speakers for dedicating their time to share their expertise and provide valuable insights to the community.Secondly, I want to thank all the community members who volunteered at the API Standards booth during the conference. Your commitment to sharing knowledge with attendees is greatly appreciated and does not go unnoticed.Lastly, I am genuinely thankful for their hard work and commitment to assisting me behind the scenes. They led and contributed to the aspects that made the conference successful and even being a courier so that we could have materials and set up the booth tables.Lukasz GornickiAzeez ElegbedeBarbara CzyżKhuda Dad NomaniAishat MuibudeenOluwabamikemi KayodeAshmit JagtapWhere To In 2025?For AsyncAPI Conference 2025, we are excited to announce thatAPIdayswill be hosting us in:Singapore onthe 15th - 16th of April.Munich onthe 2nd - 3rd of July.London onthe 22nd - 24th of September.Paris onthe 9th -11th of December.APIConf Lagoswill be hosting us in Lagos, Nigeria, onthe 18th - 19th of July.We will also have our annual AsyncAPI Online Conference onthe 29th of October.We are looking for financial sponsors, and if you know any company that will be interested,please download and share our conference sponsorship prospectus.
You can also check out ourOpen Collective Pageto explore sponsorship tiers.Alternatively, for more details on partnerships, please email us atinfo@asyncapi.io.Call for Speakers, SingaporeThe call for speakers for AsyncAPI Conf Singapore is now open! Send those proposals and share your knowledge and expertise with the community. The submission deadline is on the 23rd of February, so don't miss out.When submitting your proposal, please follow these simple steps to ensure you choose the correct track:Click on the link and select "Start."Choose option A, "apidays Singapore 2025," and click "OK."In the conference track selection, choose option I, "AsyncAPI."After that, you can submit your details!Looking forward to receiving your submissions!
"""
--------------------------------------------------------------------------------


Post 2
ID: https://www.asyncapi.com/blog/2024-annual-summary?utm_source=rss
Title: Annual Review: State of AsyncAPI Initiative 2024
Link: https://www.asyncapi.com/blog/2024-annual-summary?utm_source=rss
Summary: State of AsyncAPI 2024 in Numbers
Content:
"""
Happy 2025, AsyncAPI Community💜!What better way to start the year than by reflecting on the community's growth over the past year? Let's take a deep dive into the state of our community through data and see how far we have come, where we fell short, and what we can improve in the coming year. Analyzing our metrics is the most effective way to gauge our growth and measure our impact.If you are curious about our past achievements,please read the previous Project Status updates.SlackWe currently have a total of6,124members in the AsyncAPI workspace. Slack is our primary communication channel for sharing updates, assisting contributors and adopters who want to understand and use the AsyncAPI specification and toolings.We welcomed1,505new members in 2024.New members joining Slack each yearAmong this year's new joiners, we have our top five members, including our community marketing specialist, who leads the marketing efforts in the community.Top 5 new members on SlackOur weekly activity slightly dropped this year due to changes that affected some of our core maintainers after the layoffs.Slack weekly activity over the past yearsSocial MediaOur social media platforms help us communicate community news, share updates, and make announcements.
Let's dive into the numbers:LinkedInWe gained995followers on LinkedIn in 2024, bringing a total to3,983overall followers.Yearly followers on LinkedInCompared to 2023, the number of visits from users and new users toasyncapi.com, referred by LinkedIn, decreased by 40% in 2024. However, on a positive note, we received a significant increase in sessions, which kept users more engaged.Website visits referred by LinkedInWe don't use any premium or paid marketing services!X/TwitterWe gained309followers in 2024, reaching a total of4709followers overall. Website referrals declined 42% compared to the previous years, but sessions on the website increased significantly.Website visits referred by TwitterWe don't consider the X/Twitter platform worth investment; it's time to consider another platform like Bluesky to expand our reach.YouTubeOur YouTube channel continues to grow as we gain269new subscribers, having1.72ksubscribers in total. We hosted fewer community live streams in 2024, but also brought back the AsyncAPI Online Conference, increasing the total watch time.YouTube AnalyticsNewsletterIt's been a year since we sent out our first newsletter, and I'm pleased with the growth and impact it has achieved. Many community members often don't have the time to read through the entire article, so having a simple summary delivered straight to your inbox is a convenient way to stay updated on community happenings. The April edition was one of the most popular.Totals Newletter opens per each monthAdditionally, we've seen some growth in newsletter website referrals, with an increase in users and sessions.Website referral from NewsletterGoogle AnalyticsDocs continue to be our main metrics contributor, and blogs have performed quite well this past year.
The AsyncAPI website received over 1.1 million page views, while users and sessions have remained consistent.Website visits each yearGoogle Search ConsoleCompared to 2023, there has been a slight 15% decrease in website impressions and clicks recorded on Google Search Console.Website perfomance from Google Search ConsoleGitHubWe continue to see an increase in the number of active contributors who perform tasks such as commits, issues, or pull requests. In 2024, we had over2,780contributors overall.Total contributorsWe still do our very best to resolve and close issues. There have been some improvements because of programs such as the AsyncAPI Bounty Program and the Maintainership Program. We are still committed to growing the number of maintainers.Total number of issues closedNPMThe most controversial part of the review is the number of downloads from AsyncAPI's top packages, which are hosted under the Node Package Manager. Theasyncapi/specspackage continues to soar, with over34Mdownloads in the past year.Total downloads of AsyncAPI top packagesCommunity AchievementsDespite the challenges, we achieved some milestones, and here are some of the highlights from the AsyncAPI community in 2024!We had our second community hire,Oluwabamikemi Kayode, to work full-time as the project's Community Marketing Specialist.TheAmbassador Programincreased this year from having five ambassadors to ten.TheAsyncAPI Bounty Programturned 1, and we have51 issues completedso far under the program.We got accepted into GSoC'24for the first time as an independent organization.Published our second case studyfrom HDI Global.Brought back theAsyncAPI Online Conference.Closed down the AsyncAPI Store.These are some of the few highlights for 2024, and we have more planned for 2025.We are starting the year withan open discussion on establishing our first AsyncAPI Governance Board, so please join the conversation.You can also check out the2025 AsyncAPI Community Building Goalsto see what's in store for this year.Image by Canva
"""
--------------------------------------------------------------------------------


Post 3
ID: https://www.asyncapi.com/blog/release-notes-3.0.0?utm_source=rss
Title: AsyncAPI 3.0.0 Release Notes
Link: https://www.asyncapi.com/blog/release-notes-3.0.0?utm_source=rss
Summary: The release of AsyncAPI v3 is packed with changes such as request/reply, reusable channels, and more!
Content:
"""
The new version of the AsyncAPI specification - 3.0.0 - is now available and is packed with goodies! Some clear up confusion, some add features, and others improve maintainability.To make the information as clear as possible, we have split up the information into digestible chunks.If you want to get an overview of:All the changes done in v3, you are in the right place!Migration guide for all the breaking changes between v2 and v3OverviewThis post will give you an overview of all the changes done in v3.Operation, channel, and message decouplingIn v2, it has never been possible to re-use channels, because it was directly coupled with operations of an application.In v3, this is now possible, with the mindset that a channel and message should be detached from the operations performed. This means for any message broker, for example, for Kafka, channels now ONLY define topics and the messages it contains. For REST interfaces, it's all the paths and corresponding messages across all request types. For WebSocket, it's all the messages flowing through the WebSocket server. For Socket.Io, it defines all the rooms and messages therein.This change makes the channels reusable across multiple AsyncAPI documents.1asyncapi:3.0.02...3channels:4UserSignup:5address:user/signedup6messages:7UserMessage:8payload:9type:object10properties:11displayName:12type:string13description:Nameoftheuser14operations:15ConsumeUserSignups:16action:receive17channel:18$ref:"#/channels/UserSignup"Issue(s)PR(s)Migration Guide#618,#663#806,#827Operation, channel, and message decouplingMessages instead of messageAs you probably noticed above, messages in channels are no longer singular, and withoneOf, instead, messages are defined as key/value pairs in theMessages Object. This was part of the request-reply feature to enable easier referencing of messages.1asyncapi:3.0.02...3channels:4UserSignup:5address:user/signedup6messages:7UserMessage:8...Issue(s)PR(s)Migration Guide#94#827Messages instead of messagePublish and subscribe confusionIn v2, thepublishandsubscribeoperation keywords have always been confusing. Does it mean my application is published to the channel? Does it mean you publish for me? Who are you in this context?In v3, we try to clear this up. You only need to worry about your application's behavior. No more confusion about what and who does what. We achieve this through two newOperation Objectkeywords,sendandreceive, i.e. your application either sends or receives something.This description, of course, alters slightly based on protocol; for the generic message brokers, you produce or consume messages, but in the abstract AsyncAPI perspective, you still send or receive messages.1asyncapi:3.0.02...3operations:4SendUserSignedUp:5action:send6ReceiveUserSignedUp:7action:receiveIssue(s)PR(s)Migration Guide#829#847Operation keywordsRequest/ReplyOne of the longest requested features is request and reply... and it's finally here!One thorn in the eye of this feature has always been the publish and subscribe confusion, which complicated any efforts to achieve a workable solution. However, we now have a solution with that out of the way.🔥This feature has been designed with the following use cases in mind:Broker-based messaging with well-defined response topic + "correlationId".Broker-based messaging with per process individual inbox aka "replyTopic" + "correlationId".Broker-based messaging with a temporary reply topic for an individual response.WebSocket, which has no topics, where the channel is a TCP connection where messages flow.1...2action:send|receive3reply:4address:5location:'$message.header#/replyTo'6channel:7$ref:'#/channels/userSignupReply'8messages:9-$ref:'#/components/messages/userSignedUpReply'Read more about theOperation Reply Object here.Issue(s)PR(s)#94,#558#847Optional channelsWe have seen many use cases where an AsyncAPI document has been used as a form of menu or collection of definitions. To do this in v2 would require a bit of a hack. But in v3, channels are now entirely optional. This means that it's now possible to have a valid AsyncAPI document as such:1asyncapi:3.0.02...3components:4...Issue(s)PR(s)#829#847Unified referencing behaviorsIn v2, there were two instances where we used implicit references; server security configuration, by name referencing security requirement object in components, for channels to reference global servers by name. To stay as consistent as possible, we wanted to unify how references were used, which means that in v3, we ONLY use explicit references.Thescopesinformation in theSecurity Schema Objectis also now an array instead of an object.1asyncapi:3.0.02...3servers:4SomeServer:5security:6-$ref:'#/components/securitySchemes/SomeSecurity'7channels:8SomeChannel:9servers:10-$ref:'#/servers/SomeServer'11components:12securitySchemes:13SomeSecurity:14...15scopes:[...]Issue(s)PR(s)Migration Guide#829#852Unifying explicit and implicit referencesCommon metadata fieldsThere has been some inconsistency between which metadata fields are available in the different objects. Now we have added a few extra fields:addedtitle,summary, andexternalDocsfields in theServer Objectaddedtitleandsummaryfields in theChannel Objectaddedtitlefield in theOperation ObjectandOperation Trait Object1asyncapi:3.0.02...3servers:4SomeServer:5title:SomeServertitle6summary:Thissomeserverisforsomething7externalDocs:8...9channels:10SomeChannel:11title:Somechanneltitle12summary:Somechannelsummary13operations:14SomeOperation:15title:Someoperationtitle16traits:17-title:SomeoperationtraitstitleIssue(s)PR(s)#795#796Cleaning up the root objectThere was two meta information lingering in the root of the AsyncAPI object, which did not make much sense since we have theinfoobject for all the meta information.Therefore the roottagsandexternalDocshave been moved to theInfo Object.1asyncapi:3.0.02...3info:4...5externalDocs:6description:Findmoreinfohere7url:https://www.asyncapi.org8tags:9-name:e-commerce10...PR(s)Migration Guide#794Moved metadataSplitting out server URL into host and pathnameThere has been some confusion about what theurlof a server should contain; is it both protocol + host + path? What about the protocol field, then? Therefore each field now has its field for the host, path, and protocol in theServer Object.1asyncapi:3.0.02...3servers:4localhost:5host:localhost6path:/api/v1,7protocol:mqttIssue(s)PR(s)Migration Guide#547,#274#888Server URL splitting upMore reusable objects in componentsThis is a bit of a mixture between some of the features, that all added a little to this. It's now possible to add more stuff under theComponents Object:RepliesReply addressesTagsExternal docsOperationsChannels1asyncapi:3.0.02...3components:4...5replies:6...7replyAddresses:8...9tags:10...11externalDocs:12...13operations:14...15channels:16...Issue(s)PR(s)#829#847,#792,#806,#827New trait behaviorTraits in v2 always replaced any duplicate properties that were defined both in traits and the associated object. This meant, for example, if the message traits defined headers and the message object did as well, only the message trait headers would be applied because it overwrote anything you wrote in the message object.In v3, this has now been changed so thata property on a trait MUST NOT override the same property on the target object.For example, take a look at this message:1messageId:userSignup2description:Alongerdescription.3payload:4$ref:'#/components/schemas/userSignupPayload'5traits:6-name:UserSignup7title:Usersignup8summary:Actiontosignauserup.9description:Descriptionfromtrait.Take notice of howdescriptionis not overwritten by the traits:1messageId:userSignup2name:UserSignup3title:Usersignup4summary:Actiontosignauserup.5description:Alongerdescription.# it's still description from "main" object6payload:7$ref:'#/components/schemas/userSignupPayload'Issue(s)PR(s)Migration Guide#505#517,#532,#907New trait behaviorSchema format and payload definitionWith schemas, one thing that has always been impossible was reusing schemas with different schema formats. That's because the schema format information is part of the message object. That means that if you reference a Schema object, it has no information about the schema format because it's not located together.In v3, schemaFormat has been removed from theMessage ObjectandMessage Trait Object, and a newschema Object calledMulti Format Schema Objecthas been introduced, which pairs a schema together with its schema format. Which now enables much better reusability:1asyncapi:3.0.02...3components:4schemas:5avroSchema:6schemaFormat:'application/vnd.apache.avro+yaml;version=1.9.0'7schema:8type:record9name:User10namespace:com.company11doc:Userinformation12fields:13-name:displayName14type:stringIssue(s)PR(s)Migration Guide#622#797,#910Schema format and schemasSimplified ParametersIn v2, it was possible to use the full power of JSON Schema to define parameters, however, it introduced a lot of complexity to parameters, so for v3 it was dialed way down to only allow a very small set of properties.In v3, the newParameter objectcan now only have the following properties:enum,default,description,examples, andlocation.1asyncapi:3.0.02...3channels:4userSignup:5address:user/{userId}/signedup6parameters:7userId:8description:Idoftheuser.By default this means that any parameter is of typestring.Issue(s)PR(s)Migration Guide#583#935Restricted parameters objectEditorial ChangesWe haveremoved the note that stated we strived to be compatible with OpenAPI where possiblebecause, with the recent changes, this is no longer the case. That said, we still strive to make the different specs as interoperable as possible i.e., with Avro, RAML, OpenAPI Schema, etc.AcknowledgementsSpec 3.0 have been a massive undertaking, so I would like to say a huge "thank you!" to everyone who has been involved; maybe you commented on your views, added to discussions, joined the live meetings, championed changes, or reviewed proposed changes; this section is for you!Thank you,Simon Heimler,Vladimír Gorej,Fran Méndez,Lukasz Gornicki,Sergio Moya,Michael Davis,Maciej Urbańczyk,Jesse Menning,Heiko Henning,Gerald Loeffler,c-pius,Ian Cooper,Dale Lane,Jörg Walter,Nic Townsend,Laurent Broudoux,olamiral,Iván García Sainz-Aja,Fabian Bühler,John Fallows,Adrian Hope-Bailie,Christian (prdatur),Karl Morrison,Javier Jiménez Roda,Marek Sebera,Nathanaël Lécaudé,Jeremy Whitlock,souvik,Animesh Kumar,Samir AMZANI,Quetzalli Writes,Vaishnavi,Mahfuza,Bhaswati,Cynthia Peter,Arya Gupta,Joy Almeida,Hridyesh,Rohit,Ashish Padhy,Al Amin Muhammad,nickshoe,Khuda Dad Nomani,V Thulisile Sibanda,Ace,Mihael Bosnjak,Sambhav Gupta,Jonas Lagoni,Afzal Ansari
"""
--------------------------------------------------------------------------------


Post 4
ID: https://www.asyncapi.com/blog/hdi-global-interview?utm_source=rss
Title: Interview with Manuel Ottlik, Product Owner at HDI Global SE: Leveraging AsyncAPI for Integration Transparency!
Link: https://www.asyncapi.com/blog/hdi-global-interview?utm_source=rss
Summary: Learn how HDI Global SE, our first end-user and silver sponsor, leverages AsyncAPI for integration transparency. Manuel Ottlik shares insights on merging enterprise service buses with modern API management and event-driven architectures.
Content:
"""
HDI Global SE, a leading player in the insurance industry, has become our first end-user, a non-software vendor company that not only openly admits it uses AsyncAPI and shares its use case, but also became an official sponsor and a valuable partner of the AsyncAPI Initiative.
Their commitment to open source is evident through financial support, active contributions, and adoption of AsyncAPI to enhance transparency in their integration platform. We are ecstatic to haveManuel Ottlik, Product Owner of the Global Integration Platform at HDI Global SE, as one of our dedicated AsyncAPI ambassadors. Manuel has played a key role in driving the adoption of AsyncAPI at HDI, transforming our partnership into a meaningful use case.We recently had the opportunity to speak with Manuel, who shared insights into HDI's evolving integration strategies, the role of open source in their journey, and how AsyncAPI fits into their future plans. Here’s a glimpse of our conversation:About the Company and Your RoleWe began by exploring how HDI Global SE, with its long history in the insurance industry, has evolved its approach to integration and API management.Bami: HDI Global SE has a strong background in the insurance industry. How has the company’s approach to integration and API management evolved over the years?Manuel:When we were discussing the integration layer, it's not just the insurance industry but most enterprises, particularly in financial services, that initially relied on enterprise service buses. Over time, many of them, including HDI, introduced API management to leverage REST APIs. We did the same here—implementing API management alongside our enterprise service bus. Now, we're focusing our development efforts exclusively on API management.However, we realized that to fully phase out the enterprise service bus, we’d need both synchronous and asynchronous communication capabilities. This led us to incorporate asynchronous services through an event broker, ensuring comprehensive integration support.Key Challenges in Merging TechnologiesWe delved deeper into the complexities of integrating various technologies.Bami: As Product Owner of the Global Integration Platform, what key challenges have you faced in merging technologies like a service bus, API management, and an event broker into a unified platform?Manuel:One of the key challenges is that these technologies are often introduced at different times. For example, most companies start with API management and later realize the need for asynchronous capabilities. As a result, you end up with distinct interfaces for asynchronous and synchronous communication, even though they represent the same business entities.The challenge is merging these technologies and their interfaces cohesively. At HDI, we manage the platform, not the interfaces, but we issue guidance on building interfaces. We aim to have a consistent view of business objects, regardless of the integration product being used. The schemas of these business objects should align, whether they’re using OpenAPI or AsyncAPI.Goals for HDI Global SE’s Integration PlatformBami: What are the main goals HDI Global SE hopes to achieve with its integration platform, especially regarding cloud adoption?Manuel:Our primary goal isn’t tied to cloud adoption, but rather to achieving transparency for the interfaces created. We want a central point of observability, ensuring that security and architecture are aligned. It’s about reducing complexity and establishing standards.Open Source at HDI Global SEWe shifted focus to the role of open source in HDI’s strategy.Bami: Open source has transformed many industries. How has it impacted HDI Global SE’s approach to software development and integration?Manuel:One major benefit of open source over the past decade has been the standards that come with it, providing vendor independence when those standards are adhered to. We rely heavily on open source, including AsyncAPI, and many projects from the Cloud Native Computing Foundation (CNCF), which has been particularly influential.HDI’s Contributions to Open SourceBami: How does HDI Global SE contribute to the open-source community, and what benefits has the company seen from these contributions?Manuel:We contribute in various ways. I participate in the CNCF Serverless Working Group that is building CloudEvents and xRegistry, attend meetings, and we have created a case study for AsyncAPI. We’ve also sponsored your project and actively participate in open source projects through code contributions when needed.HDI Global SE’s Interest in AsyncAPIWe then discussed HDI’s interest in AsyncAPI.Bami: What sparked HDI Global SE’s interest in AsyncAPI?Manuel:Our interest in AsyncAPI stems from our goal of transparency. We maintain an API catalog for synchronous and asynchronous communication, with OpenAPI covering the former. AsyncAPI fills the gap for the asynchronous world, providing the same transparency for service-based topics and messages.Bami: How do you see AsyncAPI playing a role in HDI Global SE’s integration strategy, especially as the company continues its cloud adoption?Manuel:It's the same reason; it will be the part that enables transparency over asynchronous interfaces, service bus topics and messages in them, event brokers and events that are transmitted through these channels.Wrapping up, we explored Manuel’s thoughts on broader industry trends.Bami: What emerging trends in API management and cloud integration are you most excited about?Manuel:Asynchronous communication is still developing but will eventually be on par with synchronous communication in enterprise integration. I’m particularly excited about xRegistry, which will bridge the gap between synchronous and asynchronous communication by providing a standard for schema registries that can then host all business objects and their schemas, as well as the interface descriptions that are built upon those schemas.Through our conversation, it’s clear that HDI Global SE is not only adopting AsyncAPI but also actively contributing to its development. Manuel has been a driving force behind this partnership, and we’re excited to continue building towards a future of open, transparent, and efficient integration practices.We’re thrilled to welcome HDI Global SE as not only a Silver Sponsor but also our first end-user!🎉We’re excited about this collaboration and the shared journey to advance the AsyncAPI ecosystem together.Read more about HDI Global SE's AsyncAPI implementation case studyHave questions aboutHDI Global SE'sjourney with AsyncAPI or want to share your own experience? Join our vibrant community onSlackand let's continue the conversation!
"""
--------------------------------------------------------------------------------


Post 5
ID: https://www.asyncapi.com/blog/2024-marketing-report?utm_source=rss
Title: Marketing Report: December 2024
Link: https://www.asyncapi.com/blog/2024-marketing-report?utm_source=rss
Summary: A comprehensive review of AsyncAPI Marketing Working Group achievements in 2024, including social media growth, store closure updates, and future initiatives like the Student Ambassador Program
Content:
"""
Hello, everyone! I'm Bami, I’m the Community Marketing Specialist at the AsyncAPI Initiative, and I'm honored to serve as the Chair of the AsyncAPI Marketing Working Group. This role has allowed me to develop a unique perspective on how we can connect and inspire our community, build awareness for AsyncAPI, and further enhance our presence in the ecosystem. I’d like to share an overview of what we’ve been working on for the past six months, the initiatives currently underway, and our plans for the future.Overview of the Marketing Working GroupThe Marketing Working Group (MWG) is the driving force behind the AsyncAPI Initiative’s external engagement, community growth, and brand awareness efforts. Our mission is to encourage an active, informed, and passionate community by promoting the tools, resources, and stories that make AsyncAPI unique.
Some of the things we aim to accomplish:Increase Awareness:Develop and implement targeted campaigns to introduce AsyncAPI to a broader audience and create a clear understanding of our mission.Build Engagement:Design strategies to strengthen our community’s connection, enhance involvement, and showcase the powerful contributions of our members.Highlight Impact:Share stories, case studies, and successes from the community to inspire and inform potential contributors, users, and partners.Drive Growth:Attract new users, contributors, and partners through partnerships, events, and online activities that underscore AsyncAPI’s value in the tech landscape.
By aligning our goals with AsyncAPI’s mission, the MWG seeks to empower both seasoned and new members to engage deeply with the initiative.Below is a summary of what we’ve accomplished this year and our priorities moving forward.Accomplishments and MilestonesWe’ve focused on laying the groundwork for long-term growth and engagement for the last six months. Our marketing initiatives have been designed to elevate AsyncAPI’s visibility, simplify our communication strategy, and ensure we’re prepared to grow alongside our community.Here’s a summary of what we’ve done so far:Launched targeted social media campaigns that reached 5,031 impressions, supported by our community of designers:#AsyncAPIParis2024 campaign#YourAsyncAPIStory celebrating AsyncAPI at 8Held successfulonline eventthat engaged and informed over 350 community members and prospective contributorsImplemented regular content updates on our platforms to keep followers informed and engagedProposed the Student Ambassador Program initiative that aims to bring more attention to AsyncAPI's mission and tools, further building our presence and strengthening community tiesImplementing Buffer for Social Media ManagementTo improve the efficiency and security of our social media management, we’ve introduced a paid version of Buffer for posting content across our platforms. This change enables us to streamline content scheduling, ensuring consistent, professional updates without compromising security. Importantly, using Buffer restricts access to the main social media accounts, adding a layer of protection and allowing us to manage permissions efficiently.Here are some of the benefits of using the Buffer subscriptionCentralized Dashboard:Manage all social media platforms from a single interface, making tracking and organizing content easier.Improved Security:No need for multiple people to log into the actual social media accounts. This minimizes the risks of unauthorized changes or breaches.Better Analytics and Insights:Access in-depth analytics to understand which posts perform and engagement metrics best and adjust strategies accordingly.Content Approval Workflow:Allow team members to draft posts for review, ensuring high-quality content that aligns with AsyncAPI’s voice.Please note that I currently do not have direct access to AsyncAPI’s social media accounts. Buffer provides an effective solution for posting content, monitoring performance, and maintaining the high standards of AsyncAPI's public presence without broad access.As part of the benefit of using Buffer, we have access to our social media analytics. Below are the analytics for LinkedIn from January 1st to December 12th, 2024.AsyncAPI LinkedIn follower growth trends showing 48% increase from January to December 2024AsyncAPI LinkedIn performance dashboard showing key metrics from Buffer analytics for 2024In 2024, our LinkedIn performance saw impressive growth: a 48% increase in followers (3,910 total), 104% more impressions (100,328), and 91% more new followers (911). Engagement soared with a 219% rise in clicks (4,295 total) and a 9% improved engagement rate (5.32%). We also published 44% more posts (233), highlighting consistent content efforts.Tracking our performance on X (formally Twitter) has not been easy. Buffer does not have access to historical data. We can see numbers that show our performance since we connected Buffer in September, but we do not have historical data to demonstrate performance improvements.Closing the Online StoreOne significant change is the closure of our online store. After reviewing our budget allocations, it was clear that the store was not generating sufficient activity to justify its expenses. This decision allows us to redirect funds towards initiatives that better serve the community and our core goals. We’re considering alternative ways to share AsyncAPI merchandise in the future that are more cost-effective and in line with our community needs.As of June 2024, the items in the store were 2383. The goal was to disburse all of the items by December 2024.Chart showing breakdown of AsyncAPI merchandise inventory as of June 2024.Below is the breakdown of the item distribution and what we have left in the store.Paris Conference:1518 items sent to Paris as part of conference giveaways, speakers package, and the rest to be given to the ambassadors to help them promote AsyncAPI in their communities.London Conference:335 items shared with attendees and speakersTSC Members:40 items packed for the TSC members to acknowledge their contributions to the community.Mentors and Mentees:30 items distributed to mentors and mentees as tokens of appreciation for their participation in the mentorship programAmbassadors:2 packages were sent to two new ambassadors, each containing 11 items.Community Events and Giveaways:25 items for various online and offline events throughout the year.So far, $8,264.37 has been spent on maintaining the store and logistics. As part of the benefit of closing the store, merchandise will be made locally at the event location, and others will be made as per request.You can find all the information on the distribution board.Graph showing monthly expenditure breakdown for the AsyncAPI merchandise store.For more details on the store expenses, please go through our Open Collective pageMarketing Strategy Document and Student Ambassador ProgramTo guide our efforts, we're currently developing a comprehensive Strategy Document (PR#1358) that will outline our objectives, priorities, and target initiatives. Once finalized, the document will guide our upcoming campaigns, events, and community engagement efforts.Additionally, we are planning to introduce theStudent Ambassador Program, which aims to nurture future AsyncAPI advocates and contributors at the student level. The program will offer students guidance, resources, and community connections to help them grow within the AsyncAPI ecosystem. We believe this will strengthen our community and ensure that AsyncAPI remains a go-to resource for emerging talent.Community Growth and Future Focus AreasOur community has continued to grow steadily, with increasing participation in events, discussions, and open-source contributions. This growth underscores the need for a well-coordinated strategy that both attracts new members and retains existing contributors.
Looking forward, we’ll focus on:Implementing the Strategy Document:Utilizing our strategic roadmap to guide all our activities and initiativesLaunching the Student Ambassador Program:Engaging students worldwide to represent and support AsyncAPI within their schools and networksPromotions and Partnerships:Expanding AsyncAPI’s reach through strategic partnerships and new promotional effortsEnhanced Engagement with the Community:Creating more opportunities for community members to participate, share ideas, and grow their skillsWith these focus areas, we’re confident that AsyncAPI will continue to expand its influence and provide valuable support to both seasoned and new community members.Sponsor Involvement in the Marketing Working GroupThe Marketing Working Group thrives on collaboration, and we’re fortunate to have active participation from representatives of our sponsors, includingChristophe DujarricfromBump.shandGeorgie BurrowsfromGravitee.io. Their insights, ideas, and expertise are invaluable in shaping the group’s direction and ensuring that AsyncAPI’s marketing strategies align with the broader goals of our sponsors and the community.Who can Join the Marketing Working Group?The working group is designed to be inclusive and welcoming, not just for sponsor representatives, but also for any community members who wish to contribute.This collaborative approach ensures that diverse perspectives guide our efforts and allows the Marketing Working Group to act as a bridge between AsyncAPI’s community and its stakeholders. We'd love to hear from you if you have ideas or want to contribute!ConclusionThis report highlights the strides made by the AsyncAPI Marketing Working Group, including targeted campaigns, streamlined social media management with Buffer, impactful merchandise distribution, the development of a comprehensive strategy document, and the proposal of a Student Ambassador Program. We've also made strategic decisions, such as closing the online store, to optimize our budget for initiatives that deliver greater value to the community.Looking ahead, our focus will be on implementing the strategy document, fostering community growth, launching the Student Ambassador Program, and driving impactful promotions and partnerships. These efforts aim to strengthen the AsyncAPI ecosystem and create meaningful opportunities for collaboration and engagement.If you have any questions, suggestions, or ideas, please feel free to reach out to me on SlackAtinuke (Bami) Kayode.
"""
--------------------------------------------------------------------------------


Post 6
ID: https://www.asyncapi.com/blog/2024-gsoc-wrap?utm_source=rss
Title: 2024 Google Summer Of Code Wrap Up
Link: https://www.asyncapi.com/blog/2024-gsoc-wrap?utm_source=rss
Summary: For the first time in our history with Google Summer of Code (GSoC), AsyncAPI proudly participated as an independent organization. In previous years, we had joined the program under Postman’s umbrella
Content:
"""
For the first time in our history with Google Summer of Code (GSoC), AsyncAPI proudly participated as an independent organization. In previous years, we had joined the program under Postman’s umbrella due to the challenges of being selected as a participating organization. With Postman’s higher chances of acceptance, they graciously allowed us to include some of our projects under their organization. This year, however, marked a significant milestone as AsyncAPI stepped into the spotlight on its own.The goal of this post is to share our GSoC journey and offer valuable insights for future organizations and contributors. By reflecting on what went well, the challenges we encountered, and the lessons learned, we hope to help others make the most of this incredible program.Now, let’s dive into the key achievements and challenges of our participation this year.Key AchievementsWithout a doubt, our biggest achievement this year has been participating in GSoC as an individual organization. For several years, AsyncAPI applied as a standalone organization but was never selected.So, what changed this time? We took a step back to analyse potential reasons for our previous rejections and used those insights to refine our approach. One significant change was starting our preparation well ahead of the deadline. Special thanks go toAzeez Elegbede, who led the effort by curating project ideas, crafting our organization application, reaching out to potential mentors, and engaging with interested contributors. Azeez worked closely with the incredibleQuetzalli, whose expertise played a significant role in reviewing the application and project ideas, providing valuable guidance and support throughout the process.To showcase the impact of this year’s participation, let’s look at some key community accomplishments achieved during GSoC 2024.This year, we achieved our highest number of project idea slots in the history of our GSoC participation, with a total of7 slots.For the first time, we had4 ex-GSoC participantsreturn to the program as mentors, marking a significant milestone in building a cycle of mentorship and growth within our community.We received an impressive77 project proposals, the most we've ever had in our GSoC journey.Over100 new contributorsjoined our community from GSoC, showcasing the growing interest and engagement with AsyncAPI.AsyncAPI proudly participated as an organization at theGSoC Summit in San Francisco, whereLukasz Gornicki, one of our community members, delivered a lightning talk. His presentation focused on fostering a system that guides GSoC contributors toward becoming maintainers with mentor support, showcasing our commitment to strengthening the open-source ecosystem.We had a range of successful contributions that significantly advanced AsyncAPI projects such as:Ashmit Jagtapwho contributed extensively to the AsyncAPI Conference website by addressing existing issues and bugs, adding testing capabilities with Cypress to improve the contributor experience, and implementing support for call for speakers registration for the online edition of the conference. Additionally, Ashmit reviewed pull requests, mentored potential contributors, and ultimately became a project maintainer.Vishvamsinh Vaghelaenhanced the stability of scripts on the AsyncAPI website by ensuring all scripts functioned as expected and writing comprehensive unit tests to ensure smooth operations on the website, particularly as the number of contributors grew and more people worked on critical parts of the website.Ankit Dashadded dynamic preview image generation for AsyncAPI documents shared via the AsyncAPI Studio website. Ankit also shared his GSoC journey and contributions during the online edition of theAsyncAPI Conference.Mintu GogoiandYuan Yuanfocused on the AsyncAPI Generator project, resolving existing issues and bugs, triaging new ones, improving code through refactoring, and writing tests. Yuan shared their GSoC experience during the online edition of theAsyncAPI Conference.Ashmit JaiSarita Guptadeveloped a UI kit for the AsyncAPI website, based on the stunning designs byAishat Muibudeen. By using Storybook, Ashmit ensured brand visual consistency and created a modular, easy-to-maintain design system that streamlined further development.Esther Xiaois making significant improvements to the AsyncAPI VS Code extension by introducing an autofix feature. This enhancement helps streamline the editing process by automatically resolving common Spectral linting errors directly within the IDE.Each of these project ideas tackles key challenges within their respective repositories, bringing the initiative closer to its mission of fostering exponential community growth.We’re also beginning to see promising signs of these projects attracting long-term contributors, not only from this year’s GSoC participants but also from the broader AsyncAPI community.An Unexpected Turn of EventSometimes, things happen that are beyond your control, and that’s exactly what happened during the final phase of this year’s program.At AsyncAPI, we recognize that a project's final pull request may not always be merged within the program’s duration. This often serves as an opportunity to encourage participants to stay engaged and contribute beyond the program timeline.Here’s what happened: after successfully passing the final evaluation, one of our contributors announced on social media that their project was complete. However, their pull request was still under review by the mentor. While the mentor had passed the contributor during the evaluation due to the program’s deadlines and acknowledged their consistent hard work, they found the announcement to be unprofessional.Thanks to the mentor’s awareness, the contributor quickly removed the post and issued a heartfelt apology to both the mentor and the organizers.In light of this, we’d like to remind future GSoC participants and contributors in similar programs to avoid declaring your project “complete” until your final pull request has been merged and your mentor has confirmed the project’s completion. Let’s strive for professionalism and clarity in our contributions.The Sad StoryEvery year, when applying for GSoC, we’ve taken a two-way approach which is, applying as an independent organization while also submitting some AsyncAPI project ideas under Postman’s application just in case we weren’t selected. This year was no different, but we were fortunate enough to have both organizations accepted, giving us the flexibility to push all seven of our project ideas forward.Now, you might be wondering how is this even possible. Well, a few of us were employed by Postman specifically to work on AsyncAPI, which allowed us to coordinate participation for both organizations. With Postman’s higher likelihood of being selected, it made sense to submit some AsyncAPI ideas under their umbrella.What we didn’t foresee, however, was the sudden change of things. Postman unexpectedly laid off the entire AsyncAPI team, which not only marked the end of our roles there but also brought Postman’s participation in GSoC to a halt(possibly for future years as well). In light of this, GSoC organizers transferred all AsyncAPI-related projects from Postman to AsyncAPI, ensuring they continued under our banner.This turn of events means that moving forward, our participation in GSoC rests entirely on our ability to be selected as an independent organization. What if we don’t get selected next year? While that’s a possibility, I choose to remain optimistic. If we make it this year, we can do it again. And even if we aren’t selected, we have the AsyncAPI Mentorship Program, a program we created for moments like this. You can read more about why we started our mentorship programhere.This sudden change has made us face unexpected challenges as individuals, but we’re stronger, more determined, and deeply committed to our mission of fostering growth in the AsyncAPI community.Tips for further participantsWhile I believe that reaching for the stars is just the beginning for us as an open-source community, and with even more exciting project ideas lined up for future GSoC programs at AsyncAPI, here are some valuable tips for contributors aspiring to participate in GSoC with us:Start Early and Engage with the Community:Over the years, contributors who actively engage with the AsyncAPI community before GSoC even begins tend to have better chances of being selected. Early engagement allows you to build connections, understand the community’s needs, and showcase your commitment. It also helps you stand out to potential mentors and other contributors.Respect Maintainers’ Time:Remember, maintainers and mentors are often juggling multiple responsibilities, including their professional roles. Be mindful of their time by doing your homework before asking questions. Read available documentation, search for existing discussions, and ask clear questions when you need help. This respectful approach makes a strong impression.Focus on Quality Over Quantity:Avoid making superficial contributions just to show activity. Mentors value meaningful, impactful contributions over sheer numbers. It doesn’t matter if you’ve only contributed to the website repo instead of the generator repo, what counts is the thoughtfulness and effort behind your work.Participate Beyond Code Contributions:Being a successful GSoC contributor isn’t just about writing code. Engage in discussions, provide feedback on other contributions, and help answer questions from community members. Demonstrating your willingness to contribute in diverse ways shows your dedication to the community.Set Clear Project Timelines and Deliverables:When preparing your GSoC proposal, ensure your timeline is realistic and achievable. Break your project into smaller milestones with clear deliverables for each phase. This demonstrates your organizational skills and helps mentors see your plan for success.Communicate Clearly and Effectively:Good communication is key. Keep your mentors and the community updated on your progress, ask thoughtful questions, and don’t hesitate to seek guidance. Be proactive in addressing issues and responsive to feedback. Helping others in the community can also set you apart as a standout contributor.Seek and Act on Feedback:Throughout the program, regularly request feedback from mentors and implement it into your work. Showing that you can learn, adapt, and improve is a critical skill that mentors highly value.By following these tips, you’ll not only increase your chances of being selected but also leave a lasting positive impact on the AsyncAPI community.Special ShoutoutsPavel BodiachevskiiSambhav GuptaAnsh GoyalLukasz GornickiIván García Sainz-AjaAishat MuibudeenAkshat NemaThulisile SibandaSergio MoyaAzeez ElegbedeWe want to take a moment to extend our gratitude to the mentors above, whose dedication to the program made them go above and beyond to support and pass on their knowledge and forge meaningful relationships with our mentees. This program would not be possible without their unwavering support.A special shoutout goes to Postman, who has always allowed us to push some of our project ideas under their umbrella over the last few years, while it's sad to see this come to an end, we love and appreciate the opportunities, and the community as a whole will never take it for granted.A special thanks to Google for their belief in Free and Open Source Software (FOSS), for making this program possible every year as a show of their support to the open source ecosystem, and for allowing organizations like ours to bring passionate contributors and mentors to collaborate on a project all for the love of opensource.Finally, a wonderful shout toStephanie Taylor, the incredible program manager of Google Summer of Code, for her unwavering support during the transition of our projects after Postman’s departure. Her assistance with transferring mentor stipends to our preferred account was phenomena, and we truly appreciate her dedication and guidance!Closing RemarkIf you’re considering joining GSoC with AsyncAPI next year, we encourage you to hop into ourSlack communityand say hello in the#mentorshipchannel. We’re always excited to welcome new contributors and mentors into our growing family.We’re already looking forward to next year’s program and are committed to using this year’s lessons to make the experience even better.Until then, see you all next year, and stay connected!✌🏾
"""
--------------------------------------------------------------------------------


Post 7
ID: https://www.asyncapi.com/blog/2024-december-and-paris?utm_source=rss
Title: November and December Community Update And AsyncAPI Conf in Paris 2024
Link: https://www.asyncapi.com/blog/2024-december-and-paris?utm_source=rss
Summary: November and December Community Update And Paris Conference Summary
Content:
"""
I can't believe we are in the final weeks of the year, and it has been an eventful one. As a community, we have experienced both proud and painful moments, celebrated our victories, and faced challenges and losses. However, in the end, we overcame those difficulties and emerged stronger and better.Although this summary is a bit later than usual, I am excited to share the details of what happened in November and December and the highlights from the last conference of the year, which took place in Paris.AsyncAPI Community Building and Maintenance Goals Proposal 2025The 2025 community building and maintenance goals proposal is currently open for discussion and will soon be put to a vote for TSC members. We would love your thoughts and suggestions, particularly when solving our community's challenges.Please take a moment to review the open PR related to the AsyncAPI Community Building Goals for 2025to participate in the discussion and share your ideas and solutions.AsyncAPI Conf in Paris 2024The AsyncAPI Conf was back again in Paris this December, thanks toMehdi Medjaouiand the amazing team atAPIdaysfor hosting and sponsoring the venue. We participated in the three-day event, celebrating a year of theAPI Standardsbooth alongside friends from OpenAPI, JSON Schema, and GraphQL. Special thanks to all the members of the AsyncAPI community who could join the conference and help at the booth:Hugo Guerrero,Fran Méndez,Richard Coppen,Hari Krishnan, andLukasz Gornicki.The AsyncAPI Conf track took place on the 3rd day of the conference, featuring an impressive lineup of sessions that attracted a diverse audience. The event was consistently packed, with attendees engaged throughout the day.Attendees engaged through the sessions.Fran MéndezandLukasz Gornickistarted the track with a welcome speech and mentioned that AsyncAPI recently celebrated its 8th anniversary in November.Fran and Lukasz during the welcome speech.Naresh JainandPierre Gauthierpresented their keynote onTMForum's AsyncAPI for a New Era of Event-Driven Architecture. During the session, Pierre announced TMForum adopts AsyncAPI as a standard, with over 120 telco APIs already in production. TMForum has around 800 telco companies, and they will implement all APIs in an async manner, extensively utilizing the request-reply pattern.Naresh and Pierre presenting their keynote.Frank Kilcomminsdemonstrated how treating API governance as an enabler unlocks the ability to deliver compelling developer experiences for producers and consumers in event-driven architecture (EDA).Frank presenting on API Governance for EDA: Unlocking Developer Experience with AsyncAPI.Leonid Lukyanovshared how EDAs introduce new data models, protocols, and APIs not found in the traditional REST/CRUD application stack. And how one can abstract these elements to make them feel familiar to application developers, allowing them to create streaming applications seamlessly.Leonid presenting on Reimagining Streaming Apps with AsyncAPI and Postgres.Hugo Guerrerothen shared how the AsyncAPI Initiative is not only in charge of the specification but has created open-source projects to make it easier for developers to work with the specification documents.Hugo presenting on Using the AsyncAPI Ecosystem for Your Event-Driven Architecture.Julien TestutandAlessandro Cagnettishared how organizations can harness the full potential of event-driven integration by leveraging GoldenGate Data Streams, AsyncAPI, and Solace PubSub+ Event Mesh. They shared a great use case for AI and how it can be trained real-time and standardized with AsyncAPI.Julien and Alessandro presenting on Streaming Data Events Into An AI Cognitive Event Mesh Using AsyncAPI.Annegret Junkerexplained how to design effective asynchronous APIs by using an API-first approach. The importance of defining Kafka topics and structuring your definitions.Annegret presenting on AsyncAPI for Kafka.Jonathan Michauxspoke on how leveraging AI agents with AsyncAPI can create conversational interfaces that dynamically interact with event streams and asynchronous messaging systems.Jonathan presenting on AI Agents Meet AsyncAPI: Conversational Interfaces for Event Streams.Hari KrishnanandJoel Rosariotouched on leveraging the AsyncAPI specification as an executable contract and how to isolate and test each component within an EDA.Hari and Joel presenting on Contract-Driven Development for Event-Driven Architectures.Laurent BroudouxandHugo Guerreroended the day by explaining how to use Microcks to provide a solution for mocking and contract-testing your async APIs without extensive coding and empowering you to build extensive and reliable integration tests.Laurent and Hugo presenting From Nightmares to Sweet Dreams: Conquering AsyncAPI Testing!.Technical Steering CommitteePart of doing mentorships is witnessing the growth within the community, and we are excited to welcomeAshmit Jagtapas our newest addition to the maintainers list and TSC member. We are proud of the work you have done so far.Ashmit JagtapFinal RemarksIt's been a privilege to write the AsyncAPI monthly summary blog consistently. As this is the final blog for the year, I am genuinely grateful for the opportunity to serve and continue supporting the community.As we approach the holidays, I wish everyone happy holidays and a fantastic 2025.I'll be back next year with an overall review summary of 2024.Until then, stay safe, and happy holidays!
"""
--------------------------------------------------------------------------------


Post 8
ID: https://www.asyncapi.com/blog/2024-october-summary?utm_source=rss
Title: October Community Update And AsyncAPI Online Conference 2024
Link: https://www.asyncapi.com/blog/2024-october-summary?utm_source=rss
Summary: October Community Update And Online Conference Summary
Content:
"""
October marked the third AsyncAPI Conference, this time an online edition. As someone fortunate enough to be extensively involved in organizing the conferences, I saw the challenges that came with in-person events.
It gave me the idea to propose bringing back the online edition as part of the AsyncAPI Conference brand. We're glad and excited that we received positive results, with over360 viewsfrom attendees who watched and engaged with us.I want to express my gratitude to our financial sponsors,Gravitee.ioandPostman, as well as to the speakers for their engaging talks and the conference volunteers (be sure to check out theHall of Famesection).I encourage you to watch the recorded sessions if you missed the event. A playlist of the individual talks and slides will also be available on theconference website.AsyncAPI Community Building and Maintenance Goals Proposal 2025As we approach the end of 2024, we have a proposal outlining the community building and maintenance goals we should prioritize in 2025. Please note that the AsyncAPI community manager will manage and oversee these goals. The goals are poised to address some of the challenges our community is facing, such as the limited number of maintainers and the lack of onboarding materials, and pave the way for a more vibrant and thriving community.I encourage everyone to participate in the open discussion and share your thoughts and solutions.Please take a moment to review the open PR related to the AsyncAPI Community Building Goals for 2025.AsyncAPI ConferencesAsyncAPI Conf in Paris 2024We are excited to announce that the final AsyncAPI Conference will be held on December 5th in Paris, thanks to the amazing team at APIdays.The draft agenda is now available on our conference website, and the lineup of speakers looks fantastic.Additionally, we have a limited number of free community tickets available. To register, please visit theAsyncAPI Conference website.Note:When getting your tickets, please choose quantity one (1) of the Regular ticket and click the blue continue button to get your free ticket.AsyncAPI Conf 2025 VenuesThe discussion for potential venues for the AsyncAPI Conference 2025 is underway, and we invite everyone to participate. Please share your thoughts and suggestions for locations for the upcoming year in theAsyncAPI Conference 2025 open discussion. Your input is valuable to us!AsyncAPI Conference RebrandingIn 2023, we successfully launched the AsyncAPI Conf on Tour (AACoT). We followed our vision to host events in various locations, allowing us to connect with the community in multiple cities. As we expand our reach and grow as a brand, we believe it is necessary to drop "on Tour" and simply refer to our events as the AsyncAPI Conf/Conference moving forward.
Although we are simplifying the name, we remain committed to hosting conferences worldwide and enhancing our conference brand's visibility.We welcome your thoughts on this rebranding in the AsyncAPI Conf rebranding discussion.AsyncAPI at FOSDEM 2025Are you attending FOSDEM and interested in speaking? AsyncAPI will participate in the FOSDEM conference as part of theAPIs: GraphQL, OpenAPI, AsyncAPI, and Friendstrack.The Call for Participation is now open, and we encourage everyone in the community to apply. Deadline for talk submissions is December 15, 2024. This is another great opportunity to meet fellow community members!Should AsyncAPI Initiative Endorse The United Nations Global Digital Compact?The United Nations General Assembly has approved the Global Digital Compact, a commitment to ensure digital technologies support sustainable development and human rights.
AsyncAPI is one of the key standards for event-driven architectures, and our Executive Director,Lukasz Gornicki,has called for a voteto determine whether we, as the AsyncAPI Initiative, should endorse the Compact which aligns with our values of open-source software and collaboration.We encourage all community members to participate in the vote and share their thoughts on this important decision.Spec x ToolingWe're thrilled to announce that Glee has been migrated to a monorepo structure and is moving its core functionality to a new package called Gleequore, inspired by the Italian word "cuore," which means "heart."
This change will allow developers to leverage Glee's features without using the full framework, facilitating integration with platforms like Remix and Next.js.
We're also working on creating a "Glee for the browser" by extracting protocol adapters to support HTTP and WebSocket clients, overcoming current limitations. Kudos toFran Mendezand all the Glee maintainers for their amazing work!The packages are now available on the Glee repo; be sure to try it out.AsyncAPI Mascot Brand RefreshAs part of the AsyncAPI Bounty Program, we have a task to rebrand the Eve and Chan mascots. The designs look amazing so far!Eve and Chan - AsyncAPI MascotsPlease join the discussion and share your thoughts on the progress made on the brand refresh mascot issue.AsyncAPI Conference Hall of FameI want to extend a heartfelt thank you to the incredible volunteers who generously dedicated their skills and time to ensure the success of the Online Conference. From developers and designers to those working both on-stage and off-stage, their efforts made the planning and execution of the event seamless.Victoria NdukaMiracleAishat MuibudeenAshmit JagtapTenzin DelekAzeez ElegbedeOluwabamikemiSarvesh PatilRoland AwodaHridyesh bishtKomolafe JoshuaAnushka SaxenaManul PatelFuad ALIPHATIC AdegokeOlumideComing in NovemberAsyncAPI Community Updates Newsletter- The November Edition issue will arrive in your inbox on the 8th.Ensure you subscribe to the AsyncAPI Newsletter; you don't want to miss out.
"""
--------------------------------------------------------------------------------


Post 9
ID: https://www.asyncapi.com/blog/2024-september-summary-and-london?utm_source=rss
Title: September Community Update And AsyncAPI Conference London 2024
Link: https://www.asyncapi.com/blog/2024-september-summary-and-london?utm_source=rss
Summary: September Community Update and London Conference Highlights
Content:
"""
In September, we had our second in-person AsyncAPI conference after Helsinki; read all about it in theAsyncAPI Helsinki Conference update.This time, I had the privilege of being present in person. First and foremost, I would like to thankGravitee.ioand toGeorgie Burrowsfor sponsoring the AsyncAPI Conference. Their sponsorship enabled me to cover the visa expenses and travel costs. I also want to express my gratitude toLukasz Gornickifor his support and assistance throughout the process. It wasn't easy, but in the end, it was an incredible achievement for all of us, especially for me.AsyncAPI Conference London Edition 2024This year's London Edition was made possible by the amazing folks atAPIdays, and we were part of the 2-day APIdays London Conference. The AsyncAPI track took place on the first day, and we had an incredible lineup of speakers and talks that attracted an entire room of attendees.Full room of attendees.Lorna started things off with a session on Better AsyncAPI Governance and how to devise sensible standards that support usability, security, and reliability.Lorna presenting Better AsyncAPI Governance.Artur followed with a demonstration on harmonizing NATS, CloudEvents, and AsyncAPI to build scalable, robust, and maintainable systems.Artur presenting Harmonizing Asynchronous Systems: NATS, CloudEvents and AsyncAPI.Eduardo then shared a success story on how using AsyncAPI helps build API management platforms that enable event-driven architectures across domains by decoupling producers and consumers without compromising data contracts between parties.Eduardo presenting Event-Driven Architectures Through API Management and AsyncAPI.Later, Swen spoke on lessons we can learn from synchronous API design and architecture.Swen presenting Lessons from Sync API Design: What Makes A Good AsyncAPI?.During the break, theAPI Specs and Standards Boothwas busy with people interested in what the AsyncAPI Initiative is all about and the work we do.Specs booth during the break.Dale gave a session on how much information you need to know to design a solution around Kafka topics and illustrated the critical additional information a provider of an asynchronous API needs to provide.Dale presenting Topic Characteristics: What Do You Need To Know In Advance.Laurent shared how to use Microcks ready to work with Testcontainers to provide solutions for mocking and testing APIs without extensive coding.Laurent presenting Using Test Containers for AsyncAPI Unit Testing and Mocking.Will then demonstrated how Architecture as Code and AsyncAPI work together to create deployable environments for production and the deployment of WebSocket-based APIs in a financial organization.Will presenting Deploying WebSockets with AsyncAPI and Architecture as Code.Sho ended the day by taking us on a journey on how to build a cross-exchange trading bot and how AsyncAPI has the proper tooling to tackle pain points such as document inconsistency and missing language support.Sho presenting Building Cross-Exchange Trading Library With AsyncAPI.All the talks were incredible, and even the questions asked during the sessions were very insightful. Some of the slide presentations and recordings will soon be available under theResources Hub at the AsyncAPI Conference website.API Specs And Standards BoothWe teamed up with the OpenAPI Initiative team at the booth and had many insightful conversations.
The first day was bustling with activity, and it was interesting to see how many people were not familiar with AsyncAPI and the community.
They were very intrigued by how a bunch of folks with diverse expertise and skills from different continents and companies came together to represent AsyncAPI despite having never met. Our maintainers and ambassadors did a fantastic job educating and answering questions about the community, specification, and tooling.AsyncAPI Maintainers and Ambassadors Answering Some Questions.Day 2 at the conference was calmer and less busy than the first day, but we had the opportunity to visit other booths and get some contacts for the future.Day 2 at the booth with AsyncAPI experts. From left: Artur, Ian, Thulie, KhudaI would like to thank the experts for taking their time at the conference and volunteering at theAPI Specs and Standards Booth.Khuda Dad NomaniArtur CiocanuDaniel KocotFrank KilcomminsDale LaneLaurent BroudouxIan CooperRichard CoppenRicha SharmaAsyncAPI Conf in ParisAs you can tell, London was a success, and now there's an opportunity to be part of another fantastic AsyncAPI conference in Paris.The Call for Proposals for Pariswill soon close on the 12th of October, and we encourage anyone to apply.AsyncAPI Bounty ProgramThis month, we celebrate a significant milestone: the first anniversary of the official launch of the AsyncAPI Bounty Program. Our goal has been and continues to recognize and reward the efforts of our maintainers and contributors and to challenge the notion that contributing to Open Source is always free. You can learn about the history of the AsyncAPI Program fromthe redistribution of Open Collective funds discussion.As a community, we have greatly benefited from the program. For example, we have used the AsyncAPI Cheat Sheet at conferences, saved costs on Digital Ocean, and implemented an automated TSC voting process. For more details,please read the AsyncAPI Bounty Program Summary.Kudos toViacheslav Turovskyi(Ash) for his outstanding work in leading and managing the initiative smoothly.AsyncAPI Mantainership ProgramThe Maintainership Program is progressing well; we have received some excellent project ideas. Once the project ranking is complete, we will announce the call for applications soon.Keep an eye on the#09_mentorshipsSlack channel for the exact dates. For details on the submitted projects,please take a look at the Mentor/Maintainership discussion.AsyncAPI AmbassadorWe are excited to welcomeLorna Mitchell, VP of Developer Experience at Redocly, to theAsyncAPI Ambassador Program.Lorna MitchellComing in OctoberAsyncAPI Community Updates Newsletter- The October Edition issue will arrive in your inbox on the 9th.Ensure you subscribe to the AsyncAPI Newsletter; you don't want to miss out.AsyncAPI Online Conference-The Online Conference will take place on the 30th of October. Be sure to check the website for the Agenda and Speakers.
"""
--------------------------------------------------------------------------------


Post 10
ID: https://www.asyncapi.com/blog/helsinki-and-community?utm_source=rss
Title: AsyncAPI Conference Helsinki and the API Specs and Standards Concept
Link: https://www.asyncapi.com/blog/helsinki-and-community?utm_source=rss
Summary: Conferences are great. They bring communities together and give people a platform to share their experiences. But is that enough?
Content:
"""
How It All StartedAfter three years of hosting online conferences (2020-2022), the AsyncAPI community felt it was time for something different— an in-person event. We wanted to meet people face-to-face, to confirm that behind the virtual interactions were real humans, the ones you could have meaningful conversations with, not bots!In 2023, we organized multiple events under the brandAsyncAPI Conf on Tour. One of them took place atAPIDays Paris, made possible by the amazing folks behindAPIDays, who share our belief in the future of strong API specifications and standards.It was a fantastic opportunity, but we had one major concern—how do we find our community members in an event with thousands of attendees? How do we have meaningful conversations? And how do we engage with people who don’t know about AsyncAPI yet?
As you probably know, conference talks end, and people scatter. It’s easy to lose them in the crowd.One of the best places to meet people at conferences is at the sponsor booths. But as an open-source, community-driven project, we don’t have the budget for that kind of setup.Once again,APIDayscame to the rescue and offered us a booth.We decided to take it one step further—not just a booth for AsyncAPI, but a shared space for other open-source communities. At Paris 2023, we organized the firstAPI Specs & Standardsbooth, bringing together AsyncAPI, OpenAPI, and JSON Schema experts. We created a vendor-neutral, safe space for knowledge exchange, where experts from different companies shared their expertise without pushing for their products.AsyncAPI Conf on Tour at APIDays Helsinki 2024Our next stop wasAPIDays Helsinki 2024.Hugo kicked things off with a great introduction to the AsyncAPI spec and later wrapped up the track with an excellent session on testing event-driven architectures.Hugo presenting AsyncAPI basics.Jonas followed with a detailed overview of the AsyncAPI tooling ecosystem, showcasing the various tools built around the specification to support developers working with AsyncAPI documents.Jonas presenting the AsyncAPI tooling ecosystem.I then presented an overview of AsyncAPI use cases, demonstrating how different companies use AsyncAPI in production, all based on real data we’ve gathered over the years. You can explore all of this in ourAsyncAPI case studies.Lukasz presenting how AsyncAPI is used in production.The talks were engaging, and the questions that followed were great. Slides from the talks areavailable for download. But the best, most technical, and insightful conversations happened at theAPI Specs and Standardsbooth. We teamed up with friends from the OpenAPI Initiative and had deep, meaningful discussions.OpenAPI and AsyncAPI experts side by side. From left: Lukasz, Erik, Frank, Hugo, and Jonas.September 18-19 in LondonI won’t be attending the London event this year, but plenty of other folks will, especially at theAPI Specs and Standardsbooth. I hope you all have as much fun there as we did in Helsinki!OpenAPI and AsyncAPI experts getting to know each other during a Helsinki city run.If you haven’t grabbed your ticket yet, AsyncAPI community members can get free passes. Justcheck out the agenda and reserve your spot.December in Paris and the future of the BoothLooking ahead to December, we’ll have some free passes for the Paris event too. But honestly, the best experience is joining as a speaker. Not only do you get a free pass, but you also get to attend the speaker’s party the night before the event. Most importantly, it’s a unique opportunity to share your story with the widerAsyncAPIcommunity. CfP is still open.Of course, we’ll have a booth again. This time, it won’t just be AsyncAPI and OpenAPI folks—our friends from JSON Schema will join too.Since it’s the fourth time we’ll be hosting this booth, I have a feeling it’s time to take things up a notch. We need to be more organized, include more community members, and maybe even secure some dedicated funding. A rebranding could be in order, too—perhaps renaming the booth toOpen API Standards. We could also broaden the scope to include experts from the open-source tooling ecosystem that builds on top of these standards and operates under open governance.Enjoy!
"""
--------------------------------------------------------------------------------


Post 11
ID: https://www.asyncapi.com/blog/asyncapi-bounty-program-2024?utm_source=rss
Title: AsyncAPI Bounty Program Summary - 2024
Link: https://www.asyncapi.com/blog/asyncapi-bounty-program-2024?utm_source=rss
Summary: Annual update on the quarterly published set of tasks that are currently in demand among AsyncAPI Maintainers, targeted at engineers of Middle and Senior professional levels.
Content:
"""
AsyncAPI Bounty ProgramSince ancient times, sponsors furiously wanted to support Open Source. AsyncAPI addressed that need by starting to quarterly publish for Middle and Senior engineers a set of tasks that are currently in demand among AsyncAPI Maintainers and rewarding their completion using accumulated donated funds.During one year of existence of theAsyncAPI Bounty Program:32 GitHub issues were resolved,16 of whichhad complexity levelAdvanced;50+ PRswere merged in total;8000+ USDwere paid out as rewards.Benefits for FOSS CommunityAt leastone issuewas closed in a third-party project due to a fixed bug in AsyncAPI's software.Benefits for AsyncAPI GitHub OrganizationThanks to the Bounty Program Participants, AsyncAPI got:Automation in Technical Steering Committee voting process(Aayush Saini): New automation and theprocess around votinghave been introduced, as well astransparent summariesof each voting activity.New monorepo setup ingeneratorandparser-js(Ayush Nautiyal): Consolidation of smaller repositories into these two larger projects helped unify the dispersed community within the organization, fostering collaboration in a single location and accelerating development.Saving of costs on DigitalOcean (Ashish Padhy): AsyncAPI was running out of credits too fast, and withproper deployment changes, it's not the case anymore.GitHub Action refactored from scratch to use CLI (Ashish Padhy): Simplification is always a driver for innovation. Now official GitHub Action from AsyncAPI supports not only AsyncAPI Generator but also 1:1 all features from the CLI.Not just any but AMAZINGcheat sheet poster(Aishat Muibudeen): It is not only availablefor download, but is also used at AsyncAPI conferences.Benefits for AsyncAPI MaintainersThe Bounty Program gives AsyncAPI Maintainers the possibility:To announce a financial reward for GitHub issues that are currently in demand by the maintained project or the AsyncAPI Initiative as a whole, on which AsyncAPI Maintainers can either work and get rewarded themselves or delegate those issues to regular contributors who have more time and/or the necessary expertise.Benefits for Bounty Program ParticipantsTypical benefits of the Bounty Program for its Participants who are in the early stages of their career are:Development of a better approach to the evaluation of issues (it's fun reading messages from two months ago saying, '1-2 weeks left'.)First/differing working experience (fully asynchronous distributed teams are still rare, unlike partially asynchronous distributed ones.)Development of the possibility to showcase to the potential employer real-world work not obscured by an NDA.With all that said, join a finally sure way to directly sponsor (and get rewarded for) FOSS development.Giggly thing as a finishing touch:PRfor a bug due to which several lines were output incorrectly to the front end.Co-authored-by:Lukasz Gornicki
"""
--------------------------------------------------------------------------------


Post 12
ID: https://www.asyncapi.com/blog/2024-august-summary?utm_source=rss
Title: Community Update: August 2024
Link: https://www.asyncapi.com/blog/2024-august-summary?utm_source=rss
Summary: August Community Update
Content:
"""
The summer holidays are almost over, but the community hasn't slowed down. We've been receiving great news, and I'm thrilled to share that our list of sponsors is growing.We're excited to welcomeHDI Globalas our first end-user non-software vendor company as our Silver Sponsor. We're grateful toManuel Ottlikfor helping us secure this sponsorship.Additionally, we'd like to welcomeRoute4Meas our Silver Sponsor for the initiative. We're thankful for their support.Finally, we've received the transfers fromPostman. As promised, they've elevated their support from Gold to Platinum level and become a Platinum sponsor for theAsyncAPI Conf on Tour. They've also allocated an extra $10,000 to further initiatives within the AsyncAPI ecosystem.We're truly grateful for the support we're receiving to drive the vision and the initiative forward.AsyncAPI Conference'sWe are excited thatour 2nd AsyncAPI Conference will be in London on September 18th. The event will feature a fantastic lineup of speakers and a jam-packed schedule.
As promised, we have some free community tickets for the conference;please visit the AsyncAPI Conference website and click the register button.Note:When getting your tickets, please choose quantity one (1) of the Regular ticket and click the blue continue button to get your free ticket.If you are unable to attend our London conference, we will also be heading to the Paris conference on December 5th.Our Call for Proposals is still open, and we encourage everyone to submit a proposal and share their expertise with the community.Additionally,the Call for Proposals for our Online Conference is open. Don't miss this opportunity to participate in and join us for this virtual event.
The deadline for proposal submissions will be on the 20th of September.Spec x ToolingOpenAPI to AsyncAPI ConverterWe love seeing the impact of theAsyncAPI Bounty Programand how it solves community needs. One recently completed project introduced an OpenAPI 3.0 to AsyncAPI 3.0 convertor. The converter enables the easy transition of OpenAPI 3.0 documents to AsyncAPI v3. Thanks toMintu Gogoi'seffort and contribution, as well asJonas Lagoni, for reviewing, providing feedback, and providing guidance until the issue completion.For more details about the converter,please check the AsyncAPI converter readme.AsyncAPI Developer NetworkThe initial version of theAsyncAPI Developer Networkis out. Here, you can access all the details about the specification and its components, including bindings, schemes, and security. The main goal is to gather existing and new guidelines on the use cases of the AsyncAPI specification in one place.
Kudos toPavel Bodiachevskiifor his outstanding work.Be sure to visit theAsyncAPI Developer Network portalfor additional information.Kotlin-AsyncAPIThe donation forKotlin-AsyncAPIis complete, and the repository has successfully migrated under the AsyncAPI organization. Many thanks toLorenz Simon, and we are pleased to welcome him as a new AsyncAPI maintainer as well.AsyncAPI Maintainers ListThanks to our bounty program and support fromMateusz Szostok, we're now maintaining the list of all AsyncAPI Maintainers in one place in an automated way.
The functionality is based on GitHub feature calledCODEOWNERS. Each repository contains such a file and is the truth source for us. The new automation keeps an eye on these files and updatesMAINTAINERS.yaml. In such a large organization, it is hard to follow all the changes in ownership of certain repositories manually.Thanks to the automation, we also know that the current number of maintainers in the AsyncAPI Initiative is72.AsyncAPI Mentorship ProgramThe planning for the 3rd cohort of the AsyncAPI Mentorship Program is already underway. In this edition, we prioritize projects that promote maintainership, meaning project ideas should align with our goals and pave the way for contributors to evolve into maintainers.If you have an exciting project idea that should be part of the program, please share it in theMentorship Program 2024 discussion. If you want to participate as a mentor,please read more in the AsyncAPI Call for Mentors discussion.Case StudiesWe're thrilled to announce the publication of our second case study. The HDI Global brand provides life and property/casualty insurance services in Germany and internationally. They serve individuals and corporate clients and have offered industrial insurance since 2016.For more in-depth information,explore the HDI Case Study on our website.AsyncAPI AmbassadorWe are pleased to welcomeManuel Ottlik, Product Owner of the Integration Platform at HDI Global SE, as ourAsyncAPI Ambassador.Manuel OttlikIf you want to join the program or learn more about our current ambassadors, please visit ourAsyncAPI Ambassador Program Page.Coming in SeptemberAACoT'24 London-The London Edition will take place on September 18th and 19th. Be sure to get your tickets. See you there!!AsyncAPI Community Updates Newsletter- The September Edition issue will arrive in your inbox on the 5th.Ensure you subscribe to the AsyncAPI Newsletter; you don't want to miss out.
"""
--------------------------------------------------------------------------------


Post 13
ID: https://www.asyncapi.com/blog/2024-july-summary?utm_source=rss
Title: Community Update: July 2024
Link: https://www.asyncapi.com/blog/2024-july-summary?utm_source=rss
Summary: July Community Update
Content:
"""
It's been a month since our partnership with Postman ended, and some of our maintainers at AsyncAPI lost their jobs. However, we are proud of sponsors like IBM, who continue to support open source and the Initiative. Please take a moment to readSalma Saeed'sarticleon how IBM is supporting AsyncAPI in breaking the boundaries of Event-Driven Architecture.We also encourage the community tocontinue sharing and assisting the impacted professionals in finding new opportunities.AsyncAPI Conference'sAACoT'24 LondonWe are excited to announce a fantastic line-up of speakers and engaging topics for our AACoT'24 London edition. Keep an eye out on our Slack workspace for ticket announcements and other important updates for the event.
For a sneak peek of what to expect,be sure to take a look at AACoT'24 London Agenda.AACoT'24 Online EditionPreparations for our online conference are well underway. We have begun implementing our Call for Speakers page, thanks to the amazing contributions ofAshmit Jagtap. For a glimpse of how this is coming along,please review the Call for Speakers form pull request.In the meantime, please start preparing your talk submissions and get ready to present on the conference day, on the 30th of October.AsyncAPI Conf in ParisWe are excited to announce that the Call for Proposalsfor our "main event" in Paris is now open. Start preparing your talks and submit them before the final deadline on September 20th. Don't miss it!Please Note: When submitting your proposal, choose the "AsyncAPI Conference (part of apidays Paris- Dec 5)" option and then the AsyncAPI track.Spec x ToolingNew ProjectAfter a successful vote, we will onboard a new project calledKotlin-asyncapi. This project consists of code-first tools that simplify the creation of AsyncAPI documentation for Kotlin applications. It allows developers to write the AsyncAPI docs in Kotlin code using a DSL or generate it directly from the code. Additionally, it integrates with Spring Boot to serve the generated docs via a REST endpoint.
For more details,please refer to the open discussion on Donate kotlin-asyncapi. If you want to familiarize yourself with the codebase,check out the kotlin-asyncapi repository.Thanks toLorenz Simon, who chose to move the project under the AsyncAPI umbrella to enable collaboration with a wider community. Lorenz is also searching for volunteers to join him as project maintainers.Call for New MaintainersTheTypeScript/Node.js NATSand.NET C# NATS templategenerators are looking for new maintainers. If you want to maintain these templates, please express your interest in thets-nats-template discussionor thedotnet-nats-template discussion.AsyncAPI v3 SupportWe are excited to have the AsyncAPI Validator byWaleed Ashrafas one of the latest projects to support v3. The AsyncAPI Validator project validates your messages against your AsyncAPI document. Be sure to test andtry out the AsyncAPI Validator for your projects.AsyncAPI Bounty ProgramThe AsyncAPI Bounty Program Q3is making good progress. Out of the 9 assigned issues, 3 are now complete.We have awarded $600 for the completed tasks, and an additional $400 will be processed by the end of July.Mentorship ProgramsOur Google Summer of Code'24 mentors have recently submitted their mid-term evaluations, and we are thrilled that 7 out of 8 mentees passed their evaluation. We still have one more mid-term evaluation, and I'm confident they will also pass, as the mentees are working hard on their contributions.You can check out the accepted AsyncAPI project listand see what the mentees are working on.Technical Steering CommitteeTo improve transparency in the project and ensure regular monitoring of the TSC's participation, we have implemented an automated report of TSC voting with support fromAayush Saini. The report provides detailed information about the voting process, andyou can check out the first version of the TSC Overview doc report.As a TSC member, if you identify incorrect data,please create an issue in the community repositorywith the correct information, as it will allow us to review and address any issues with the automation process or voting discrepancies.Coming in AugustAsyncAPI Community Updates Newsletter- The August Edition issue will arrive in your inbox on the 7th. Ensureyou subscribe to the AsyncAPI Newsletter.
"""
--------------------------------------------------------------------------------


Post 14
ID: https://www.asyncapi.com/blog/2024-june-summary?utm_source=rss
Title: Community Update: June 2024
Link: https://www.asyncapi.com/blog/2024-june-summary?utm_source=rss
Summary: June Community Update
Content:
"""
We have some fantastic news to share: we are pleased to welcomeIBMas our new Gold Sponsor for this year. We are proud of IBM's ongoing support for the initiative. A huge thank you goes toSalma Saeedfor her efforts in making this happen.If you are interested in supporting the AsyncAPI Initiative or would like to know how we spend our donations, please take a look at ourAsyncAPI Financial Summaryfor detailed breakdowns.Postman Partnership ChangesIn recent developments, several dedicated professionals from Postman who worked full-time on the AsyncAPI Initiative have unfortunately been affected by structural changes marking the end of apartnership with Postman that lasted over three years.Despite the recent changes, it's important to note that Postman's dedication to AsyncAPI remains strong. The decision to let go of these talented individuals does not diminish the value or importance of AsyncAPI. Postman continues to acknowledge and support the significance of AsyncAPI in the industry and has significantly increased its financial backing for AsyncAPI.Postman has elevated its support to the Platinum level with an additional contribution of $12,000. Moreover, Postman will also become a Platinum sponsor for the AsyncAPI Conf on Tour, offering a $5,000 contribution. Additionally, they will allocate an extra $10,000 to further initiatives within the AsyncAPI ecosystem.Opportunities for Skilled ProfessionalsFor those professionals impacted by the changes, we urge the AsyncAPI community to come forward and help them in their job search. A list containing all names, profile descriptions, and contact information is available. We encourage the wider community toshare this information and assist these professionals in finding new opportunities.AsyncAPI Conf on TourWe are fast approaching theCall for Speakers for AACoT'24 London deadline. We encourage anyone to submit their proposals and share your expertise with the community.As we plan for the Online Edition in October, we intend to host the conference on Wednesday, 30th October. Please share your thoughts or vote in theAsyncAPI Online Conference discussionif you agree or would like to propose a new date.AsyncAPI Mentorship ProgramWe've had a few people asking if we'll be hosting our annual AsyncAPI Mentorship Program this year, and the answer is yes. We're planning to start the program around September, as we're currently focusing on mentorships under Google Summer of Code. Although this may seem far off, it will allow us time to plan properly, especially as we aim to include more Maintainership projects in the program. As we are in preparation for this, you can read about how the previousAsyncAPI Mentorship Program in 2023 went.Please keep an eye on our Slack channel for further announcements.AsyncAPI Bounty ProgramThe AsyncAPI Bounty Program Q3 is in full swing, with 9 out of 10 issues already assigned and being worked on. Meanwhile, half of the Q2 issues are still in progress. We are pleased to see the program positively impacting the community.
We want to express our gratitude toViacheslav Turovskyifor his dedication to running the program smoothly and ensuring that participants adhere to the Bounty Rules. For more details on the submitted issues, please take a look at theAsyncAPI Bounty Program Board.Community DiscussionsWebsite RedesignIn recent weeks,Aishat Muibudeen(Maya) has been conducting a UX audit on the AsyncAPI website and has identified user experience issues. In the audit, she proposed redesigning the website to address these issues and improve the overall experience. Please read theProposal to Redesign the AsyncAPI Websitefor more details.Marketing Working GroupWe have a new Marketing Working Group; the group aims to use marketing strategies to accomplish two key objectives: promoting AsyncAPI adoption and showcasing community achievements. It envisions close collaboration between the AsyncAPI community and sponsors by strategically demonstrating AsyncAPI capabilities and celebrating community successes. If you're interested in participating, please join theMarketing WG channel on Slack.TSC x AmbassadorsWe are excited to welcome two new additions to our Ambassadors. Please help us welcomeRaphael De Lio, Software Consultant at Xebia, andHari Krishnan, Co-Founder and CTO at Specmatic.Raphael De LioHari KrishnanIf you are interested in joining the program or want to know more about our current ambassadors, please visit ourAsyncAPI Ambassadors Program Page.Coming in JulyAACoT'24 London CFP Deadline-The Call for Speakers for AACoT'24 London Editionwill close on the 12th of July. Please submit your proposal soon and prepare to share your knowledge with the community.AsyncAPI Community Updates Newsletter- The July Edition issue will arrive in your inbox on Thursday the 4th. Ensureyou subscribe to the AsyncAPI Newsletter.
"""
--------------------------------------------------------------------------------


Post 15
ID: https://www.asyncapi.com/blog/2023-mentorship-summary?utm_source=rss
Title: AsyncAPI Mentorship Program Summary - 2023
Link: https://www.asyncapi.com/blog/2023-mentorship-summary?utm_source=rss
Summary: In April 2023, we embarked on the second chapter of the AsyncAPI Mentorship Program. I couldn't be more excited to share that it was a phenomenal success!

In The Beginning

Let's take a moment to rem
Content:
"""
In April 2023, we embarked on the second chapter of the AsyncAPI Mentorship Program. I couldn't be more excited to share that it was a phenomenal success!In The BeginningLet's take a moment to reminisce about the very beginning. The buzz started with a livelyMentorship Program discussionthat saw participation from over 28 eager individuals, hinting at the incredible potential of the 2023 edition. We received a total of 21 project ideas that were nothing short of impressive, covering a spectrum from coding challenges to creative designs and comprehensive documentation efforts.The sheer variety opened doors to an overwhelming wave of candidate applications - more than 90! The applications came from contributors of various skills and backgrounds, each one rich with potential. Given the wealth of talent and ideas, our biggest hurdle was our budget, which allowed us to fund positions for only 13 candidates. After much consideration and deliberation, we also made the challenging but rewarding decision to move forward with only 10 of the 21 proposed projects.Proposed Project IdeasSelected Project IdeasCandidate ApplicationsSelected Candidates21109013Common Applicant MistakesWhile we received over 90 outstanding applications(proposals), only 13 applications made it through the final phase. During the selection process, we identified patterns from most applications:Quality of proposal: We noticed that most folks who were already familiar with the project or mentor assumed an automatic pass, so they spent less time working on their proposal. This is wrong and one of the reasons applicants like that got rejected. We believe everyone should work equally, irrespective of their status in the community.A well-defined timeline: Most of the applicants seem to ignore the impact of the impact of having a well-written and broken-down proposal. Many applicants kept their timelines short and vague, but when reviewing this proposal, mentors must focus on the timeline because they expect you to deliver results based on the timeline provided in your proposal.Communication: Mentors often select applicants who are often in communication with them during the selection process, not just to help enhance their application but to help them understand the project better and give room for asking and answering relevant questions during the application and selection phase.Not an Internship: Reviewing and selecting applicants can be a tedious job, which is one of the reasons most mentors love to select applicants who don't see the program as a means to earn money. Mentors prefer folks who are interested in the project mostly because of their love for open-source projects.The ResultsAs I mentioned in the beginning, the program was a success. Now, let's have a more in-depth look. Compared to 2022, when only 6 of 10 candidates completed their projects, this year, 12 out of 13 candidates successfully completed them. If you ask me, that's an outstanding improvement! But unlike the last edition, where we had no evaluation phase, I believe the introduction of the evaluation phase made a really huge impact on the success of this edition of the mentorship program.Now, let's see what the evaluation phase was like for selected participants.What was the Evaluation Phase like?In the first evaluation phase, 11 candidates passed successfully, and two candidates were granted an extension to complete the phase along with the final evaluation. The second evaluation phase went smoothly, with a total of 12 candidates successfully passing. One reason for the successful second evaluation was our flexible evaluation period, allowing mentors to extend the deadline based on realistic timelines for their candidates.The second evaluation went well, with 12 candidates successfully passing the phase. One reason for the success of the second evaluation was that we did not enforce a really strict evaluation period. We defined a specific evaluation date but enabled mentors to extend it based on the date they feel is more realistic for their candidate.Throughout the evaluation phases, we received excellent feedback from mentors. They noted that certain mentees could develop their own solutions, think creatively, produce high-quality work, and demonstrate strong communication skills. During the first evaluation phase, some mentees had made significant progress, impressing us.It's important to mention that we evaluated both the mentees and the mentors during the phases. This approach allows us to provide feedback to mentors for improvement and better mentorship experiences in the future.Projects successDuring the program, eight projects ranging from engineering to design and writing got some great help. Let's shine a light on some of these projects:Website UI Kit design/dev project: Thanks to the success of this program, the AsyncAPI website got a design system, which is something we really wanted. Now whenever someone works on the website, there's a consistent way of doing things design-wise.Simulator Desktop Application:  The AsyncAPI simulator, which started as a project in GSoC '21 and was just a command-line tool, now has a version that works on desktops. Now it's easier for people to use it right from their computers.Documenting how different protocols work with AsyncAPI: A group of four candidates embarked on a detailed project documenting the interaction between various protocols and AsyncAPI. Thanks to the program, they developed and published two series of tutorials covering how to use AsyncAPI with theKafka, which has gotten 3559 views since its release, andWebsocketprotocols which has gotten 2689 views.Add support for translations: Thanks to the implementation of the i18n, the AsyncAPI website now supports translation. It will be easier to add support for multiple languages on the website.Rewriting Nodejs template to react engine with support for AsyncAPI v3: We overhauled the template by the program's success, transitioning from Nunjucks to the React template engine. Additionally, the template now supports the new AsyncAPI v3; this makes the template much easier to extend in the future with new features.Note: Each project chosen for the program was on the receiving end of profound contributions during this phase. For brevity, we’ve highlighted only a selection.Mentees' SuccessesWhile all the selected projects received outstanding contributions from the mentees, I'm pleased to share some of the successes experienced by the mentees who participated in this program after its completion.Path to Maintainership: After the program, the following mentees became maintainers of certain projects due to the knowledge they gained during the mentorship program.AISHAT MUIBUDEEN: Design maintainer in theAsyncAPI WebsiteAnsh Goyal: Committer in theAsyncAPI WebsiteSambhav Gupta: Code triager maintainer inAsyncAPI WebsiteKaushik Rishi: Code maintainer inNodejs TemplateVaishnavi Nandakumar: Docs triager maintainer inAsyncAPI WebsiteJoy Almeida: Docs triager maintainer inAsyncAPI WebsiteActive Contributors: With the dedication and guidance provided by our mentorship program, many mentees have grown into active contributors, driving positive change and making significant impacts within our community. Their journeys from eager learners to influential leaders stand as a testament to the power of mentorship and the potential within each participant.Full Circle: A few of these mentees have come full circle and now serve as mentors in this year’s Google Summer of Code (GSoC). Their transition from mentees to mentors is a testament to their exceptional growth and dedication. Once guided and nurtured through our program, these individuals are now giving back by sharing their knowledge and experience with the next generation of mentees. We are incredibly proud of their achievements and commitment to fostering a culture of learning and mentorship. Here's the list of mentees who became mentors:AISHAT MUIBUDEEN: GSoC mentor for theAsyncAPI Website UI Kit DevelopmentAnsh Goyal: GSoC mentor forScript Stability Enhancement for AsyncAPI WebsiteSambhav Gupta: GSoC co-mentor forScript Stability Enhancement for AsyncAPI WebsiteOutside the community benefit: Thanks to the invaluable support and guidance from the program, some mentees received job offers and sought-after internships.The achievements of these individuals highlight the transformative power of mentorship, demonstrating how dedicated support can unlock potential and pave the way for professional success. The program's successes are a testament to the hard work of our mentees and the unwavering commitment of our mentors to fostering growth and excellence.What's Next?Firstly, we'd like to thank everyone who made this program possible, and we are looking forward to the next edition, which will commence on the 20th of June 2024. If you are interested in participating in the next edition as a sponsor or contributor, please get in touch with us.How To Connect With UsJoinour AsyncAPI Slack workspace. Be sure to follow ourSlack etiquetteandour code of conduct.Join the dedicated Mentorship channel#09_mentorshipsfor all mentorship discussions. All mentees and mentors are there.Photo bySpaceXonUnsplash
"""
--------------------------------------------------------------------------------


Post 16
ID: https://www.asyncapi.com/blog/2024-may-summary?utm_source=rss
Title: Community Update: May 2024
Link: https://www.asyncapi.com/blog/2024-may-summary?utm_source=rss
Summary: May Community update
Content:
"""
May has been a fantastic month for our community. We are delighted to announce thatGraviteehas joined us as our new Platinum sponsor; thanks toGeorgie Burrowsfor making this happen.Furthermore, we are thrilled to welcomeSmartBearas our Silver sponsor; thanks toFrank Kilcomminsfor making this happen.We cannot thank our sponsors enough for their unwavering support. Your contributions are truly invaluable.AsyncAPI Conf on TourWe recently wrapped up our first conference of the year in Helsinki and are grateful to our speakers for coming to share their knowledge and expertise; slide content will be available on theconference website soon.Next, we'll be heading to London for our next event. We are stillaccepting proposals for speakers, and we encourage anyone who would like to share their expertise or insights with the community to apply. The deadline for submissions is July 12th.We also seek volunteers to help organize our upcoming online conference in October. If you are interested in being involved in the planning process, hosting, designing, or contributing to the conference page,please take a moment to fill out the Call for Volunteers form, and we will be in touch soon.AsyncAPI Website MigrationOurAsyncAPI Websitehas successfully migrated to NextJS + TypeScript for easy maintenance. Thanks toAkshat Nemafor leading this fantastic work and for contributions made byAshmit Gupta,Ashish Padhy,Vishvamsinh Vaghela,Ansh Goyal, andSambhav Gupta. Pleasereview the new codebase on GitHubandcheck out the pull request with the website migration changes.Spec x ToolingWe're excited to announce that a new case study fromHDI Global SEis in progress and will soon be available on our website. Please keep an eye on Slack for the announcement when it's ready. For a quick sneak peek of the work-in-progress, check out theHDI Global SE case study preview.AsyncAPI Bounty ProgramTheAsyncAPI Bounty Program is now accepting issues for Q3. If you maintain any AsyncAPI repository and have backlog issues you don't have time to address, please consider submitting them. We encourage the submission of design and documentation issues. For more details and to track the current progress for Q2, please check out theBounty Board.Community DiscussionExploring ways of project fundingWe are exploring ways to fund our project, such as monetizing YouTube. If you know of any other funding solutions we could incorporate into the initiative, please share your suggestions in the open discussion onExploring Different Ways of Funding Project Work.Slack Admin Rights for CoC CommitteeWe are updating and finalizing the new AsyncAPI Code of Conduct Committee documentation. To help ensure the safety of the Slack workspace, we are holding an open vote to grant admin rights to full-time CoCC members. For more details and to cast your vote, please look at theProposal for Slack Admin Rights for CoC Main Committee discussion.New HireWe are pleased to welcomeOluwabamikemi Kayodeas our first Community Marketing Specialist. With the collaboration of experts in the marketing working group, she'll help us spearhead our marketing efforts. Thanks to ourOpen Collective donations, Bami is the second person to join the AsyncAPI Initiative and work full-time.Coming in JuneAsyncAPI Mentorship Program- Many have been wondering if we will have a third cohort of the AsyncAPI Mentorship Program and when it will start. Be sure to keep an eye out for announcements this month.AsyncAPI Community Updates Newsletter- The June Edition issue will arrive in your inbox this week. Ensureyou subscribe to the AsyncAPI Newsletter; you don't want to miss out.
"""
--------------------------------------------------------------------------------


Post 17
ID: https://www.asyncapi.com/blog/asyncapi-website-migration?utm_source=rss
Title: Migration of AsyncAPI Website to Next.js v14 and TypeScript
Link: https://www.asyncapi.com/blog/asyncapi-website-migration?utm_source=rss
Summary: Migration journey of the AsyncAPI Website, features introduced, and future plans.
Content:
"""
We're thrilled to announce the successful migration of the AsyncAPI website from JavaScript and Next.js v12 to TypeScript and Next.js v14! This exciting upgrade unlocks a new chapter for the website, paving the way for improved scalability, streamlined feature implementation, and the powerful capabilities of Next.js. As a bonus, this migration also enabled a well-documented codebase and streamlined our testing process by reducing the reliance on Cypress tests. In this blog post, we'll delve into the exciting journey behind the migration and share what's new on the website. I'll share insights into our team's efforts, the research and planning involved, the challenges we tackled, the valuable lessons learned, and what exciting plans lie ahead for the AsyncAPI website.This migration journey spanned from February to May 2024, and it involved a dedicated team of contributors and maintainers passionate about the AsyncAPI Initiative and the ecosystem of tools it provides. We'd like to give a shout-out to our amazing team:Lukasz Gornicki,Rohit T,Akshat Nema,Ansh Goyal,Ashish Padhy,Sambhav Gupta,Vishvamsinh Vaghela, and myself,Ashmit JaiSarita Gupta. Their expertise and commitment were instrumental in achieving this exciting upgrade for the AsyncAPI website.What's new on the website?The migration to Next.js v14 and TypeScript brought several significant transformations to the AsyncAPI website. These changes paved the way for a more performant, scalable, and developer-friendly experience.Streamlined Development Workflow:TypeScript integration introduces static typing to the codebase, enhancing code maintainability, reducing errors, and providing better autocompletion. This simplifies the development process and promotes cleaner code.Component Refactoring:Much of the migration involved meticulously refactoring website components within the Next.js framework. This ensures optimal performance and lays the groundwork for future feature development.Improved Testability:Moving to TypeScript also enhances our testing capabilities. Static type checking helps identify potential issues early in the development cycle, leading to a more robust and reliable website.Improved Code Clarity with JSDoc:For developers diving deeper into the codebase, we've added comprehensive JSDoc documentation for all components and their parameters. This documentation clearly explains each component's purpose and function, along with detailed information about the parameters it accepts. This enhanced clarity simplifies understanding of the website's code structure and functionality, making it easier for developers to contribute. This will also help generate proper docs for UI components in the UI Kit, which I am currently developing as a part of my Google Summer of Code project.Enhanced Documentation and Blog Structure:We've introduced a new directory structure to streamline content management and leverage Next.js capabilities. Previously housed in thepages/docsandpages/blogdirectories, our documentation and blog now reside in themarkdown/docsandmarkdown/blogdirectories, respectively. This change allows for better organization and integration with Next.js's built-in features for handling static content.Consistent Code Formatting:We've implemented well-defined Prettier and ESLint rules to enforce consistent code formatting and style across the entire codebase. This not only improves code readability and maintainability but also simplifies collaboration among developers.Improved Static Data Management:Static data that was previously hardcoded directly within components and pages is now housed in dedicateddatafolders. This separation of concerns promotes cleaner code, simplifies maintenance, and facilitates data reusability across the website.Refined Configuration Management:Theconfigfolder now strictly stores configuration-related data. Static data previously stored within the configuration folder has been relocated to thedatafolders.Choosing the Right Framework for the AsyncAPI WebsiteA crucial step in our migration journey was selecting the most suitable framework. Given the current website setup and limited use of server-side rendering, we initially considered React with Vite.js. Vite offers advantages like faster development, improved performance, and a user-friendly development server. However, browser support and a less mature plugin ecosystem presented potential challenges.Next.js emerged as the preferred choice due to its focus on scalability, SEO, and developer experience. Features like server-side rendering (SSR), static site generation (SSG), and automatic routing contribute to these benefits. Additionally, Next.js offers built-in functionalities for image, font, and script optimization, streamlining the development process. While Next.js has a steeper learning curve, its comprehensive feature set and strong community support ultimately aligned best with our vision for the AsyncAPI website's future growth and feature expansion.Planning the Migration: A Stepwise ApproachTo manage the complexity of migrating the AsyncAPI website's codebase, which included various directories like components, pages, scripts, and configurations, we devised a structured plan. This plan involved dividing the codebase into manageable subdirectories, focusing heavily on dependencies between them. Key areas like contexts, utility functions (lib), and Netlify serverless functions required specific attention during the migration process. It's important to note that existing Node.js scripts used for build tasks fell outside the scope of the migration and would be covered in the upcoming GSoC 2024 project:Script Stability Enhancement for AsyncAPI Website. We also updated configurations related to tools like Git, Docker, and Prettier as needed within the TypeScript environment.Our migration strategy involved a meticulously planned, five-phase approach. Each phase tackled crucial aspects of the website's modernization:Basic Setup:This initial phase focused on establishing the new project's infrastructure. We configured a fresh package.json file, managing all dependencies. We set up the Next.js application, integrated Google Analytics and SEO functionalities, and made a production-ready build for deployment on Netlify.Setup Context:The second phase involved establishing contexts for elements like blogs, docs, and the tool filter system.Migrating Components:This was the longest migration phase in which we migrated over 250 components compromising icons, navigation, layout, buttons, dashboard, typography, tools, etc. Additionally, this phase involved the strategic elimination of any redundant components and optimizing the website's overall structure. It took us around the whole of March and April to complete this phase.Migrating Pages:In this phase, we migrated the pages of our website. Since all the components were migrated, this step was easy and quick for us.Final Touches and Launch:In the final step, we migrated Netlify functions, updated the readme, conducted a manual comparison between the old and new websites to address any UI discrepancies, resolved bugs, and took feedback from the community. Finally, we integrated the migrated website onto the main branch and deployed it to production.Challenges we facedNo significant project is without its hurdles, and our migration journey was no exception. Here are some of the challenges that we faced:Challenge:How do you manage PRs that will be opened during the migration?Solution:We tried to merge all PRs to the migrated website instead of the production website. However, the urgent changes were merged into the master branch and then pulled into the migrate-ts branch.Challenge:Handling the redundancy of the same type of specifications in multiple PRs and files.Solution:We decided to have a common types folder and defined all the types inside it that were being used at multiple places.Challenge:Multiple structures of the TypeScirpt components by different team members.Solution:We decided and created a coding guideline to be followed by all team members.Challenge:Encountering usage of alowlightpackage that wasn’t installed as a dependency. More interestingly, there's nothing likelowlight.registerLanguageas per their API docs, which were on the old website.Solution:This was the funniest part; the old codebase usedlowlight.registerLanguage, which was not provided by the lowlight API. We noticed the codebase worked fine withoutlowlight, so we removed every usage.Challenge:Error in rendering custom JSX components inside .md files.Solution:This was the most annoying error that we faced, and it remained unresolved for several weeks. Finally, we all assembled in a huddle call to fight with this and got the solution. It required to be converted into mdx file with proper format. We used prettier and eslint rules to get the proper format after converting all .md files.What’s next?The migration of the AsyncAPI website to Next.js and TypeScript before the start of the Google Summer of Code 2024 coding phase marks a significant step forward. This upgrade unlocks a new era of scalability, streamlined feature implementation, and enhanced developer experience. We're incredibly proud of the collaborative effort that brought this project to fruition, and we extend a heartfelt thank you to our dedicated team and the invaluable community feedback. As we move forward, we're excited to witness the contributions of our Google Summer of Code mentees and the exciting new features they'll bring to life. Vishvamsinh Vaghela will be working on thescript stability enhancement of the websiteand I will be developing aUI kit for the AsyncAPI websiteusing the Storybook and Chromatic. These advancements will streamline future development and elevate the developer experience of the AsyncAPI website. We invite you to explore the revamped website and share your feedback! Your continued support inspires us to continuously improve the AsyncAPI ecosystem. Stay tuned for further updates on our progress!
"""
--------------------------------------------------------------------------------


Post 18
ID: https://www.asyncapi.com/blog/gravitee-annoucement?utm_source=rss
Title: Gravitee Sponsorship Announcement
Link: https://www.asyncapi.com/blog/gravitee-annoucement?utm_source=rss
Summary: Gravitee Sponsorship Announcement
Content:
"""
Gravitee Sponsorship AnnouncementWe are thrilled to announce that Gravitee has joined the AsyncAPI Initiative as a Platinum Sponsor! This partnership marks a significant milestone for our community, promising exciting developments and enhanced support for our growing community.About GraviteeGravitee is a leading open-source API management platform designed to empower organizations with robust API lifecycle management capabilities. Gravitee offers a comprehensive suite of tools, including an API gateway, access management, and an intuitive API designer. These tools help businesses manage their APIs more efficiently, ensuring secure, scalable, and high-performing digital ecosystems. By leveraging Gravitee, companies can accelerate their digital transformation journeys, streamline API workflows, and deliver seamless digital experiences to their users.What This Partnership Means for AsyncAPIGravitee’s sponsorship as a Platinum partner is a testament to their commitment to advancing the open-source ecosystem and supporting innovative API solutions. This support is instrumental in advancing the AsyncAPI initiative. Their expertise in API management will be invaluable as we continue to develop and refine AsyncAPI specifications and tools. This collaboration will enable AsyncAPI to:Enhance Community Support:With Gravitee's backing, we can provide more resources, events, and initiatives to support our vibrant community of developers and contributors. Additionally, Gravitee's Platinum sponsorship includes a generous donation to the AsyncAPI Conf on Tour, further amplifying our reach and impact within the developer community.Expand Educational Initiatives:We will be able to produce more educational content, workshops, and tutorials to help developers harness the power of asynchronous APIs and event-driven architectures.Foster Innovation:This partnership will drive further innovation within the AsyncAPI ecosystem, encouraging the development of new tools and integrations that benefit the entire community.A Heartfelt Thank You to GraviteeWe are profoundly grateful to Gravitee for their continued support and commitment to the AsyncAPI initiative. Their sponsorship is instrumental in advancing our mission to enhance event-driven architectures and make asynchronous APIs more accessible and efficient for developers worldwide. Gravitee plays a vital role in shaping the future of asynchronous API development by joining us as a Platinum Sponsor and contributing to AsyncAPI Conf on Tour.We're excited to have Gravitee.io on board as a Platinum Sponsor, and we look forward to continued collaboration in advancing the AsyncAPI ecosystem!For more information about Gravitee and their API management solutions, visitGravitee.io. To learn more about AsyncAPI and our mission, visitAsyncAPI.
"""
--------------------------------------------------------------------------------


Post 19
ID: https://www.asyncapi.com/blog/2024-april-summary?utm_source=rss
Title: Community Update: April 2024
Link: https://www.asyncapi.com/blog/2024-april-summary?utm_source=rss
Summary: April Community update
Content:
"""
We are excited and commendSpecmaticfor their commitment to supporting open-source projects. They have sponsoredPavel Bodiachevskii, whose project assists in parsing AsyncAPI specs in Java and converting the parsed specs into executable contracts using thejasyncapilibrary. This kind of support is truly invaluable to the community and open-source maintainers. Pleasecheck out the latestjasyncapireleasefor more details.AsyncAPI Conf on TourWe are thrilled to announce that AACoT'24 will return to London this year, andthe Call for Speakers is now open. Start preparing your proposals today, and get ready to join us in September!On an exciting note, we're considering having an online edition sometime this year;please attend the upcoming community meetingfor more context.Spec X ToolingTheAsyncAPI Optimizerhas reached v1.0 thanks to the collaborative efforts ofViacheslav Turovskyi, who has joined as the new maintainer. For breaking changes,check out the release notes.Aklivity, one of the initiative sponsors, is developing Zilla, a multi-protocol service proxy for Kafka that now supports AsyncAPI v3 for configuration and validation. Pleaseread the announcement blogfor more technical details and explorethe Zilla Petstore Kafka API v2 docsorPetstore app demo.In our efforts to improve the contributor experience, we have introduced new help commands:/ptal, which pings reviewers to please take a look at the PR, and/update, which triggers the AsyncAPI bot to update a PR to the latest upstream. We are grateful toPriyansh Mehta,Khuda Dad Nomani, andAshish Padhyfor their contributions.Don't worry if you don't remember all these commands; you can always use the/helpcommand in a pull request, and the AsyncAPI bot will share a list of available commands.Community DiscussionsBelow are some community discussions that require attention.MarketingAfter some weeks of discussing the marketing efforts, we are now looking for someone to fill the role ofCommunity Marketing Specialist. Please have a look at theAsyncAPI Community Marketing Specialist Hiring discussionfor additional context on the role.AsyncAPI Working GroupsWe have a new Conference Coordination Working Group that focuses on planning, managing, and creating a seamless way to enhance the conference experience. If you want to join the working group or read more about their work, please check out theConference Coordination Working Group discussion.TSC x AmbassadorsWe're thrilled to announce a new automated TSC voting system! We want to thankAayush Sainifor working on the implementation, as this will make the voting process smoother, more efficient, and more transparent. With this new system, we hope to encourage greater participation and engagement. Please make sure toread the voting docsto familiarize yourself with the new voting system.Coming in MayAACoT'24 Helsinki- The Helsinki Edition will take place on May 28th and 29th. Please keep an eye out for announcements on community tickets on Slack and our social channels.AsyncAPI Community Updates Newsletter- The May Edition issue will arrive in your inbox this coming week. Ensureyou subscribe to the AsyncAPI Newsletter; you don't want to miss out.
"""
--------------------------------------------------------------------------------


Post 20
ID: https://www.asyncapi.com/blog/2024-Q1-docs-report?utm_source=rss
Title: AsyncAPI Docs Report - Q1 2024
Link: https://www.asyncapi.com/blog/2024-Q1-docs-report?utm_source=rss
Summary: During Q1 2024, AsyncAPI docs had a total of 26,923 sessions and 8,128 unique users.
Content:
"""
AsyncAPI Documentation Report - Q1 2024As a core maintainer of AsyncAPI Docs, I (Quetzalli Writes) volunteer to write periodic updates about the AsyncAPI Docs ecosystem. The goal is to keep the community informed about what's going on in docs and how docs contributors collaborate with other areas in AsyncAPI Initiative.OverviewDuring Q1 2024, AsyncAPI Docs had a total of26,923 sessionsand8,128 unique users. Our tutorials content bucket garnered the highest visitor count, indicating strong engagement. Additionally, our newer content bucket for migrations attracted a notable influx of new users, showcasing promising growth.Content BucketSessionsUnique Users/docs/concepts4,700838/docs/tutorials8,2043,171/docs/tools3,982991/docs/guides909254/docs/reference6,3481,991/docs/migration487122Presented below are the analytics for documentation sections developed during the 2023 Google Season of Docs (GSoD), spanning from December 1, 2023, to March 25, 2024:2023 GSoD projectsSessionsNew Usersconcepts/asyncapi-document2,653449tutorials/getting-started/request-reply455109Top Searches: Algolia AnalyticsWe've identified the most popular searches within the AsyncAPI documentation, as tracked by our Algolia analytics.KafkaandWebSocketare amongst the most frequently searched terms in our documentation.Here are the top 15 queries:RankSearch QueryNumber of Queries1oneof572array563kafka554websocket415enum366type357example358operation339avro3310allof3111schema3012payload2913bindings2814operations2615format262024 Google Season of Docs: ApplicationOur documentation lacks a persona-driven journey for diverse roles, such as documentation contributors, code contributors, ambassadors, maintainers, etc. Consequently, the AsyncAPI onboarding experience is not as efficient as it could be for new contributors, often resulting in onboarding calls being perceived as bottlenecks. To address this issue,AsyncAPI has submitted an application for 2024 Google Season of Docsthat proposes two projects:Onboarding Contributor GuidesandExpand Community Docs.We have also created a newAsyncAPI Slack channel named#temp-gsod-2024that anyone can join for:Mentees identificationMentors identificationIdeas identificationMentees, ideas, and mentors matchingNOTE: Google will publish the list of accepted organizations on April 10, 2024, at 18:00 UTC. Stay tuned for updates!Technical Writer Onboarding GuideIn our efforts to automate the onboarding process for new documentation contributors at AsyncAPI, we've created theAsyncAPI Technical Writer Onboarding Guide and Checklist. The guide is designed to empower new community members with the necessary knowledge and skills to contribute effectively to our documentation. We also believe this guide will encourage greater participation.Outlined in this guide are various workflows and processes, including:Responsibilities of technical writer contributorsOnboarding checklist for technical writersPrerequisite knowledge requiredOverview of the AsyncAPI docs communitySetup and tools necessary for documentation contributionsSteps to open documentation pull requestsGuidelines for creating new documentation directoriesEtc.ConclusionOverall, Q1 showcased continued progress and engagement for AsyncAPI documentation. The documentation witnessed a total of26,923 sessionsand8,128 unique users, indicating consistent interest in our resources. Notably, our Algolia analytics revealed thatKafkaandWebSocketemerged as the most sought-after topics within our documentation, shedding light on key areas of interest for our users.Furthermore, we're excited to announce that AsyncAPI has submitted an application for the 2024 Google Season of Docs. Our proposal outlines two impactful projects:Onboarding Contributor GuidesandExpand Community Docs. These initiatives aim to streamline the onboarding process for new contributors and enhance our community documentation, fostering greater collaboration and knowledge-sharing within the AsyncAPI community.Contribute to AsyncAPI DocumentationTo get started as a docs contributor, follow the steps in theAsyncAPI Technical Writer Onboarding Checklist.
"""
--------------------------------------------------------------------------------


Post 21
ID: https://www.asyncapi.com/blog/2024-march-summary?utm_source=rss
Title: Community Update: March 2024
Link: https://www.asyncapi.com/blog/2024-march-summary?utm_source=rss
Summary: Community update for March
Content:
"""
We are excited to announce and welcome our new Silver sponsor,Aklivity, to the AsyncAPI Initiative.Additionally, we welcome backRedHatback as our Bronze sponsor for 2024. We extend our gratitude toHugo Guerrero, our AsyncAPI Ambassador, for connecting the right people from RedHat.We encourage organizations to support the initiative by getting involved either financially, through employee participation, service provision, or hosting an AsyncAPI event. Please referto our AsyncAPI Financial Summaryfor a detailed breakdown.AsyncAPI Conf on TourThe call for speakers forAACoT'24 Helsinki Editionhas ended, and we will soon add the speakers, agenda, and ticket informationto the AsyncAPI conference website.If you missed the deadline for submitting a talk, we are happy to share that the proposals for AACoT'24 London will soon be open. Be sure to start drafting your proposals and prepare to join us in September.Spec X ToolingIt's been a while since we releasedAsyncAPI v3, and its adoption and support over the past few months have been amazing. We are happy to share some of the projects that are doing cool stuff with v3:MicrocksMicrocksis an open-source cloud-native platform for mocking and testing contracts. It is designed to work in isolation and cut dependencies, making contract testing easier. Microcks supports various protocols, including AsyncAPI, REST, and OpenAPI. It is the first open-source tool under the CNCF Sandbox project to officially support AsyncAPI v3; read all about it in theMicrocks v1.9 release article.Check outthis live demo on Test Containers and AsyncAPI/Kafkato learn more.SpringwolfSpringwolfis an open-source project that streamlines the documentation process for event-driven apps. It focuses on documenting asynchronous APIs using the AsyncAPI v3 specification. With Springwolf, you can easily generate comprehensive API documentation from your codebase by leveraging your application's metadata, such as listener annotations like @KafkaListener, @RabbitListener, and @SqsListener. It also includes springwolf-ui, a user-friendly web interface allowing easy publication of events to document channels.Be sure to test and trySpringwolf's live demo and documentation.Java Code GeneratorWe are excited to share that theJava code generatornow supports AsyncAPI v3 and is the first generator template to support v3. Thanks toDale Laneand other IBM folks for contributing to this milestone in developing AsyncAPI tools.Read how you canAccelerate event-driven projects with AsyncAPI v3for more details.jasyncapiThejasyncapiis a Java code-first tool for the AsyncAPI specification that now supports V3, thanks toPavel Bodiachevskiiand other contributors. Be sure tocheck the latest jasyncapi releasefor breaking changes.AsyncAPI Bounty ProgramWe are excited that the AsyncAPI Bounty Program Q2 is already underway after the success of the first quarter. Though we had one issue that wasn't completed,  it resulted in the participant's suspension until the 3rd quarter; we are happy that the ball is rolling forward.We still have a few issues that haven't been assigned yet. If you are interested, be sure to check theBounty Program Board.Community DiscussionsAsyncAPI Working GroupsAfter officially establishing Working Groups in the initiative, we are happy to share that we now have the following:Developer Experience Working Group. This group aims to empower the AsyncAPI user journey through intuitive onboarding, tools, and a frictionless experience. If you want to join the working group or would like to read more about it, please check out theDeveloper Experience Working Group discussion.Community Growth Working Group. This group's goal is to ensure that the AsyncAPI community grows in a healthy and sustainable way. If you're interested, you can participate by commenting on theCommunity Growth Working Group discussion.Essential Building Blocks Working Group. The goal is to provide fundamental building blocks that enable a similar developer experience across languages such as C#/.NET, Kotlin, Java, Go, Python,  and TypeScript/JavaScript. Anyone can join and contribute by sharing their interest in theEssential Building Blocks Working Group discussion.MarketingWe have started moving forward with the marketing discussion and had a meeting to streamline the work; pleasewatch the marketing recordingorlisten through Spotifyfor more context. One way we are moving forward with the discussion is to create a marketing working group and start inviting experts and sponsors to join us. We have also outlined some recommendations for hiring someone full-time to handle this aspect. If you want to help us with our planned steps or join the efforts, pleaseshare your comments on the Marketing activity discussion.TSC x AmbassadorsWe are excited to welcomeGiri Venkatesan, Developer Advocate at Solace, as the latest addition to theAsyncAPI Ambassadors.Coming in AprilAsyncAPI Community Updates Newsletter- The April Edition issue will drop on the 2nd week. Make sureyou're subscribed to the AsyncAPI Newsletter; you don't want to miss out!
"""
--------------------------------------------------------------------------------


Post 22
ID: https://www.asyncapi.com/blog/2024-february-summary?utm_source=rss
Title: Community Update: February 2024
Link: https://www.asyncapi.com/blog/2024-february-summary?utm_source=rss
Summary: Community update for February
Content:
"""
We are starting the year off with a bang as we got accepted to theGoogle Summer of Code 2024program after two years of rejections. It is an incredible achievement for the community, and we wouldn't have done it without our Doc's Lead,Quetzalli Writes, who crafted an excellent proposal, andElegbede Azeez. We are very excited to have received this opportunity, and you can readthe AsyncAPI Project Ideas Pagefor in-depth details on participating projects.AsyncAPI Conf on Tour 2024The planning of AACoT'24 is already underway as we prepare for our first conference in Helsinki on the 28th - 29th of May. We are putting in the final touches to update our conference website with the latest details, and we will soon announce the Call for Speakers. In the meantime, be sure to start crafting those proposals and get ready to share your expertise with the community.Financial SponsorsWe are thrilled to share that the initiative has secured new sponsors who generously paid for the entire year in advance. We welcomePostmanas a gold sponsor, who contributed $12,000, andHiveMQ, our silver sponsor, who gave $6,000.For more information about our financial budget, pleaserefer to the 2024 Budget discussion.Community DiscussionsWe have important discussions that require the community's attention:Marketing ActivitiesWe need to invest in marketing efforts this year, and as the first initial step, we have secured a budget of $24,000. The next step now is to find a workaround to achieve this goal. If you have experience or have insights on how we can spend and efficiently boost our marketing aspects, pleasejoin the Marketing Activities discussion.Doc's Project Ideas for GSoD'24Google Season of Docs 2024 is now open, and we plan to participate again this year. We are currently gathering project proposals for our application, and if you have ideas on areas we should improve or focus on in our documentation, pleasepropose new docs project ideas in the community discussion.Sovereign Tech Fund ApplicationTheSovereign Tech Fundis opening its applications for open-source organizations in Q2. We have some ideas and areas we should focus on for the application, such as CI/CD infrastructure. Be sure tojoin the Sovereign Tech Fund discussionif you want to collaborate or share application ideas.Code of Conduct Draft UpdateThe AsyncAPI Code of Conduct Committee is halfway through updating the current Code of Conduct to the latest version. They have created some documents that explain the procedures and guidelines that the CoC Committee will use to enforce the Code of Conduct. You can glimpsethe updated Code of Conduct draft by checking the work-in-progress pull requests.Cupid is Looking For MaintainersWe're on the lookout for maintainers for the AsyncAPI Cupid. The library focuses on finding and analyzing the relationships between AsyncAPI documents. If you're well-versed in Event-Driven Architecture and AsyncAPI, pleasejoin the Cupid repository discussionand help us drive its development.AsyncAPI Working GroupsWe are finally officializing working groups throughout the AsyncAPI community. A working group will be a community where people share similar interests beyond GitHub repositories. You can read theWorking Groups docsor view theWorking Group public discussionfor more comprehensive details.TSC Members x AmbassadorsWe are excited to welcome five newTechnical Steering Committee(TSC) members.Ashish PadhyAshmit JaiSarita GuptaPrince RajpootSambhav GuptaSamir AMZANIAdditionally, we have a new addition to theAsyncAPI Ambassadorsteam, raising the number to seven.Iván García Sainz-AjaExciting times for our growing community!Coming in MarchAACoT'24 Helsinki Call for Speakers- We will announce our Call for Speakers for AACoT'24 Helsinki by the first week of March. Start crafting those proposals and get ready to submit them.AsyncAPI Community Updates Newsletter- The March Edition issue will drop on the 6th. Make sureyou're subscribed to the AsyncAPI Newsletter; you don't want to miss out!
"""
--------------------------------------------------------------------------------


Post 23
ID: https://www.asyncapi.com/blog/2023-summary?utm_source=rss
Title: Annual Review: State of AsyncAPI Initiative 2023
Link: https://www.asyncapi.com/blog/2023-summary?utm_source=rss
Summary: 2023 Year in Review
Content:
"""
It's almost unbelievable that we are in 2024. And if you are reading this, Happy New Year to you and your loved ones. Continuing the tradition, we look at how the community has grown over the last 365 days and look forward to our next phase.If you are curious about our past achievements, pleaseread the previous 2022 AsyncAPI summary.Community MetricsWhat better way to reflect on the past year than with numbers? Data is the most significant way to gauge our growth and measure our visible impact as an open-source community.SlackAs of 2024, we are currently at an overall total of4,471members in the AsyncAPI workspace. The Slack workspace is our primary communication medium, from updates to helping contributors and new adopters onboard with the AsyncAPI spec and tools.In 2023, we had 1488 people joining our workspace:Below are our top 5 members who joined the community in 2023 and have been the most active among other newcomers. As a community, we are proud of their contributions to our Mentorship programs. They even keep us entertained with memes😀.Additionally, our weekly activity continues to grow as we run different mentorship programs and initiatives that bring traction to our community.Social MediaWe use social media to communicate news and updates around our community. We don't use it for marketing.And honestly, I didn't invest much when it came to socials, so don't expect big big numbers😝Let's dive into the data:LinkedInFor our LinkedIn page, we are currently sitting at2988overall followers. During 2023, we gained a total of849followers since 2022.We also don't use any premium or marketing services; everything you see here is 100% organic. Even though LinkedIn still has much to offer, it is better than the X/Twitter app.X/TwitterWe gained almost 1K followers since 2022, and now have 4.4k overall followers. When it comes to website referrals via Twitter, we have seen a decline compared to last year, 2022Although the decline is shallow, I'm not extremely worried. Most top tweets for this year were appreciation tweets balanced with technical tweets. We don't use advertising because we don't consider the X/Twitter platform worth additional investment.YouTubeThe AsyncAPI YouTube channel performed way better than expected, especially as we moved from online to in-person conferences. We currently have over 364 people subscribed to our channel, increasing total subscribers to over 1.46k. Our live streams and conference recordings bring in a lot of views, leaving us optimistic for 2024.NewsletterOn the 5th of April, 2023, we sent out our first AsyncAPI Community Updates Newsletter. The main aim was to summarize monthly community activities/initiatives straight to your inbox.
Over the past nine months, the December Edition was the most popular due to the release of the AsyncAPI v3 (one of our major accomplishments in 2023).And, of course, I'm not exempt from unsubscribers. Although the number might seem minimal to some, it still stings as a writer.Looking forward to sending the 2024 Editions!!🎉🎉Google AnalyticsAsyncAPI website sessions and unique user have increased significantly over the past year. Our major contributor to these metrics comes from docs, and we expect to see more in the coming year as people want to know more about the AsyncAPI v3.We also lost 21 days' worth of data during October due to a PR update that affected the analytics workflow, but we are doing well.Google Search ConsoleGoogle Search Console is one of my favorite tools as it shows how much impact and interest we are gaining. Compared to 2022, we can see a surge in impressions and clicks.GithubThe number of contributors in the community keeps growing, from having over1600contributors in 2022 to2320contributors in 2023.Although we have a handful of maintainers, we try our best to manage, resolve, and close issues as much as we can. Additionally, we are focusing on growing the number of maintainers in the coming years.NPMNumbers don't lie; and yes, these are the total downloads of the top AsyncAPI packages hosted in the Node Package Manager. We can also see the adoption of AsyncAPI spec downloads increased from 5M to 17M since 2022.If you are worried about the project slowing down anytime soon, we are still growing strong.Community AchievementsWe achieved so much this year, and here are some of the highlights from the AsyncAPI community in 2023!We had our first community hire,Thulisile Sibanda, to work full-time as the project's Community Manager.Lukasz Gornickiwent from Community Guardian to Executive Director (boss moves right there😂😂). And yes, he's planning to get rid of the title soon.TheAmbassador Programincreased this year from having 3 ambassadors to 5.We launched the AsyncAPI Community Updates newsletter.Released theParser-JS v2.We launched theAsyncAPI Bounty Program, where we successfully resolved and paid out a total of 11 out of 16 issues during the initial trial and 2023 Q4 round.Established our very firstAsyncAPI Code of Conduct Committee.Barbaño González shared a detailed article onWhy Women Are Underrepresented In Open-Source.Participated inGSoC'23andGSoD'23, while kickstarting theAsyncAPI Mentorship Program II.Held our first in-personAsyncAPI Conference on Tourin London, Madrid, Bangalore and Paris.Released theAsyncAPI v3.Launched theAsyncAPI Store.We hope you enjoyed a glimpse into our 2023 highlights; we have even more planned for 2024! Learn about our2024 AsyncAPI Community Building Goals.
"""
--------------------------------------------------------------------------------


Post 24
ID: https://www.asyncapi.com/blog/conference-2023?utm_source=rss
Title: AsyncAPI Conference on Tour 2023 Report
Link: https://www.asyncapi.com/blog/conference-2023?utm_source=rss
Summary: In 2023, we hosted our very first in-person conference edition. Find out how it all went down!
Content:
"""
For three consecutive years, we have hosted online conferences, and in 2023, we decided to take it up a notch and move to in-person events.
The idea was to have aconference tour with micro meetups in different cities, giving birth to the brandAsyncAPI Conf on Tour (AACoT).Now imagine this: planning the very first AsyncAPI in-person conference by someone organizing an event for the first time; you would wonder what kind of faith the community had in me.
Being part of AACoT'23 was an adventurous, bumpy ride that came with valuable lessons.The Planning ProcessWe initially envisioned having five meetups per continent. For people who started the conference planning late, you would think we were being too optimistic.
At the end of the year, we managed to accommodate and have four confirmed locations.So much had to be put in place, like updating the conference website, starting with the marketing, creating announcements, doing calls for speakers, etc. We had to think on our feet most of the time.ChallengesOur biggest challenge of all was that the AACoT'23 planning started late. This meant that for every decision and effort we made, we were dashing against the clock.Planning and marketing were complex since most venues were confirmed a few weeks before the summer holidays.In terms of promoting the events, we had some challenges in certain locations as we expected some support in this regard. This would have helped boost the event's visibility, but we were partly at fault since this wasn't communicated prior.Sometimes, free things can be costly! All the conference tickets were free. Of as many those who redeemed free tickets through Open Collective, only less than 50% showed up. It was very discouraging as food and resources that could have catered for everyone went to waste.There was no time to rest between the events as they all happened one after the other.We didn't have a sponsorship budget. By the time we thought about this, it was way too late.LessonsTime and money are essential! When it comes to building a brand and conference planning.
I can't over-emphasize the importance of early planning, as we have seen in the past year, which we will prioritize for AACoT'24.Firstly, having open communication and fostering strong partnerships with our sponsors is undeniable. Before we agree and confirm the location, each venue must meet our community's minimum requirements, especially regarding support in marketing and participation in the planning process.Secondly, open up sponsorship tiers for companies and individuals who want to support us. Running AACoT requires a lot of funds, especially when it comes to swag costs, shipping, and going further to provide travel scholarships to community members who would like to participate. So, having a separate budget for AACoT is very crucial in this regard.Lastly, spacing all the conferences this year. Instead of what happened in 2023, where we had all meetups lined up a few weeks apart from each other, in 2024, we plan to have one conference each quarter. Additionally, this will give people time to prepare and plan to travel.AttendanceThough you may have an idea of how the attendance went, the best takeaway is that we had time to network, connect, and learn during the conferences.
Being our first year, we did fairly well regarding attendance numbers. We had 225+ individuals who attended in person, and two of our events were live-streamed, receiving over 820+ views.In addition, during our time in Paris, we also organized anAPI Specs and Standardsbooth, where we held discussions with people from the API world while promoting the conference.Who Made AACoT'23 PossibleAACoT'23 was only possible with our Event Hosts and Sponsors. These organizations provided a venue to host the conference and sponsored us lunch, breakfast, and refreshments; some even provided live stream coverage for those who couldn't attend.We are truly grateful to them for their contributions!SpeakersWhat is a conference without our star speakers? These individuals took time out of their busy schedules to share their expertise.
They provided valuable industry insights, and we are proud of the network we built during the events.You can also catch up on the live recording fromAACoT'23 MadridandAACoT'23 Bangalore.Special Shout-OutI want to express my gratitude to these individuals and many others for their unwavering dedication in assisting with AACoT'23 behind the scenes.
They contributed to the design of website prototypes, conference design implementation, creating promotional videos, reviewing Call for Papers (CfPs), editing conference recordings, and providing constant communication and support. I am genuinely thankful for their hard work and commitment.Aishat MuibudeenLukasz GornickiAzeez ElegbedeBarbanio GonzálezIván García Sainz-AjaDale LaneSouvik DeKaruna TataJonas LagoniFlorence NjeriWhere To Next?As we plan for AACoT'24, we are excited to announce thatAPIdayswill be hosting us in Helsinki on May 28-29th, London on September 17-18th, and Paris on December 3-5th.
Additionally, we are exploring the possibility of holding the event in Lagos in early Q2 or later.If you are interested in sponsoring AACoT'24, we welcome financial sponsors or event and host sponsors.You can check out ourOpen Collective Pageto see the current sponsorship tiers ordownload our conference sponsorship prospectusfor more information.
"""
--------------------------------------------------------------------------------


Post 25
ID: https://www.asyncapi.com/blog/2023-Q4-docs-report?utm_source=rss
Title: AsyncAPI Docs Report - Q4 2023
Link: https://www.asyncapi.com/blog/2023-Q4-docs-report?utm_source=rss
Summary: In Q4, AsyncAPI docs had primary engagement across the tutorials and reference content buckets.
Content:
"""
AsyncAPI Documentation Report - Q4 2023As a core maintainer of AsyncAPI Docs, I (Quetzalli Writes) volunteer to write periodic updates about the AsyncAPI Docs ecosystem. The goal is to keep the community informed about what's going on in docs and how docs contributors collaborate with other areas in AsyncAPI Initiative.OverviewDuring Q4 2023, AsyncAPI Docs had a total of19,267 sessionsand6,447 unique users.The successful contributions from the2023 Google Season of Docsand the2023 Technical Writing Mentorship Program, made significant strides in documenting the intricacies of the new Spec 3 and its enhanced features.Sessions percontent bucket:/docs/concepts:1,861 sessionswith286 unique users./docs/tutorials:5,528 sessionswith2,139 unique users./docs/tools:2,492 sessionswith665 unique users./docs/guides:523 sessionswith167 unique users./docs/reference:6,834 sessionswith2,629 unique users.Google Season of Docs 2023 (GSoD)AsyncAPI was accepted into Google Season of Docs 2023 for two projects:documenting the AsyncAPI document in detailandcreate a 100-level interactive learning path. We received a total budget of $10,350.Project 1: AsyncAPI document structureOur first identified challenge involved updating the documentation for the structure of an AsyncAPI document to align with the latest specification, version 3.0.0. The new version introduces numerous changes and features, necessitating a revision of the configuration guidelines for AsyncAPI documents. To facilitate easier implementation of Event-Driven Architectures (EDAs), our documentation needs to provide more comprehensive explanations of the different sections within an AsyncAPI document. We've introduced a dedicated/AsyncAPI-documentsubdirectory within theConceptsarea. That new section delves into the structure of an AsyncAPI document, with each component meticulously detailed on its own page.Project 2: Create a 100-level interactive learning pathThe second challenge we've addressed is launching a beginner-friendly, 100-level introduction to AsyncAPI. Our new interactive learning path is enhanced with engaging e-characters and a creative storyline, employing creative metaphors to effectively convey technical concepts. That new interactive educational resource will soon be available on ourAsyncAPI Killercoda profile. To support this initiative, we've established a dedicated repository for interactive learning content athttps://github.com/asyncapi/learning-paths.Our new interactive learning path features a narrative where theAsyncAPI mascot Eve assists Chanin repairing his spaceship following an unexpected crash in Eve's backyard. Throughout this journey, various API concepts are elucidated using the engaging theme of fixing Chan's spaceship. In"Module 1: Introduction to AsyncAPI,"Chan's spaceship crash lands in Eve's backyard, serving as a backdrop to explore AsyncAPI, its usage, and real-world applications. The story progresses to"Module 2: Event-Driven Architectures,"where Eve examines the spaceship's engine, introducing event-driven systems and their design using AsyncAPI, particularly for microservices. The"Module 3: AsyncAPI Specification"sees Eve helping Chan program his spaceship, delving into the AsyncAPI document structure, including its various components like info, channels, and schemas. The narrative continues with"Module 4: Creating and Validating AsyncAPI Code and Documents,"where Chan returns to his planet to test communications with Eve, focusing on writing, validating, and hands-on exercises for AsyncAPI documents. The journey concludes with Module 5, a summary of the learning outcomes, a teaser about checking AsyncAPI tools, and a link back to the documentation.AsyncAPI 2023 Mentorship Program -technical writingcategoryIn the AsyncAPI 2023 Mentorship Program, thetechnical writingcategory started documenting how the Kafka and Websocket protocols work with AsyncAPI. We also detailed different kinds of schemas to manage with AsyncAPI.The below table lists sample topics covered:Kafka with AsyncAPIWebSockets with AsyncAPICreate AsyncAPI document for app interacting with KafkaTutorial for WebSockets with AsyncAPIKafka Specific BindingsTutorial for Request Reply using WebSocketsSpec 3.0 DocsAll AsyncAPI docs now align with the latest specification, version 3.0.0. The new version introduces numerous changes and features, necessitating a complete revision of the docs. The newrequest/replyfeature from version 3 has been comprehensively documented, enriching both ourConceptsandTutorialssections.ConclusionOverall, Q4 showed a period of significant growth and achievement for AsyncAPI Docs. The data speaks volumes: with a total of 19,267 sessions and 6,447 unique users, with primary engagement across the/tutorialsand/referencecontent buckets.We enhanced our documentation to align with Spec 3.0.0, introduced a dedicated/AsyncAPI-documentsubdirectory within theConceptsarea, and created an innovative, interactive 100-level learning path stand. These additions not only provided in-depth knowledge of the new Spec 3.0.0 but also made learning more engaging and accessible to our community. Moreover, our focused efforts in documenting specific protocols like Kafka and WebSockets under the Mentorship Program further diversified and strengthened our content offerings.Overall, Q4 2023 was a testament to our commitment to delivering high-quality, relevant, and community-friendly documentation, setting a strong foundation for continued growth and innovation in the coming year.How to contribute to AsyncAPI DocsDid you know that you can contribute Docs to AsyncAPI as well?Code isn't the only way to contribute to OSS; Dev Docs are ahugehelp that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution.❤️To get started as a Docs contributor:Familiarize yourself with ourproject's Contribution Guideand ourCode of Conduct.Head over to ourAsyncAPI Docs Board.Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started.If there is no work done in that Docs issue yet, feel free to open a PR and get started!Docs contributor questionsDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!Tag me in your AsyncAPI Doc PRs orGitHub Discussionsvia my GitHub handle,quetzalliwrites🐙.Talk to meI want and need to listen👂🏽to all of your perspectives and ideas. Please don't be shy to express to me what you think needs to be documented first or what is missing.📝There's a lot of good work ahead, butyoudetermineour content roadmapbecause the OSS community needs should always come first.✨
"""
--------------------------------------------------------------------------------


Post 26
ID: https://www.asyncapi.com/blog/introduction-to-glee-a-spec-first-framework?utm_source=rss
Title: An Introduction to Glee
Link: https://www.asyncapi.com/blog/introduction-to-glee-a-spec-first-framework?utm_source=rss
Summary: Glee is a powerful spec-first framework that streamlines the building of server-side applications. By integrating your code with the spec, Glee takes care of the heavy lifting involved in creating and managing connections, allowing you to focus on the business logic that truly matters.
Content:
"""
For the last year, I have been working full-time on AsyncAPI, where I have actively taken part in building a new framework calledGlee. This is the first of many blogs to come where I will be talking about Glee and all the cool stuff we can build with it. In this blog, I will introduce Glee and give a broad overview of how to get started and keep up with Glee's development.IntroductionGleeis a powerful spec-first framework that streamlines the process of building server-side applications. By integrating your code with the spec, Glee takes care of the heavy lifting involved in creating and managing connections, allowing you to focus on the business logic that truly matters.It makes sure your code, specification, and documentation are synchronized. Glee eliminates the possibility of straying from the spec, which compels you to embrace a spec-first methodology, ensuring that your API is always entirely defined and coherent. When your API evolves, it includes the specification and documentation.Glee simplifies creating and maintaining connections, allowing you to concentrate solely on developing code that meets your business needs. By handling performance, scalability, resilience, and all other aspects necessary for production readiness, Glee frees you from the burden of managing these technicalities, enabling you to focus on delivering a high-quality application that meets the demands of your users.Getting Started With GleeLet's create a simple WebSocket API using Glee to understand its magic. We will create a simple WebSocket server that receives a current time from the client and then sends a "good morning," "good evening," or "good night," respectively.Setting Up A Glee Project.To work with Glee, you must install NPM and NodeJS version 10 or higher. You can just run the following commands in your terminal to check if you have both installed.1# check if node is installed2node -v3# or4node --version56# check if NPM is installed7npm -v8# or9npm --version10If you don't have any of the above tools missing, go ahead and install them.Create a Glee projectWe recommend creating a new Glee app using our officialCLI, which sets up everything automatically. (You don't need to create an empty directory, create-glee-app will make one for you.) To create a project, run:12asyncapi new glee3To install AsyncAPI CLI either usenpmor install binaries for your operating system fromhttps://github.com/asyncapi/cli/releasesOnce the process is complete, you should have a new Glee app ready for development and see these files that were made.Define The Spec For Our API.Glee being a spec-first framework, development starts with defining your API spec. For our case, we will define our API:1asyncapi:3.0.02info:3title:GreetBot4version:0.1.05servers:6websockets:7host:'0.0.0.0:3000'8protocol:ws9channels:10greet:11address:greet12messages:13onGreet.message:14$ref:'#/components/messages/time'15subscribe.message:16$ref:'#/components/messages/greet'17operations:18onGreet:# operationId19action:receive20channel:21$ref:'#/channels/greet'22messages:23-$ref:'#/components/messages/time'24greet.subscribe:25action:send26channel:27$ref:'#/channels/greet'28messages:29-$ref:'#/components/messages/greet'30components:31messages:32time:33payload:34type:object35properties:36currentTime:37type:number38name:39type:string40greet:41payload:42type:stringThis will be the specification that defines our API. In our case, it is very simple, as we will send a name and the time of the day, and our API will greet us accordingly.One thing to note here is theoperationId; this is needed and is a crucial part of Glee, as this is how we will be connecting our business logic with our spec,operationIdis the name of the function that will be called every time a certain operation occurs. In our case, whenever the/greetchannel received a message.Define Our Operation Function.Now for our case, we will add a filefunctions/onGreet.jsand write up the logic for parsing our time and sending a response.1exportdefaultasyncfunction(event){2const{ name, time } = event.payload3constt =newDate(time)4constcurHr = t.getHours()5letresponse =''6if(curHr <12) {7response =`Good Morning${name}`8}elseif(curHr <18) {9response =`Good Afternoon${name}`10}else{11response =`Good Evening${name}`12}13return{14reply: [15{16payload: response,17},18],19}20}Every file in the functions folder acts as a handler to develop business logic for Glee. Each file should export an async function that receives an event parameter, where you have access to payload and server details.Running And Testing Your ApplicationWe will not execute the application and carry out testing with Postman to ensure that it is functioning as intended.Now to run your Glee application, just execute the following:1npm run dev2# or3npm run startThen open Postman and checkout the endpoint:ConclusionSo this is how easy it is to build a WebSocket API using Glee.  Please do check outthe Greet-Bot example code.Glee is rapidly evolving and aims to support a variety of protocols, and while it is still in development, it currently has stable support for MQTT and WebSocket. As a team, we are eager to gather feedback from users like you to help us improve Glee and make it even better. If you are interested in trying out Glee, we would greatly appreciate it if you could test it out and share your thoughts about your experience. Your feedback will be invaluable in helping us identify areas for improvement and making Glee more user-friendly and effective. The best way to communicate with us is throughGitHub Issues.
"""
--------------------------------------------------------------------------------


Post 27
ID: https://www.asyncapi.com/blog/designblog?utm_source=rss
Title: Contributing to Open Source as a Product Design and UX Researcher
Link: https://www.asyncapi.com/blog/designblog?utm_source=rss
Summary: Design BlogPost
Content:
"""
Every software has a design system, regardless of whether it is free or not. Suppose you are a UX researcher or designer intending to be part of an Open Source community. In that case, you can begin contributing to the research or design program by collaborating with others. This article clarifies what Open Source is and provides tips on how you can start contributing as a UX researcher or designer. In addition, I’ll share some Open Source communities that you can contribute to as a beginner.What is Open Source?public/img/posts/oss_image.webpOpen Source Software (OSS) refers to software shared with its source code, allowing users to access, modify, and distribute. OSS allows everyone to contribute to the source code, make changes, or suggest new features. You can use the code for your purpose or contribute to improving the entire project’s features.Some examples of Open Source Software are available, including AsyncAPI, Linux Kernel, Oppia Foundation, VLC Media Player, Mozilla Firefox, Audacity, Blender, and more. These software are free to download, use, and distribute. It’s essential to recognize that some individuals put in much effort to make these projects available to a broad audience. Pursuing a career in Open Source can be beneficial, as it allows you to give back to the community and assist as many users as possible.It is worth noting that not all open-source projects are free of charge. To determine whether a project is free, you can check the project’s LICENSE file on GitHub.My Experience as a Product Designer and UX Researcher in Open SourceIf you want to move faster in your career, I suggest getting started contributing to Open Source projects as early as possible. As a UX personnel, working with dummy users without getting feedback can be frustrating. However, Open Source allows you to learn your expertise and receive real-time feedback from users. Additionally, the collaborative nature of Open Source provides real-life working environments.In late 2022, I made my first Open Source contribution by designing speaker cards for the AsyncAPI Virtual Conference. When I received a notification that my pull request had been merged, I felt a sense of fulfillment about seeing my work showcased on a global scene.My interest in Open Source Communities made me apply for the Outreachy Internship Program. My collaboration and research skills helped me get into the program. I worked on the Foundational Research for Nigeria, a research project created to understand the learning needs and problems associated with technology learning among children between the ages of 7 and 15 in Nigeria. I also conducted usability testing with Oppia users to evaluate the effectiveness and usability of the Oppia application and website platform.Since completing my Internship Program in March, I have worked on other open-source projects.Completed ProjectsDesigned the AsyncAPI Conference on Tour 2023 website (AACoT’23).Conducted a UX Design Audit on the AsyncAPI Website.Designed the AsyncAPI Financial Summary Page.Designed the Community Member’s Page for AsyncAPI.I worked with my team to design and create content for the Ladder Library as part of She Code Africa HackFest 2022.On-going ProjectsWorking on the Design system for the AsyncAPI website.Creating a UX research plan for usability testing.Reviewing all design and research-related issues.What are the advantages of contributing?There are numerous benefits to contributing to open source. One of the most prominent reasons is collaboration. For beginners and experienced fellows, collaborating using a version control system is an added advantage to your career. Getting hired based on your open-source contribution and contributing to technologies that make your life better and more accessible.
Finally, open source is time-consuming and can become overwhelming if you do not manage your time.Are you ready to start contributing?Check if the applications you frequently use are Open Source and consider joining their communities. You can ask questions, solve issues, and offer assistance to others. Many communities offer issues that are suitable for beginners who are new to open source.
"""
--------------------------------------------------------------------------------


Post 28
ID: https://www.asyncapi.com/blog/september-2023?utm_source=rss
Title: Community Update: September & October 2023
Link: https://www.asyncapi.com/blog/september-2023?utm_source=rss
Summary: September and October Community Update
Content:
"""
Our second AsyncAPI Conf on Tour took place on the 19th of October, hosted by SNGULAR in Madrid. The day was well-organized, packed with informative talks from industry experts and great networking sessions, making it a valuable experience for attendees. Additionally, the conference was live-streamed, and every session was recorded, so even if you missed out on attending the event in person, you can stillwatch the recordings on YouTubeand catch up on all the insightful talks.
Our gratitude goes toIvan Garcia Sainz-Ajafor helping us bring SNGULAR on board, plan, and host the event.AACoT'23 Bangalore EditionWe're excited that AACoT'23 is heading to Bangalore next on the 30th of November, and Postman will be hosting us. Our full-day agenda will be live soon on theAsyncAPI conference website, and we have excellent sessions and fantastic speakers lined up.
If you know someone or are interested in joining us in person,get your ticketsand get ready to learn more about EDAs and experience the culture in Bangalore. We can't wait to see everyone there!Spec x ToolingSergio Moya,Peter Ramos, and the team are currently working on measuring the AsyncAPI adoption by collecting metrics through the usage of our tools. If you are interested in participating or following up on the progress, you can join the public discussion onMeasuring AsyncAPI Adoption.We're excited to share that we have successfully migrated Modelina from v1 to v2. The new version will focus more on creating accurate array types. For more information, please check out theModelina v2 migration guide.Mentorship ProgramThe first evaluation for the 2nd cohort of the AsyncAPI Mentorship Program just concluded, and we are happy thatall the mentees participatingare doing well in their projects. They are now eligible to request the first half of their stipend bysubmitting an expense through Open Collective. We are proud and can't wait for the final results.AsyncAPI Bounty ProgramAfter a successful trial, we are happy that the official AsyncAPI Bounty Program is in full swing. The program will be run by three outstanding individuals,Viacheslav Turovskyi,Aishat Muibudeen, andAbir Pal, who will ensure the rules are correctly implemented and oversee the smooth running of the program.In Case You Missed ItMissed the live streaming of AACoT'23 Madrid? Don't fret! Catch up on all the sessions by watching the recordings.Coming in NovemberAsyncAPI Community Updates Newsletter- The next issue will drop on the 9th of November. Make sure tosubscribe to the AsyncAPI Newsletter.AACoT'23 Bangalore Edition- Our next stop for AACoT'23 will be held at thePostman Bangalore officeon the 30th of November.Be sure to get your ticketsto join us. See you there!
"""
--------------------------------------------------------------------------------


Post 29
ID: https://www.asyncapi.com/blog/beyond-boundaries?utm_source=rss
Title: Beyond Boundaries - Empowering Through OSS Mentorship
Link: https://www.asyncapi.com/blog/beyond-boundaries?utm_source=rss
Summary: In 2022 we piloted our innovative mentorship program that focuses on open-source software(OSS). We envisioned a platform where aspiring developers could learn, grow, and contribute to exciting project
Content:
"""
In 2022 we piloted our innovative mentorship program that focuses on open-source software(OSS). We envisioned a platform where aspiring developers could learn, grow, and contribute to exciting projects while receiving guidance from experienced mentors.Our BackstoryAt AsyncAPI, we value giving back to the community, giving us a sense of purpose as a community-first organization. We are always looking for ways to participate in open-source mentorship programs like Google Summer of Code(GSoC), Google Season of Docs(GSoD), and more because the fulfilling feeling of contributing to society gotten from these programs is unparalleled.As an open-source organization, we participate to collaborate with a broader reach of enthusiasts and help bring more folks into this world(which we are already doing). Furthermore, our reason for participating in these programs comes from our passion for open source and the care to support and encourage contributors by building and participating in mentorships.Why Start Our Own OSS Mentorship Program?In 2021, AsyncAPI participated in its first paid mentorship program alongside Postman under Google Summer Of Code(GSoC). After applying to participate as an organization for GSoC in 2021, we got rejected and were opportune to participate alongside Postman.Postman is an established software development company committed to open-source initiatives. We received a lot of engagement from folks interested in our projects despite having just a few slots allocated to us by Postman.Fast forward to 2022, we applied for GSoC and got rejected again. This time, Postman also got rejected, leaving us in shock because many folks were already looking forward to joining us. The shock and disappointment permeated the team's spirits, but they refused to let this setback deter them from their mission.Determined to overcome this unexpected obstacle, we regrouped and brainstormed alternative strategies to keep the program afloat. What had initially seemed like a devastating rejection transformed into an opportunity for growth and resilience. The team's unwavering passion and refusal to accept defeat turned their setback into a stepping stone toward even greater success.The Journey Proved To Be More Challenging Than AnticipatedWe knew piloting an in-house mentorship program would be challenging, so we made the initial program a way to collect feedback. We approached the program flexibly, avoiding rigid decisions or commitments.During the project ideas phase,we received 19 project ideas, andten of these projects made it to the final phasebut out of the ten selected candidates for the program onlysixwere able to complete their project. This program addresses the real needs of the open-source community. It ensures the program leaders forge meaningful relationships with the participants to ensure their diverse voices are heard and provide them with resources, advice, and networking opportunities.How We Are Approaching These Challenges For The Next CohortsAt AsyncAPI, mentorship programs are practical tools for teaching and upskilling professionals. When managed well, they can create significant benefits for mentees and lasting benefits and impact for mentors. However, we know it takes some strategy and finesse to operate a mentorship program that lasts and reaches its potential. That's why we've organized a way to keep our Mentees on schedule to complete their projects using the following method:Reduce the level of stress in the program.Encourage them to ask when they need help.Ask them what they want.Connect often.Share stories and struggles.Agree on expectations.Emphasize good self-care.Our Relationship With Potential MentorsAll of AsyncAPI's mentors are core community members and prominent advocates for open-source projects with a strong belief in FOSS, which means keeping them engaged will require just a little effort. But we still keep them engaged by staying connected and ensuring communication channels go both ways, showing how they made a difference and valuing the opinions of every mentor.How We Engage Contributors In The Community During The Mentorship ProgramWe value every single contribution at AsyncAPI, and there is a nearly immediate value to people using and contributing to AsyncAPI. If and when they contribute code, the quicker it gets integrated into the main codebase, the happier the contributor will be. We also know contributors like to be challenged and to learn new things, and they like to work on code that's known to be of high quality and work with projects that positively impact the industry.This quality makes AsyncAPI stand out and will encourage contributors to be involved in the community during the program. Furthermore, we ensure contributors are heard and respected and give them public credit for their work to encourage them to contribute. We ensure contributors have direct access to the main maintainer(s) and can have meaningful discussions with them.Where Are We?With the next cohort kicking off, we put things such as the [program guidline] in place, including theEvaluation Period. And we received a significant surge in this current cohort(2023) application phase! We received 29 project ideas, 10 of which were selected for the program, over 90+ proposals were received across all of these ten projects, and 13 candidates made it to the final selection phase. Unlike the previous year(2022), we were not only accepting code-related projects but also design and technical writing, which means anyone can be a part of the program this year.Comparing this to the previous year, we are proud of this current trajectory and can't wait to see the numbers for the coming years, how much growth awaits us as a community, and how fantastic the projects under this great initiative will become with all of these contributions.Current Cohort ProjectsNoProject IdeaMentor/sCategoryMentee/s1Add help/{command} endpointDavid PereiraEngineeringPrince Rajpoot2Website UI Kit design/dev projectAceTheCreatorDesignAISHAT MUIBUDEEN3MVP integration of extensions catalog with AsyncAPI toolsLukasz GornickiEngineeringSambhav Gupta4Documenting how different protocols work with AsyncAPIQuetzalli WritesDocumentationCynthia Peter,Arya Gupta,Joy Almeida,Vaishnavi Nandakumar5Rewrite this template and NodeJS WS templateLukasz GornickiEngineeringKaushik Rishi6Simulator Desktop ApplicationNektarios FifesEngineeringSumant Tirkey7Tutorial document or separate guides for gleeSouvik&Khuda Dad NomaniDocumentationAfzal Ansari8Add support for translationsMaciej UrbańczykEngineeringAnsh Goyal9Prepare CLI for v1.0.0 releaseSouvikEngineeringAshish Padhy10DocsUI: Messages Object outputMissy Turco&Fran MéndezDesignAsmit MalakannawarWho Is This Program For?If you're new to the world of open-source or you'd love to get paid for doing open-source for some time, then this program is definitely for you.Would you be interested in sponsoring our program?By sponsoring us, we can use your sponsorship funds to provide more slots in future mentorship programs for candidates interested in elevating their careers via open-source contributions.How To Connect With UsJoinour Slack workspace. Just make sure to follow ourSlack etiquetteandthe code of conduct.Join the dedicated Mentorship channel#mentorshipsthat we use for all mentorships discussion. All mentees and mentors are there.Photo byRachelonUnsplash
"""
--------------------------------------------------------------------------------


Post 30
ID: https://www.asyncapi.com/blog/august-2023?utm_source=rss
Title: Community Update: August 2023
Link: https://www.asyncapi.com/blog/august-2023?utm_source=rss
Summary: August Community Update
Content:
"""
As August comes to a close, many of us have had a slow month. Most of the community took some well-deserved time off, and the project has been quiet these past few weeks. We're looking forward to September and can't wait for everything to get back in full swing.AACoT'23 LondonSpeakers for AACoT'23 London Edition have been selected and informed; we are currently working on the schedule for the day. We anticipate a jam-packed day of inspiring talks and networking with esteemed industry experts. If you know any communities in London or ways we can maximize the AACoT'23 London event happening on the 20th of September, please do reach out toThulieorLukaszvia Slack.Financial ContributionsWe received new financial contributions this month. Please welcome our:new Silver sponsor,Svix, who will contribute $500 monthly.new Bronze sponsor,Rviewer, who will contribute $100 monthly.Huge thank you to our one-time sponsor,Simlot, for donating $944.AsyncAPI Bounty Program TrialWe're thrilled to share that theAsyncAPI Bounty Program Trialhas been completed. We started the trial with a total of 7 projects consisting of coding, design, and technical writing tasks, categorized into medium and advanced levels. We had pre-set rules for the bounty trial, and everything went smoothly when it came to task assignment and completion. We also learned valuable insights during the trial, such as timeline extension and handling additional tasks necessary for task completion that will be implemented in the official program. Here are the accomplished tasks and the exceptional assignees:Bounty Issue LinkScopeCategoryTypeAssigneeStatushttps://github.com/asyncapi/website/issues/843Enable caching on a website built on NetlifyMedium LevelCodingSambhav GuptaCompletehttps://github.com/asyncapi/cli/issues/358Add a Dockerfile and release pipeline necessary to publish itMedium LevelCodingSavio DiasCompletehttps://github.com/asyncapi/cli/issues/123Configure CLI commands docs generation into existing flowsMedium LevelCodingMahfuza Humayra MohonaCompletehttps://github.com/asyncapi/cli/issues/38Enable CLI to read the context from CWDAdvanced LevelCodingViacheslav TurovskyiCompletehttps://github.com/asyncapi/generator/issues/943Create a first tutorial for AsyncAPI GeneratorAdvanced LevelDoc'sFlorence NjeriCompletehttps://github.com/asyncapi/community/issues/672Create an infographic with information about AsyncAPI Initiative financeAdvanced LevelDesignAISHAT MUIBUDEENCompletehttps://github.com/asyncapi/cli/issues/361Extend the functionality of --version flag in AsyncAPI CLI to include info about versions of other AsyncAPI libraries used in the projectMedium LevelCodingViacheslav TurovskyiCompleteSpec x ToolingThe progress on supporting the AsyncAPI Spec v3 is advancing significantly. So far, we are currently working on updating the CLI to validate v3 documents together with the Generator and Modelina. You can keep track of the releaseson the AsyncAPI Spec v3 issue.Google Summer of Code(GSoC)Google Summer of Code'23 is coming to an end soon, and our esteemed mentors are currently underway with the final evaluation of the projects. We are excited and can't wait to announce the successful completion of the projects. One of the GSOC'23 mentees,Richa Sharma, wrote a detailed blog,Reflections on My GSoC 2023 Journey; please be sure to read it.Code of ConductWe are calling for votes to establish our first Code of Conduct Committee that will enforce and ensure every community member follows and doesn't violate it. Please make sure to drop a comment with your nominations to theAsyncAPI Code of Conduct Refresh discussion.Coming in SeptemberAsyncAPI Community Updates Newsletter- The next issue will drop in August's first week. Stay informed about the latest community activities bysubscribing to the AsyncAPI Newsletter.AACoT'23 London Edition- Our first AACoT'23 stop will be held at theIBM London officeon the 20th of September.Be sure to get your ticketsbefore they run out. See you there!
"""
--------------------------------------------------------------------------------


Post 31
ID: https://www.asyncapi.com/blog/2023-july-docs-report?utm_source=rss
Title: AsyncAPI Docs Report - July 2023
Link: https://www.asyncapi.com/blog/2023-july-docs-report?utm_source=rss
Summary: import ContributionNotes from '@/assets/docs/fragments/contribution-notes.md';
import TalkToMe from '@/assets/docs/fragments/talk-to-me.md';

AsyncAPI Docs Report - July 2023

Overview

In July 2023,
Content:
"""
AsyncAPI Docs Report - July 2023OverviewIn July 2023, our AsyncAPI documentation continued to flourish, with a total of7,443 sessionsand3,895 unique usersrecorded. Engagement this month also included2,345 new users, further underlining the thriving growth of our docs community.With the successful continuation of the2023 Google Season of Docsand theTechnical Writing Mentorship Program, our documentation contributors have made significant strides in understanding the intricacies of the new Spec 3 and its enhanced features.2023 Google Season of DocsDuring July, remarkable progress was achieved ondocumenting the AsyncAPI document structure. Assigned to our diligent Google Season of Docs (GSoD) writers, most sections have already undergone their second draft, and these dedicated writers are actively engaging with core spec contributors to clarify any queries.Simultaneously, thecreate 100-level interactive learning pathhas been advancing steadily. Thesetup of a dedicated AsyncAPI GitHub repository to host with Killercoda, marks a significant step towards hosting our interactive learning paths. To ensure inclusivity, the topics to be covered in our 100-level learning path will also be determined through a forthcoming community vote.2023 AsyncAPI Mentorship Program —Technical WritingTechnical writers participating in the 2023 AsyncAPI Mentorship Program are actively engaged in community building, opening acommunity vote that successfully identified Kafka and Websocket as the prioritized protocols for this year's scope of work.Diving into detailed research and interactions with diverse community members, ourwriters are also researching meticulously the most common AsyncAPI processes/tasks associated with Kafka and Websocket.JoinOPENSpec 3.0 Docs MeetingsCalling out to all members of the AsyncAPI community! Our efforts to bolsterSpec 3.0 documentationcontinues with a series of community meetings. These biweekly gatherings, scheduled for Thursdays at 14:30 UTC, provide an open forum for enthusiastic contributors and inquisitive minds.Whether you're passionate about contributing to Spec 3.0 docs or seeking clarifications, these meetings are the conduit to connect and collaborate with the expertise of our spec contributors. A special invitation is extended to the participants of the GSoD and Mentorship Program, ensuring their contributions seamlessly align with the evolution of Spec 3.0.Watch July Spec 3.0 Docs MeetingsFor those who missed our July meetings, you can revisit these sessions on the AsyncAPI YouTube channel.July 6th 2023 (Spec 3.0 Docs Meeting)July 20th 2023 (Spec 3.0 Docs Meeting)AsyncAPI Docs - July SummaryIn July 2023, the AsyncAPI documentation community experienced steady engagement, with a total of 7,443 sessions and 3,895 unique users. The concurrent progress of the2023 Google Season of Docsand theTechnical Writing Mentorship Programhighlighted the writers' dedication to understanding the intricacies of the new Spec 3 and its advanced functionalities.During this period, the Google Season of Docs (GSoD) writers made substantial strides in their assigned projects. Additionally, the "create 100-level interactive learning path" project gained momentum as the writers set up a dedicated GitHub repository for hosting our interactive learning paths with Killercoda.The 2023 AsyncAPI Mentorship Program writers delved into meticulous research and community interactions, aiming to comprehensively capture common AsyncAPI processes and tasks associated with our selected protocols.Meanwhile, the OPEN Spec 3.0 Docs Meetings continued to serve as a platform for fostering docs collaboration. With biweekly gatherings scheduled on Thursdays at 14:30 UTC, these meetings provide an opportunity for contributors to engage with expert spec contributors, aligning their contributions seamlessly with the evolution of Spec 3.0. Those who missed the July Spec 3.0 Docs Meetings could easily catch up by accessing the recordings on the AsyncAPI YouTube channel.How to contribute to AsyncAPI DocsDid you know that you can contribute Docs to AsyncAPI as well?Code isn't the only way to contribute to OSS; Dev Docs are ahugehelp that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution.❤️To get started as a Docs contributor:Familiarize yourself with ourproject's Contribution Guideand ourCode of Conduct.Head over to ourAsyncAPI Docs Board.Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started.If there is no work done in that Docs issue yet, feel free to open a PR and get started!Docs contributor questionsDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!Tag me in your AsyncAPI Doc PRs orGitHub Discussionsvia my GitHub handle,quetzalliwrites🐙.Talk to meI want and need to listen👂🏽to all of your perspectives and ideas. Please don't be shy to express to me what you think needs to be documented first or what is missing.📝There's a lot of good work ahead, butyoudetermineour content roadmapbecause the OSS community needs should always come first.✨
"""
--------------------------------------------------------------------------------


Post 32
ID: https://www.asyncapi.com/blog/api-first-with-asyncapi?utm_source=rss
Title: API-First with AsyncAPI
Link: https://www.asyncapi.com/blog/api-first-with-asyncapi?utm_source=rss
Summary: If you are familiar with OpenAPI and OpenAPI Generator API-First process, doing API-First with AsyncAPI is similar.
Content:
"""
API-First with AsyncAPIAPI-First with AsyncAPIBroker-based APIs are SymmetricEvents, Commands, and MessagesUnderstanding AsyncAPI DefinitionInfoServersChannels: Publish / SubscribeMessagesMessage Payloads / SchemasReusing Configurations: Operation Traits, Message Traits...Different Styles of Event MessagesNotification MessagesState Transfer MessagesDomain Event MessagesNext: Java Code Generator for AsyncAPIIf you are familiar with OpenAPI and OpenAPI Generator API-First workflow:First, write the OpenAPI definition, collaborating between API providers and API consumers.Then, use OpenAPI Generator, either the maven plugin or a CLI, to generate some DTOs and interfaces from your OpenAPI definition.Implementing the generated interfaces, you can create a service for the API.As a client, you can use generated interfaces to consume the API with some HTTP client generated behind the scenes.When doing API-First with AsyncAPI, the process is similar. After you generate some interfaces and DTOs from your API definition, you use the generated interfaces to produce messages, send them to the broker, and implement them to consume messages from the broker.There is still a fundamental difference between OpenAPI and AsyncAPI: OpenAPI is used to document Request-Response / Client-Server APIs, while AsyncAPI is used to document Event-Driven APIs which, except for WebSockets, are Broker-based.And broker-based APIs, unlike Client-Server, are inherentlysymmetric.Broker-based APIs are SymmetricBecause APIs mediated by a broker are inherentsymmetric, it's difficult to establish the roles of the client/server: what represents apublishoperation from one side will be asubscribeoperation seen from the other side. Also, a given service can act as a publisher and subscriber on the same API.For these reasons, to avoid defining the same API operations multiple times from each perspective, we propose to define the API only once from the perspective of the provider of the functionality, which may be a producer, a consumer, or both.Some definitions:SERVICE: An independent piece of software, typically a microservice, that provides a set of capabilities to other services.PROVIDER: The service that implements the functionality of the API. It may be accepting asynchronous command requests or publishing business domain events.CLIENT/s: The service/s that uses the API's functionality. It may be requesting asynchronous commands or subscribing to business domain events.PRODUCER: A service that writes a given message.CONSUMER: A service that reads a given message.Define your AsyncAPI from the perspective of thePROVIDERof the functionality, which may be a producer, a consumer, or both. Share this definition with yourCLIENTS.Use the table to understand which section of AsyncAPI (publish or subscribe) to use for each topic and which role (provider or client) to use on the plugin configuration.EventsCommandsProviderProduces (publish)Consumes (subscribe)ClientConsumes (subscribe)Produces (publish)OperationId Suggested Prefixon<Event Name>do<Command Name>If you still find it confusing which one is a provider and a client, just use this rule: it can be only one provider of a given message, while clients of a given message there can be many:If the provider is the producer, use publish sectionIf it is the consumer, use subscribe section.Events, Commands, and MessagesThere are two types of messages in a messaging system: events and commands. An event message describes a change that has already happened, while a command message describes an operation that needs to be carried out. In other words, events are used to notify subscribers about something that has already occurred, while commands are used to initiate an action or process.Event:A message describing a change that has already happened.Command:A message describing an operation that has to be carried out.Also, while there can be only one provider that produces a given event, commands can be issued for one or many client producers.Understanding AsyncAPI DefinitionWhile OpenAPI and AsyncAPI come to document completely different architectural styles, they are similar in many aspects; in fact, AsyncAPI YAML format was initially based on OpenAPI format and structure.If you are familiar with OpenAPI, you may find useful the following image borrowed from AsyncAPI documentation (click image to follow):InfoDocument your API: name, purpose, contact details, and license...ServersDocument where your API will be deployed and required security...You can also document some serverprotocol-specific configurationsusing free-formbindingspropertyChannels: Publish / SubscribeEach channel represents one single broker topic, channel, or queue... where you are about to publish or subscribe.Use the table above to understand which section, publish or subscribe, you may want to use.In a nutshell:Providers publish events and subscribe to commands/queries/requests.If you still find it confusing which is a provider and a client, use this rule: In a given messaging scenario, there can be only one provider of a message, while there can be multiple clients. If the provider is producing messages, use thepublishsection. If the provider is consuming messages, use thesubscribesection.MessagesUse Messages to describeHeaders,Payload Schema, andContent-Type. You can also include examples, descriptions, and protocol-specific binding documentation...1components:2messages:3turnOnOff:4name: turnOnOff5title: Turnon/off6summary: Command a particular streetlighttoturn the lightsonoroff.7headers:8type:object9properties:10my-app-header:11type: string12payload:13$ref: "#/components/schemas/turnOnOffPayload"14Message Payloads / SchemasYou can define message payloads as:Inline components/schemas in the same familiar way you do in OpenAPIExternal files: bothjson-schemaandavro schemas(.avsc) are supported1components:2messages:3MessageWithAsyncAPISchema:4payload:5$ref:"#/components/schemas/turnOnOffPayload"## asyncapi/inline schema6MessageWithExternalJsonSchema:7schemaFormat:'application/schema+json;version=draft-07'8payload:9$ref:"some/external/file.schema"## a json-schema file10MessageWithAvroSchema:11schemaFormat:application/vnd.apache.avro+json;version=1.9.012payload:13$ref:"v1/imports/file.avsc"## and avro schema fileReusing Configurations: Operation Traits, Message Traits...Operation Traits, Message Traits are an excellent way to reuse chunks of configuration between different operations or messages.For instance, if various messages share some common headers, you can configure them as Message Traits:1components:2messages:3CustomerEventMessage:4name:CustomerEventMessage5title:Async Event for a Customer6summary:Async Event for a Customer7schemaFormat:application/vnd.aai.asyncapi;version=2.4.08traits:9- $ref:'#/components/messageTraits/CommonHeaders'#'CommonHeaders'contents will replace'traits'property10payload:11$ref:'#/components/schemas/CustomerEventPayload'1213messageTraits:14CommonHeaders:15headers:16type:object17properties:18my-app-header:19type:integer20minimum:021maximum:100And the same concept applies to Operation Traits.Different Styles of Event MessagesNotification MessagesAn Event Notificationcontains minimal information about the eventand enough information for interested consumers to locate additional details. The specifics of what information is included in an event notification can vary depending on the system or use case.1{2"headers": {3"event-type":"customer-created",4"event-id":"",5"aggregate-id":"1",6"aggregate-type":"customer"7},8"payload": {9"id":1,10"eventType":"created",11"link":"/customers/1"12}13}State Transfer MessagesOn the other hand, a State Transfer messagecontains the entire state of the aggregate, so a consumer does not need to make additional calls. This can be useful in situations where subscribers need to maintain a synchronized view of the data. Compacted keyed topics typically use this style of messages.1{2"headers": {3"event-id":"",4"aggregate-id":"1",5"aggregate-type":"customer"6},7"payload": {8"id":1,9"firstName":"string",10"lastName":"string",11"password":"string",12"email":"string",13"username":"string",14"address": {15"id":1,16"street":"string",17"city":"string",18"state":"string",19"zip":"string"20}21}22}Domain Event MessagesDomain Event Messagescontains information about the event and interesting portions of the underlying aggregate, but not the entire state of the aggregate. This style of events is typically used for Event Sourcing integration patterns.1{2"headers": {3"event-type":"customer-address-updated",4"event-id":"",5"aggregate-id":"1",6"aggregate-type":"customer"7},8"payload": {9"id":1,10"eventType":"address-updated",11"customer": {12"id":1,13"new-address": {14"street":"string",15"city":"string",16"state":"string",17"zip":"string"18}19}20}21}Next: Java Code Generator for AsyncAPINext: Java Code Generator for AsyncAPIOriginally published athttps://zenwave360.github.io
"""
--------------------------------------------------------------------------------


Post 33
ID: https://www.asyncapi.com/blog/jhipster-jdl-to-asyncapi?utm_source=rss
Title: Convert JHipster JDL to AsyncAPI v2/v3 with ZenWave SDK
Link: https://www.asyncapi.com/blog/jhipster-jdl-to-asyncapi?utm_source=rss
Summary: Because writing YAML by hand is now fun... You can generate AsyncAPI v2/v3 from  JHipster JDL models with ZenWave SDK.
Content:
"""
Generating AsyncAPI definition files from JDL with ZenWaveSDKWriting YAML by hand is no fun, but you can simplify the process of writing AsyncAPI definition files by using a Domain Specific Language (DSL).JHipster Domain Language (JDL)is a Domain Specific Language (DSL) used to define the domain model of a web application. With JDL, you can describe the entities, relationships, and constraints of your system in a concise and readable way.Zenwave SDKis a set of tools to generate (and reverse engineering) code from JDL and API-First models like AsyncAPI and OpenAPI.Thanks to ZenWave SDK, you can convert JDL models into AsyncAPI definition files. This can save time and effort in the development process while ensuring that your APIs follow best practices and standards.JDL Example1@aggregate2entity Customer {3username String required minlength(3) maxlength(250)4password String required minlength(3) maxlength(250)5email String required minlength(3) maxlength(250)6firstName String required minlength(3) maxlength(250)7lastName String required minlength(3) maxlength(250)8}9entity Address {10street String11city String12country String13zipCode String14}1516relationship OneToOne {17Customer{address} to Address{customer}18}Generating AsyncAPI definition files from JDL with ZenWaveSDKSeeJDL To AsyncAPI Generatorfor a complete list of options andGitHub repositoryfor install instructions.Because JDL can only describe static aspects of your models and doesn't cover dynamic behavior, ZenWave SDK can only infer CRUD operations from your entities, generating:One channel for each entity for both publishing Domain Events and subscribing to Commands/Requests.Messages and payloads for each entity Create/Update/Delete events (AVRO and AsyncAPI schema)1jbang zw -p io.zenwave360.sdk.plugins.JDLToAsyncAPIPlugin \2includeCommands=false \3specFile=src/main/resources/model/entities-model.jdl \4idType=integer \5idTypeFormat=int64 \6annotations=aggregate \7payloadStyle=event \8targetFile=src/main/resources/model/asyncapi.ymlYou can choose to generate only Events or Commands usingincludeEvents(default: true) andincludeCommands(default: false) to filter which channels you want to include in your AsyncAPI definition file.You can also filter which entities you want to include Messages for in your AsyncAPI definition file using:entities,skipEntities,annotations, andskipForAnnotations.UPDATE:ZenWave SDK version 1.0.6 now supports generating AsyncAPI v3 format. UseasyncapiVersion=v3as:1jbang zw -p io.zenwave360.sdk.plugins.JDLToAsyncAPIPlugin \2includeCommands=false \3specFile=src/main/resources/model/entities-model.jdl \4idType=integer \5idTypeFormat=int64 \6annotations=aggregate \7payloadStyle=event \8asyncapiVersion=v3 \9targetFile=src/main/resources/model/asyncapi.ymlSupported Schema Formats and Message StylesYou can generate AsyncAPI definition files with the following options:Supported Schema Formats: AVRO and AsyncAPI schemaSupportedPayload Styles: "Entity State Transfer" and "Domain Event" (for Create/Update/Delete events):State Transfer message contains the entire state of the aggregate, so a consumer does not need to make additional calls.Domain Event Messages contain information about the event and interesting portions of the underlying aggregate, but not the entire state of the aggregate.By using JDL to define your domain model and ZenWave SDK to convert it into an AsyncAPI definition file, you can simplify the process of designing and documenting your APIs. This can improve your APIs' overall quality and consistency while reducing errors and inconsistencies.Originally published athttps://zenwave360.github.io.
"""
--------------------------------------------------------------------------------


Post 34
ID: https://www.asyncapi.com/blog/zenwave-asyncapi-code-generator?utm_source=rss
Title: API-First with AsyncAPI and ZenWave SDK
Link: https://www.asyncapi.com/blog/zenwave-asyncapi-code-generator?utm_source=rss
Summary: With ZenWave SDK plugins, you can generate strongly typed business interfaces, payload and header DTOs and several integration patterns like Transactional Outbox, DeadLetter Queue... from AsyncAPI definitions.
Content:
"""
API-First with AsyncAPI and ZenWave SDKWith ZenWave'sspring-cloud-streams3andjsonschema2pojoplugins, you can generate:Strongly typedbusiness interfacesPayload DTOsandHeader objectsfrom AsyncAPI definitions.It uses Spring Cloud Streams as the default implementation, so it can connect to many different brokers via provided binders.And because everything is hidden behind interfaces, we can encapsulate many Enterprise Integration Patterns:Transactional Outbox: with MongoDB ChangeStreams, Plain SQL, and Debezium SQL flavorsBusiness DeadLetter Queues: allowing you to route different business Exceptions to different DeadLetter queues for non-retryable errors.Enterprise Envelope: when your organization uses a common Envelope for messages, you can still express your AsyncAPI definition in terms of your business payload.SeeAsyncAPI and Spring Cloud Streams 3 Configuration OptionsandZenWave Maven Pluginfor more details.1<plugin>2<groupId>io.github.zenwave360.zenwave-sdk</groupId>3<artifactId>zenwave-sdk-maven-plugin</artifactId>4<version>${zenwave.version}</version>5<configuration>6<inputSpec>classpath:/model/asyncapi.yml</inputSpec>7<addCompileSourceRoot>true</addCompileSourceRoot>8<addTestCompileSourceRoot>true</addTestCompileSourceRoot>9</configuration>10<executions>11{/* DTOs */}12<execution>13<id>generate-asyncapi-dtos</id>14<phase>generate-sources</phase>15<goals>16<goal>generate</goal>17</goals>18<configuration>19<generatorName>jsonschema2pojo</generatorName>20<configOptions>21<modelPackage>io.zenwave360.example.core.domain.events</modelPackage>22{/*<jsonschema2pojo.includeTypeInfo>true</jsonschema2pojo.includeTypeInfo>*/}23<jsonschema2pojo.useLongIntegers>true</jsonschema2pojo.useLongIntegers>24</configOptions>25</configuration>26</execution>27{/* Generate PROVIDER */}28<execution>29<id>generate-asyncapi</id>30<phase>generate-sources</phase>31<goals>32<goal>generate</goal>33</goals>34<configuration>35<generatorName>spring-cloud-streams3</generatorName>36<configOptions>37<role>provider</role>38<style>imperative</style>39<transactionalOutbox>mongodb</transactionalOutbox>40<modelPackage>io.zenwave360.example.core.domain.events</modelPackage>41<producerApiPackage>io.zenwave360.example.core.outbound.events</producerApiPackage>42<consumerApiPackage>io.zenwave360.example.adapters.commands</consumerApiPackage>43</configOptions>44</configuration>45</execution>46</executions>4748<dependencies>49<dependency>50<groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>51<artifactId>asyncapi-spring-cloud-streams3</artifactId>52<version>${zenwave.version}</version>53</dependency>54<dependency>55<groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>56<artifactId>asyncapi-jsonschema2pojo</artifactId>57<version>${zenwave.version}</version>58</dependency>59</dependencies>60</plugin>Provider vs ClientBecause broker-based API definitions are inherentlysymmetrical, it's difficult to establish the roles of client/server. ZenWave generates code based onproviderandclientroles, where aprovider"produces events" and "consumes commands". SeeAPI-First with AsyncAPIpage for more details on "publish/subscribe", "producer/consumer," and "provider/client" roles.Write your AsyncAPI definitions from theproviderperspective and then configure the code generator to generate either aprovideror aclient.If you still find it confusing which is a provider and a client, use this rule: In a given messaging scenario, there can be only one provider of a message, while there can be multiple clients. If the provider is producing messages, use thepublishsection. If the provider is consuming messages, use thesubscribesection.Spring Cloud Streams Producer: Using generated code to produce messagesOn the producer side generates:InterfaceICustomerEventsProducerto produce typed messages that uses your domain names:onCustomerEvent,CustomerEventPayload, andCustomerEventPayloadHeaders.Producer@ComponentCustomerEventsProducerto use Autowire in your services.To produce messages, all you need to do is @Autowire, the generated producer, as part of your code.Because it sits behind a business-oriented interface, this producer component can be implemented in different flavors and integration patterns like transactional outbox (for MongoDB and SQL), or enterprise envelop, depending on how you configure the Zenwave maven generator.1// Autogenerated: you can @Autowire it in your code2publicinterfaceICustomerEventsProducer{3// headers object omitted for brevity4/**5* Customer Domain Events6*/7booleanonCustomerEvent(CustomerEventPayload payload, CustomerEventPayloadHeaders headers);89}1// Autogenerated: add it to your autoscan packages2@Component3publicclassCustomerEventsProducerimplementsICustomerEventsProducer{45// details omitted for brevity67/**8* Customer Domain Events9*/10publicbooleanonCustomerEvent(CustomerEventPayload payload, CustomerEventPayloadHeaders headers){11// this is one of the many flavors, you shouldn't need to worry about the details12log.debug("Sending message to topic: {}", onCustomerEventBindingName);13Message message = MessageBuilder.createMessage(payload,newMessageHeaders(headers));14returnstreamBridge.send(onCustomerEventBindingName, message);15}16}1// Autowire this producer in your code2@Autowired3ICustomerEventsProducer customerEventsProducer;45// and use it to produce messages6varmessage =newCustomerEventPayload()7.withCustomerId("123")8// [...] set some more data9.withEventType(CustomerEventPayload.EventType.CREATED);10// notice how headers are also strongly typed11varheaders =newICustomerEventsProducer.CustomerEventPayloadHeaders()12.entityId("123")13.commonHeader("value")14.set("undocumented-header","value");1516customerEventsProducer.onCustomerEvent(message, headers);Spring Cloud Streams Consumer: Using generated code to consume messagesOn the consumer side generates:Functional ConsumerDoCustomerRequestConsumerfor Spring Cloud Streams bindings.Business InterfaceIDoCustomerRequestConsumerServiceyou need to implement in order to receive strongly typed messages.This Functional Consumer can abstract away different integration patterns like Business Dead Letter Queue and others... depending on how you configure the Zenwave maven generator.To consume messages, you need to implement the generated business interface and register it as a Spring bean.1// Autogenerated: you need to implement and provide this business interface2publicinterfaceIOnCustomerEventConsumerService{3/**4* Customer Domain Events5*/6defaultvoidonCustomerEvent(CustomerEventPayload payload, CustomerEventPayloadHeaders headers){};7}1// Autogenerated: add it to your autoscan packages and provide business interface implementation2@Component("on-customer-event")3publicclassOnCustomerEventConsumerimplementsConsumer<Message<CustomerEventPayload>>{45// you need to implement this interface6protectedIOnCustomerEventConsumerService service;78@Override9publicvoidaccept(Message<CustomerEventPayload> message){10log.debug("Received message: {}", message);11try{12Object payload = message.getPayload();13if(payloadinstanceofCustomerEventPayload) {14varheaders =newIOnCustomerEventConsumerService.CustomerEventPayloadHeaders();15headers.putAll(message.getHeaders());16service.onCustomerEvent((CustomerEventPayload) payload, headers);17return;18}19log.error("Received message without any business handler: [payload: {}, message: {}]", payload.getClass().getName(), message);20}catch(Exception e) {21// error handling and dead-letter-queue routing omitted for brevity22}23}24}1// Implement the business interface and add it to your context2@Component3classDoCustomerRequestConsumerServiceimplementsIDoCustomerRequestConsumerService{45@Override6publicvoiddoCustomerRequest(CustomerRequestPayload payload, CustomerRequestPayloadHeaders headers){7log.info("Received '{}' message with payload: {}", payload.getClass(), payload);8// [...] do something with this message9}10}Exception Handling with Business Dead Letter QueueZenWave SDK consumers can be configured to route exceptions to different error queues. This is useful to manage non-retryable business exceptions so the stream processing is not interrupted. If your code throws an exception not configured for error routing, it will be rethrown and follow the standard error handling mechanism for your particular Spring Cloud Stream binder.1spring.cloud.stream.bindings:2on-customer-event-in-0:3destination:customer.events4content-type:application/json5# configuring error routing for this consumer6dead-letter-queue-error-map:>7{8'javax.validation.ValidationException': 'on-customer-event-validation-error-out-0',9'java.lang.Exception': 'on-customer-event-error-out-0'10}Populating Headers at Runtime AutomaticallyZenWave SDK providesx-runtime-expressionfor automatic header population at runtime. Values for this extension property are:$message.payload#/<json pointer fragment>: follows the same format as AsyncAPICorrelation IDobject.$tracingIdSupplier: will use the tracing idjava.function.Supplierconfigured in your Spring context.1CustomerEventMessage:2name:CustomerEventMessage3//[...]otherpropertiesomittedforbrevity4headers:5type:object6properties:7kafka_messageKey:8type:string9description:Thisonewillbepopulatedautomaticallyatruntime10x-runtime-expression:$message.payload#/customer/id11tracingId:12type:string13description:Thisonewillbepopulatedautomaticallyatruntime14x-runtime-expression:$tracingIdSupplier1<configOption>2<tracingIdSupplierQualifier>myTracingIdSupplier</tracingIdSupplierQualifier>{/* default is "tracingIdSupplier" */}3<runtimeHeadersProperty>x-custom-runtime-expression</runtimeHeadersProperty>{/* you can also override this extension property name */}4</configOption>1@Bean("myTracingIdSupplier")2publicSuppliertracingIdSupplier(){3return() ->"test-tracing-id";4}InMemory Producers as TestDoublesAlongside the generated producer, ZenWave SDK also generates anin-memory producer captorthat can be used as a test double and a singletone manual context so you easily include them in your unit/integration tests.1// generated class, you can use in your tests2publicclassProducerInMemoryContext{34publicstaticfinalProducerInMemoryContext INSTANCE =newProducerInMemoryContext();567privateCustomerEventsProducerCaptor customerEventsProducerCaptor =newCustomerEventsProducerCaptor();89public<T extends ICustomerEventsProducer>TcustomerEventsProducer(){10return(T) customerEventsProducerCaptor;11}12}And you can use it in your tests to instantiate your service and perform assertions. You can finda working example here.1// example of how you can instantiate your service using the in-memory producer captor2publicclassInMemoryTestsManualContextextendsInMemoryTestsConfig{34// [...] other beans omitted for brevity56publicCustomerUseCasesImplcustomerUseCases(){7// instantiating a bean with in-memory dependencies8returnnewCustomerUseCasesImpl(customerRepository(), ProducerInMemoryContext.INSTANCE.customerEventsProducer());9}10}1112// and using it in your tests to perform assertions13publicclassCustomerUseCasesTest{1415// this is the in-memory producer captor wired16CustomerEventsProducerCaptor customerEventsProducer = ProducerInMemoryContext.INSTANCE.customerEventsProducer();1718@Test19voidtestCustomerUseCase(){20// [...] test your use case21Assertions.assertEquals(3, customerEventsProducer.getCapturedMessages(customerEventsProducer.onCustomerEventBindingName).size());22}23}Enterprise Integration PatternsBecause access to the underlying implementation is encapsulated behind the generated interfaces, it's possible to implement many Enterprise Integration Patterns (EIP) on top of them.Transactional Outbox: for MongoDB, plain JDBC, and Debezium SQLBusiness DeadLetterQueueEnterprise EnvelopAutomatic headersJump to (https://zenwave360.github.io/zenwave-sdk/plugins/asyncapi-spring-cloud-streams3/[ZenWaveSDK Spring-Cloud-Streams plugin] for more details on how to configure this.Originally published athttps://zenwave360.github.io.
"""
--------------------------------------------------------------------------------


Post 35
ID: https://www.asyncapi.com/blog/july-2023?utm_source=rss
Title: Community Update: July 2023
Link: https://www.asyncapi.com/blog/july-2023?utm_source=rss
Summary: July Community Update
Content:
"""
Earlier this month, we officially kickstarted the AsyncAPI Mentorship Program. After receiving an overwhelming response of over 90+ applications for the program, we inducted13 mentees into the AsyncAPI mentorship program. We are thrilled to welcome these talented individuals and look forward to seeing them grow and excel in their respective projects. Additionally, we are excited that ourbudget of $19,500 for the AsyncAPI Mentorship Program got approved, which means we can compensate all successful mentees of the program. We are grateful for the support and look forward to a successful program.AsyncAPI Conf on Tour 2023 (AACoT)Tickets for AACoT'23 London event are available for purchase now, and we have some fantastic talks lined up for September 20th that you won't want to miss.Hurry and get your tickets through Open Collectivebecause we have limited availability.We are also in the process of reviewing talk proposals and will announce our selected speakers soon.Be sure to keep an eye out for our August newsletter, as we will be sharing some exciting news there and maybe revealing the next location.Spec x ToolingThe work on the pre-release version of AsyncAPI Studio is now in progress. The implementation will include the support of validating AsyncAPI v3 documents. If you want to follow the development process or contribute, pleasecheck out the ShapeUP dashboard.On the other hand, we have released the initial versions of three protocol bindings. Our gratitude goes out to:Adam Retterfor contributing to theJMS binding,Richard Coppen, andSteve Headfor agreeing to maintain it long-term.Ian CooperandDec Kolawskifor contributing and being maintainers to theSNS bindingandSQS binding.Thanks to the involvement of various community members in reviewing the changes.DesignOur design contributor community is experiencing significant growth, and we are thrilled to see our onboarding process going smoothly. More talented individuals joining the community will bring fresh ideas and different perspectives and further foster collaboration and creativity in the initiative. Additionally,Mayais currentlyleading a design for our website, and we're eager to see all the great insights she'll bring to enhance our website even better.Ambassador ProgramDo you have a passion for event-driven architectures or message-driven APIs? Would you like to contribute to the AsyncAPI community? You can become an AsyncAPI Ambassador by making at least 4 contributions, either by giving talks, writing articles, or promoting AsyncAPI. If you're interested,learn more about becoming an AsyncAPI Ambassador today!TSC membersTheAsyncAPI Technical Steering Committeeis expanding rapidly, and we would like to warmly welcome our two latest members,Thulisile Sibanda, andAishat Muibudeen. We are excited to have you on board.In Case You Missed ItDid you miss our community session on Open Standards and Private Products? You can catch up by watching the recording.Coming in AugustAsyncAPI Community Updates Newsletter- Stay updated on the latest community activities bysubscribing to the AsyncAPI Newsletter.
"""
--------------------------------------------------------------------------------


Post 36
ID: https://www.asyncapi.com/blog/2023-june-docs-report?utm_source=rss
Title: AsyncAPI Docs Report - June 2023
Link: https://www.asyncapi.com/blog/2023-june-docs-report?utm_source=rss
Summary: import ContributionNotes from '@/assets/docs/fragments/contribution-notes.md';
import TalkToMe from '@/assets/docs/fragments/talk-to-me.md';

AsyncAPI Docs Report - June 2023

In June 2023, the AsyncA
Content:
"""
AsyncAPI Docs Report - June 2023In June 2023, the AsyncAPI documentation had7,827 sessionsand4,203 unique users, including2,566 new users, showing consistent engagement within our vibrant docs community.Adding to this excitement was the kick-off of both the2023 Google Season of DocsandTechnical Writing Mentorship Programprojects, further expanding our bustling docs community.Google Season of Docs 2023 Update: AsyncAPI ProjectsAs of June, our Google Season of Docs (GSoD) writers have been diligently working on tasks from thecover AsyncAPI document sections in detailproject. Most have completed initial drafts for their first documents, and some are already diving into their second. A select few have gone above and beyond, arranging discussions with core spec contributors to clarify questions on their docs pull requests.Meanwhile, progress on thecreate 100-level interactive learning pathproject continues. We've concluded thecommunity vote on our host platform for AsyncAPI Interactive Learning Paths, withKillercodasecuring the majority of votes. Consequently, our writers are now fully geared towards crafting the 2023 GSoD Learning Path on the Killercoda platform. Once developed, we can repurpose this content to also share on the Linux Foundation platform.Note:For clarity, the 2023 GSoD focus lies solely on implementation on one platform—Killercoda. Any potential addition of the content to the Linux Foundation platform is a separate task, not included in the 2023 GSoD writers' obligations.Introducing aTechnical WritingCategory in 2023 AsyncAPI Mentorship ProgramIn our quest to continually enhance the AsyncAPI Mentorship Program, we're excited to announce the inclusion of aTechnical Writingcategory in our 2023 edition. For 2023, the selected technical writers will document how various protocols(i.e., Kafka, Websocket, MQTT, etc.)work with the AsyncAPI specification.We're delighted to welcome and congratulate our accepted writers into this year's program -Cynthia Peter,Arya Gupta,Joy Almeida, andVaishnavi Nandakumar. Their remarkable skills and passion shone through during a rigorous selection process, earning them their well-deserved places in our 2023 Technical Writing Mentorship Program.Join ourOPENSpec 3.0 Docs MeetingsCalling all AsyncAPI community members! We're continuing our series ofSpec 3.0 documentationcommunity meetings, happeningbiweekly on Thursdays at 14:30 UTC.Whether you're eager to contribute to Spec 3.0 docs, or you have questions that need answers, these open meetings are your gateway to connect and collaborate with our expert spec contributors. We especially encourage our GSoD and Mentorship Program writers to attend so as to ensure that their contributions align flawlessly with Spec 3.0.Missed our June Meetings?No worries! You can watch the previous JuneSpec 3.0 documentationcommunity meetings on the AsyncAPI YouTube channel.AsyncAPI Docs' Hall of Fame - Welcoming Florence NjeriWe're delighted to introduce the⭐AsyncAPI Docs' Hall of Fame⭐ to our monthly AsyncAPI Docs reports; a place to feature particularly exceptional and dedicated technical writing maintainers and contributors!A hearty congratulations toFlorence Njeri, our inaugural inductee and exceptional docs contributor for June. Florence, an active TSC member, excels in her meticulous maintenance of theGenerator Tool documentation. Her consistent, flawless, and timely contributions have made her an invaluable asset to our community.Florence, a Kenyan🇰🇪engineer, emerged from the 2022 Google Season of Docs with AsyncAPI, focusing on Generator Tool docs. Of the six writers from 2022 GSoD, she distinguished herself bycrafting the most documentationandautomating the copying of docs from the/generatorrepo to the/websiterepoviaasyncapi/generator#872.AsyncAPI Docs - June SummaryJune 2023 was a pivotal month for AsyncAPI's vibrant documentation community. The month marked the introduction of ourAsyncAPI Docs' Hall of Fame, withFlorence Njeribeing the inaugural inductee for her exceptional contribution. We've also unveiled theTechnical Writingcategory as part of our 2023 Mentorship Program, welcoming Cynthia Peter, Arya Gupta, Joy Almeida, and Vaishnavi Nandakumar.In our ongoing series ofOPENSpec 3.0 Docs Meetings, held biweekly, we continued to foster collaboration and knowledge-sharing. Our Google Season of Docs (GSoD) 2023 witnessed significant progress, with writers focusing on creating a 100-level interactive learning path on the Killercoda platform. The website sessions for June were at7,827with4,203 unique users, indicating a healthy and growing engagement.Congratulations to all members for this productive month, and let's continue this momentum moving forward!How to contribute to AsyncAPI DocsDid you know that you can contribute Docs to AsyncAPI as well?Code isn't the only way to contribute to OSS; Dev Docs are ahugehelp that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution.❤️To get started as a Docs contributor:Familiarize yourself with ourproject's Contribution Guideand ourCode of Conduct.Head over to ourAsyncAPI Docs Board.Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started.If there is no work done in that Docs issue yet, feel free to open a PR and get started!Docs contributor questionsDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!Tag me in your AsyncAPI Doc PRs orGitHub Discussionsvia my GitHub handle,quetzalliwrites🐙.Talk to meI want and need to listen👂🏽to all of your perspectives and ideas. Please don't be shy to express to me what you think needs to be documented first or what is missing.📝There's a lot of good work ahead, butyoudetermineour content roadmapbecause the OSS community needs should always come first.✨
"""
--------------------------------------------------------------------------------


Post 37
ID: https://www.asyncapi.com/blog/june-2023?utm_source=rss
Title: Community Update: June 2023
Link: https://www.asyncapi.com/blog/june-2023?utm_source=rss
Summary: June Community Update
Content:
"""
Over the last few months, we have seen a significant surge in people interested in using AsyncAPI to document and define event-driven architectures. We've received feedback on how it has been challenging to reuse objects effectively, like servers, messages, channels, and even author AsyncAPI documents. If you are one of those individuals, we have excellent news;Fran Méndez,Samir Amzani, and the team have been working on redesigning the AsyncAPI Studio.This redesign aims to enhance the developer experience and ensure the quality of AsyncAPI files and tools. Additionally, we are trying outthe Shape Up dashboardto coordinate with the development and redesign process. Pleasejoin the AsyncAPI Studio discussionif you wish to keep up with the progress or contribute.AsyncAPI Conf on Tour 2023 (AACoT) UpdateAsyncAPI is heading to London on the 20th of September, 2023, andIBMwill be hosting us. We want to give a big shout-out toDale Lanefor bringing them on board.TheCall for Speakers for AACoT London Edition is now open, and we welcome anyone who has a talk that can benefit or wants to share their experience with the AsyncAPI community to submit their session before the deadline on the 28th of July.We've been in touch with the speakers for AACoT Madrid Edition and are thrilled to have received exceptional talks from industry experts. We're working on creating a schedule and a rich program that will benefit all attendees.Code of Conduct CommitteeDuring April, we started thediscussion around refreshing the AsyncAPI Code of Conduct (CoC), and we have received a positive response from the community thus far. As part of the conversation, we are establishing a CoC Committee that will enforce and ensure that everyone in the community follows the CoC and doesn't violate it.
In line with that, we are encouraging everyone to participate in nominating three individuals who are part of theTechnical Steering Committeeto become our first Code of Conduct Committee.Drop a comment with your nominations to theAsyncAPI Code of Conduct Refresh discussion.Everyone must be involved, which helps keep our community safe and inclusive.Spec x ToolingWe are thrilled to announce that theAPI documentation for Modelinais now digitalized. This makes it easier to find information on how to use Modelina's features, and the best part is that it automatically updates when the source code changes. Also, we have added integration tests for TypeScript, PHP, C++, and Kotlin. Please be sure to try them out today and let us know what you think.AsyncAPI Mentorship ProgramAfter receiving an overwhelming response from folks all over the community about the mentorship program application, we are moving closer to the announcements of this year's mentees for the AsyncAPI Mentorship Program Cohort Two. Our gratitude goes out to all our mentors who dedicate their time reviewing applications to select the best candidates to mentor.Please keep your eyes on the announcement by followingthe AsyncAPI Mentorship discussion.AsyncAPI Bounty Program UpdateThe trial for the AsyncAPI Bounty Program has been progressing exceptionally well. Most of the issues have been successfully completed and compensated. We anticipate the remaining two issues to be wrapped up within the next few days.We are excited to observe the success of this trial and its contribution towards our community goals.In Case You Missed ItAre you looking to enhance your knowledge about AsyncAPI and its tools? Check out this onboarding video to gain a deeper understanding.If you missedAce'sworkshop on building a headless commerce architecture using the AsyncAPI specification and AMQP, there's no need to worry. You can catch up by watching the recording.Coming in JulyAsyncAPI Community Updates Newsletter- The next issue will drop in July's first week. Stay informed about the latest community activities bysubscribing to the AsyncAPI Newsletter.Open Standards and Private Products, with Valériane Venance- We will hostValériane Venance, Principal Developer Advocate at Bump.sh, on the13th of July at 9 am UTC as we tackle the topic "Open Standards and Private Products: A DevRel's Dream or Nightmare". Mark your calendars, and be sure to join.
"""
--------------------------------------------------------------------------------


Post 38
ID: https://www.asyncapi.com/blog/the-new-era-approaches?utm_source=rss
Title: The New Era Approaches
Link: https://www.asyncapi.com/blog/the-new-era-approaches?utm_source=rss
Summary: An update around AsyncAPI 3.0, where we are, what is remaining, release schedule, and a first look at 3.0
Content:
"""
Back inMarch 2022, you heard the first official words around AsyncAPI 3.0. Since then, a lot of people have been working diligently across many expertise to bring it to life. And with its current state, it's finally time to give an update on the progress.Show Me the Money!We are not going to give any lengthy description of features, fixes, and changes. Instead, I will just show you the money as a teaser.😉Below is an AsyncAPI v3 document that defines how you, a public application, can interact with my Smartylighting Streetlights system, where you can turn on a specific streetlight through WebSocket and get real-time information about environmental lighting conditions through Kafka.See how many features you can spot just from this example. Some changes are absent in the example, but I tried to cramp as many changes into it as possible. Below the example is a short list of changes you'll be able to fact-check your guess with.1asyncapi:"3.0.0"2info:3title:Smartylighting Streetlights public API4version:"1.0.0"5description:|6The Smartylighting Streetlights public API allows you to remotely manage the city lights through Kafka and WebSocket.78### Check out its awesome features:910* Turn a specific streetlight on 🌃11* Receive real-time information about environmental lighting conditions 📈12license:13name:Apache2.014url:https://www.apache.org/licenses/LICENSE-2.01516servers:17kafka:18host:test.mykafkacluster.org:809219protocol:kafka-secure20description:Test Kafka broker21security:22- $ref:'#/components/securitySchemes/saslScram'23websocket:24host:test.websocket.org:199925protocol:ws26description:Test WebSocket server2728defaultContentType:application/json2930channels:31turnStreetlightOnChannel:32address:"/"33messages:34turnOn:35$ref:"#/components/messages/turnOn"36servers:37- $ref:"#/servers/websocket"3839turnStreetlightOnReplyChannel:40address:"/"41messages:42turnOnReply:43$ref:"#/components/messages/turnOnReply"44servers:45- $ref:"#/servers/websocket"4647lightMeasured:48description:The topic on which measured values may be produced and consumed.49address:"smartylighting.streetlights.1.0.event.{streetlightId}.lighting.measured"50parameters:51streetlightId:52$ref:"#/components/parameters/streetlightId"53messages:54lightMeasured:55$ref:"#/components/messages/lightMeasured"56servers:57- $ref:"#/servers/kafka"5859operations:60turnOn:61action:send62operationId:turnOn63channel:64$ref:"#/channels/turnStreetlightOnChannel"65reply:66channel:67$ref:"#/channels/turnStreetlightOnReplyChannel"6869lightMeasured:70action:receive71summary:Inform about environmental lighting conditions of a particular streetlight.72operationId:receiveLightMeasurement73channel:74$ref:"#/channels/lightMeasured"75traits:76- $ref:"#/components/operationTraits/kafka"7778components:79messages:80turnOn:81name:turnOn82title:Turn on83summary:Command a particular streetlight to turn the lights on.84payload:85$ref:"#/components/schemas/turnOnPayload"8687turnOnReply:88name:turnOnReply89title:Turn on reply90summary:Reply from turning on the lights91payload:92$ref:"#/components/schemas/turnOnReplyPayload"9394lightMeasured:95name:lightMeasured96title:Light measured97summary:Inform about environmental lighting conditions of a particular streetlight.98contentType:application/json99traits:100- $ref:"#/components/messageTraits/commonHeaders"101payload:102$ref:"#/components/schemas/lightMeasuredPayload"103104schemas:105turnOnPayload:106type:object107properties:108streetlightId:109description:The ID of the streetlight.110type:string111sentAt:112type:string113format:date-time114description:Date and time when the request was sent115116turnOnReplyPayload:117type:object118properties:119turnedOnTimestamp:120type:string121format:date-time122description:Date and time when the light was actually turned on.123124lightMeasuredPayload:125schemaFormat:"application/vnd.apache.avro;version=1.9.0"126schema:127type:record128name:User129namespace:com.company130doc:User information131fields:132- name: lumens133type:int134- name: sentAt135type:timestamp_ms136137securitySchemes:138saslScram:139type:scramSha256140description:Provide your username and password for SASL/SCRAM authentication141142parameters:143streetlightId:144description:The ID of the streetlight.145146messageTraits:147commonHeaders:148headers:149type:object150properties:151my-app-header:152type:integer153minimum:0154maximum:100155156operationTraits:157kafka:158bindings:159kafka:160clientId:publicAs of the pre-releasev3.0.0-next-major-spec.12, this is a valid AsyncAPI document. You can always find the most recent pre-release version here:https://www.asyncapi.com/docs/reference.All the changes in 3.0 up until now are the following:Request/reply pattern.Introduce the new Channel Object, detached from operations.Introduce the new Operation object, detached from channels.Channels are no longer identified with address/topic/path.Optional channels.Schemas and schema formats are now naturally bound.Cleaned up the root object.Added additional meta fields for Server Object, Channel Object, Operation Object, and Operation Trait Object.External Documentation Object and Tag Object can now be reused and referenced.Unified referencing behavior.In due time we will give you a complete rundown about all the changes in 3.0 and extended documentation that explains the features in more in-depth, including a migration guide and release blog post.The Remaining EffortThe specification work is nearly done; only one change is still being discussed which is changing traits behavior to an inheritance that can be overwritten.However, at AsyncAPI, a specification is nothing without documentation and tools, which is why the majority of the remaining effort resolves just that.For documentation, you have probably noticed that since the first release of 2.0, we now have concepts, tutorials, and guides. Some of those docs will be updated due to 3.0.Regarding tooling, it's impossible to give you a clear overview of what exactly will support 3.0 right out the gate because there are many different code owners and contributors with individual priorities. So if you want a tool to support 3.0 right out the gate, please do head over to the issue and voice the need, add a👍, write a comment, or maybe even contribute the needed changes!AsyncAPI CLIAsyncAPI asyncapi-reactAsyncAPI generatorAsyncAPI studioAsyncAPI converter-jsAsyncAPI vs-asyncapi-previewAsyncAPI bundlerAsyncAPI diffAsyncAPI cupidAsyncAPI gleeAsyncAPI server-apiAsyncAPI modelinaAsyncAPI dotnet-nats-templateAsyncAPI ts-nats-templateAsyncAPI python-paho-templateAsyncAPI nodejs-ws-templateAsyncAPI java-templateAsyncAPI java-spring-cloud-stream-templateAsyncAPI go-watermill-templateAsyncAPI java-spring-templateAsyncAPI markdown-templateAsyncAPI html-templateThe only tools we can say for sure that will support 3.0 right out the gate are the JS parser and the specification JSON Schema documents because they need to be updated for any specification change to be accepted😆Currently, we areusing completed tasks as the release date for 3.0. Once all tasks are completed, we'll release 3.0.Release DateThat leaves the big question... When is the release then?Honestly, we tried to stick with a release date, and more specifically, we thought the July release period (yes, next month). However as you can probably guess with the remaining work, that's most likely not going to happen. As we are learning, major changes take time, and schedules in open source are, hard, to say the least.😄While all the specification changes are most likely done by July, my best guess, right now, is for everything to be released in September.The more people help out, the faster it will get done.😉The next time you will hear from me will be the release blog post for 3.0.👋Photo byTim MarshallonUnsplash
"""
--------------------------------------------------------------------------------


Post 39
ID: https://www.asyncapi.com/blog/may-2023?utm_source=rss
Title: AsyncAPI Community Update: May 2023
Link: https://www.asyncapi.com/blog/may-2023?utm_source=rss
Summary: May Community Update
Content:
"""
At AsyncAPI, we strive to provide valuable opportunities for individuals to work on open-source projects and gain real-world experience.
We are excited to announce the fantastic projects that made it to the Google Summer of Code this year. Although we initially submitted five projects, only four got selected.ProjectMentor/sSelected CandidateAutomate listing of members of technical steering committeeLukasz GornickiRicha SharmaAdd "Autofix" feature for common linting errors (w/ spectral)Iván García Sainz-AjaSavio DiasIntroduce UI tests and refactoring in the websiteAkshat Nema,AbirAadrika BhargavaAuthentication and Authorization support for websocket adaptersSouvik,Khuda Dad NomaniGodwin AlexanderWe can't wait to see these talented individuals progress throughout the program.Spec x ToolingTheParser-JS v2is finally released. You can browse theParser-JS documentationand learn more! It supports the AsyncAPI schema and JSON schema formats. Additionally, the Parser-JS implements a global API definition for all AsyncAPI parser implementations and is browser compatible.You can now reference AsyncAPI JSON Schema along with the SchemaStore project. This feature allows you to use JSON and YAML plugins in your IDE and fetches the JSON schema for your AsyncAPI document, providing you with autocompletion, validation, and tooltips. To ensure that the IDE recognizes your AsyncAPI document, SchemaStore matches the file names for the schema. For more details,check out the SchemaStoreor test theAsyncAPI JSON Schemafor yourself.AsyncAPI Mentorship ProgramWe are glad to have received a significant number of entries and are now moving to the next phase - ranking the projects in this year's cohort. Please stay updated by following theAsyncAPI Mentorship discussion and timeline.AsyncAPI Conf on Tour (AACoT) WebsiteThe conference redesign website is going smoothly, thanks toMaya'sincredible work. She's been busy crafting some impressive designs, and we are excited about the progress so far. If you have some ideas or input, or you'll like to contribute, pleasejoin the AACoT discussion, and let's make AACoT'23 a huge success.In case you missed it...We have a new episode on the AsyncAPI podcast featuringAce, and you don't want to miss it! Tune in and hit theAsyncAPI podcast subscribe buttonto stay in the loop.Missed the latest community call, don't worry! You can catch up by watching the recording.Coming in JuneAACoT'23 London Edition-  We're excited that AACoT'23 is coming to London on the 20th of September. The Call for Speakers will open soon, so start working on those ideas.AsyncAPI Community Updates Newsletter-The next issue will be released in the first week of June. To stay updated on the latest activities happening across the community,subscribe to the AsyncAPI Newsletter.AsyncAPI Podcast- Our upcoming episode will featureBarbaño Gonzalez, an Education Program Manager and Ambassador Program Lead. Don't forget tosubscribe to the AsyncAPI Podcast.Till next time, keep your head held high.You got this!
"""
--------------------------------------------------------------------------------


Post 40
ID: https://www.asyncapi.com/blog/2023-April-docs-report?utm_source=rss
Title: AsyncAPI Docs Report - April 2023
Link: https://www.asyncapi.com/blog/2023-April-docs-report?utm_source=rss
Summary: import ContributionNotes from '@/assets/docs/fragments/contribution-notes.md';
import TalkToMe from '@/assets/docs/fragments/talk-to-me.md';

AsyncAPI Docs Report - April 2023

In April 2023, the Asyn
Content:
"""
AsyncAPI Docs Report - April 2023In April 2023, the AsyncAPI documentation experienced significant growth with8,889 sessionsand4,575 unique users, including2,895 new users. April was a strong month for our expanding docs community.Google Season of Docs 2023 (GSoD) at AsyncAPIWe are thrilled to introduce this year's selected technical writing candidates for the 2023 Google Season of Docs (GSoD) at AsyncAPI!2023 GSoD Accepted Technical Writer CandidatesQuetzalli Writes has chosen four outstanding candidates to collaborate with us for GSoD this year:Mahfuza,Bhaswati,Rohit, andHridyesh.Overview of the LIVE Writing/Editing InterviewsDuring the LIVE interview session, Quetzalli divided the exercises into two parts: writing and editing. Candidates were given a document and asked to identify issues and potential solutions, then rewrite or edit the document as needed. Some candidates faced challenges with staying focused on writing, while others struggled to generate ideas due to nerves or the live format of the exercise. A few candidates had difficulty spotting errors and completing the editing task.However, Quetzalli did not disqualify candidates who experienced nerves, writer's block, or had limited editing skills. Instead, she guided them with questions and suggestions, encouraging them to search for answers online during the call. The main objective was to evaluate the candidates' problem-solving skills, ability to accept feedback, and integrate suggestions for improvement. The following sections outline the writing and editing exercises and the selection criteria for the candidates.The Writing PartFor the writing exercise, Quetzalli utilizedan old commit from the 2022 GSoD project, which contained numerous errors for candidates to identify and fix. Some examples of these errors include:Multiple preview deployment links instead of live links to actual documentation.Content more appropriate for theBackground contextsection crammed into theIntroduction.Inadequate tutorial steps that lacked sufficient technical background context for first-time users.The Editing PartFor the editing exercise, Quetzalli used the sameold commit from the 2022 GSoD projectfor some candidates. For those who progressed further during the writing exercise, she provided a second block of content to edit that was unformatted and contained repeated mistakes. The purpose of this unformatted text was to assess the candidates' ability to:Research terms like CLI, Node.js, macOS, etc., instead of assuming they know the correct spelling.Use thereplace allkeyboard shortcut to fix repeated mistakes.Think to check and confirm the correct spelling of AsyncAPI during an AsyncAPI interview.Candidate Selection CriteriaThe following factors were considered when assessing candidates:A humble attitude that actively listens and incorporates feedback.Strong collaborative abilities.A clear writing style.Technical writing experience and passion.Editing experience and approach.Effective use of grammar tools(e.g., Grammarly)and tech writing research tools(e.g., Phind.com, ChatGPT).Competency in researching with search engines such as Google.Spec 3.0 ReleaseAsyncAPI community members, including Jonas Lagoni and Sergio Moya, have started the process of identifying Spec 3.0 Subject Matter Experts (SMEs) who can provide the necessary background context for our technical writers to begin updating our documentation.While Quetzalli and Sergio are currently the only ones sharing the Spec 3.0writing work, we're actively seeking more contributors to join their writing efforts.The following Spec 3.0 release changes require documentation updates:Request/replyOperation/channel decouplingOperation action: pub/sub confusionUnified referencing behavior: using $ref instead of stringCommon metadata fieldsMoving root propertiestagsandexternalDocstoinfoSplitting out server URL into host and pathnameMore reusable objects in componentsContributor GrowthWe are delighted to report an increase innew docs contributorscollaborating on theAsyncAPI Docs Style Guide, working alongsideBhaswati Roy. We would like to recognize and thankAbhishekfor his ongoing contributions to our Style Guide andMahfuzafor proactivelyopening PRs to fix documentation bugs.Our gratitude goes out to our new contributors for their valuable contributions to the expansion and improvement of our documentation!ConclusionApril 2023 has been an exciting month for AsyncAPI, as we welcomed exceptional technical writing candidates through 2023 GSoD and expanded our community of docs contributors again. These developments will enhance the quality of AsyncAPI documentation and foster a more collaborative environment. We eagerly anticipate the progress our technical writers will make, addressing Spec 3.0 release changes with the support of Subject Matter Experts (SMEs) and new contributors. Our growing docs community, demonstrated by the work on the AsyncAPI Docs Style Guide and proactive bug fixing, showcases the dedication of our contributors. 2023 GSoD at AsyncAPI signifies a major milestone in our community's journey towards better documentation, a stronger docs community, and an improved overall experience for AsyncAPI users.How to contribute to AsyncAPI DocsDid you know that you can contribute Docs to AsyncAPI as well?Code isn't the only way to contribute to OSS; Dev Docs are ahugehelp that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution.❤️To get started as a Docs contributor:Familiarize yourself with ourproject's Contribution Guideand ourCode of Conduct.Head over to ourAsyncAPI Docs Board.Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started.If there is no work done in that Docs issue yet, feel free to open a PR and get started!Docs contributor questionsDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!Tag me in your AsyncAPI Doc PRs orGitHub Discussionsvia my GitHub handle,quetzalliwrites🐙.Talk to meI want and need to listen👂🏽to all of your perspectives and ideas. Please don't be shy to express to me what you think needs to be documented first or what is missing.📝There's a lot of good work ahead, butyoudetermineour content roadmapbecause the OSS community needs should always come first.✨
"""
--------------------------------------------------------------------------------


Post 41
ID: https://www.asyncapi.com/blog/2023-may-docs-report?utm_source=rss
Title: AsyncAPI Docs Report - May 2023
Link: https://www.asyncapi.com/blog/2023-may-docs-report?utm_source=rss
Summary: import ContributionNotes from '@/assets/docs/fragments/contribution-notes.md';
import TalkToMe from '@/assets/docs/fragments/talk-to-me.md';

AsyncAPI Docs Report - May 2023

In May 2023, the AsyncAPI
Content:
"""
AsyncAPI Docs Report - May 2023In May 2023, the AsyncAPI documentation had9,453 sessionsand4,876 unique users, including2,895 new users, highlighting the increasing interest and engagement within our vibrant docs community. May was a busy month in our expanding docs community!Google Season of Docs 2023 (GSoD) at AsyncAPIWe are thrilled to have started working with this year's selected technical writing candidates for the 2023 Google Season of Docs (GSoD) at AsyncAPI:Mahfuza,Bhaswati,Rohit, andHridyesh. This year, all GSoD interns will get the opportunity to work on both GSoD projects:cover AsyncAPI document sections in detailandcreate 100-level interactive learning path.Additionally, our GSoD interns have started acommunity vote to select our host platform for AsyncAPI Interactive Learning Paths. You are cordially invited to participate in the vote and share your thoughts, as your feedback plays a vital role in shaping the future of our interactive learning experience.NEW Spec 3.0 Docs Meeting -OPENAttention, AsyncAPI community members! We are excited to announce a newOPENmeeting dedicated toSpec 3.0 documentation. In this meeting, we will have the privilege of hosting Spec 3.0 Subject Matter Experts (SMEs), including the esteemed Jonas Lagoni, who will provide essential background context. If you are interested in contributing to Spec 3.0 docs or have any questions, this is the perfect opportunity to join and engage with our knowledgeable experts. We also encourage our GSoD interns to attend these meetings to ensure their new docs align seamlessly with Spec 3.0.Mark your calendars! We are planning to hold the first meeting on June 15, 2023, at 02:30 UTC. Stay tuned for further updates and details!Additionally, we want to highlight an upcoming change in the Spec 3.0 release that will require documentation updates. TheRequest/replyfeature is among the first to undergo these updates. Keep an eye out for further information and ensure your familiarity with this important change.Thank you for your active participation and dedication to advancing the AsyncAPI ecosystem. Let's strive for excellence in our Spec 3.0 documentation!Contributor GrowthWe are thrilled to share the exciting news of welcoming a new contributor to our documentation community! Please join us in extending a warm welcome toCynthia Peter! Cynthia is eager to enhance her technical writing skills and contribute to the growth of the AsyncAPI documentation.To start her journey, Cynthia will be working on her first task, which involves completing theAsyncAPI Docs Style GuideGlossary task. Once she successfully completes this task, we will swiftly onboard her with a Spec 3.0-related assignment. We are excited to see her skills flourish and her valuable contributions to the documentation.Let's celebrate Cynthia's arrival and support her as she embarks on this rewarding endeavor. Together, we will continue to elevate the quality and accessibility of the AsyncAPI documentation.ConclusionMay witnessed another remarkable increase in sessions with a total of 9,453 community members exploring our docs. Welcoming 2,895 new docs readers to our community further demonstrates the expanding interest in AsyncAPI.We are grateful for the dedication and contributions of our community members, both new and existing, who have played a pivotal role in this progress. The enthusiasm and support from our community continue to inspire us to provide high-quality documentation, and we appreciate the trust you place in us.Furthermore, we are excited about the future endeavors and collaborations within the AsyncAPI ecosystem. The selected technical writing candidates for the 2023 Google Season of Docs (GSoD) program, along with their projects, promise to bring further enhancements to our documentation. Additionally, the community vote for the host platform of AsyncAPI Interactive Learning Paths empowers our community members to shape the future of our learning experience.How to contribute to AsyncAPI DocsDid you know that you can contribute Docs to AsyncAPI as well?Code isn't the only way to contribute to OSS; Dev Docs are ahugehelp that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution.❤️To get started as a Docs contributor:Familiarize yourself with ourproject's Contribution Guideand ourCode of Conduct.Head over to ourAsyncAPI Docs Board.Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started.If there is no work done in that Docs issue yet, feel free to open a PR and get started!Docs contributor questionsDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!Tag me in your AsyncAPI Doc PRs orGitHub Discussionsvia my GitHub handle,quetzalliwrites🐙.Talk to meI want and need to listen👂🏽to all of your perspectives and ideas. Please don't be shy to express to me what you think needs to be documented first or what is missing.📝There's a lot of good work ahead, butyoudetermineour content roadmapbecause the OSS community needs should always come first.✨
"""
--------------------------------------------------------------------------------


Post 42
ID: https://www.asyncapi.com/blog/april-2023?utm_source=rss
Title: AsyncAPI Community Update: April 2023
Link: https://www.asyncapi.com/blog/april-2023?utm_source=rss
Summary: April Community Update
Content:
"""
April brought ecstatic news that AsyncAPI is participating in the 2023 Google Season of Docs (GSoD). This achievement is a result of the exceptional work done byQuetzalli Writes, our lead documentation engineer and author ofDocs-as-Ecosystem: The Community Approach to Engineering. Quetzalli's contributions to the documentation process have been vital in improving the quality of AsyncAPI documentation, and her hard work has not gone unnoticed. As part of the GSoD program, Quetzalli carefully reviewed and selected the best applicants out of the 87 applications received, and she conducted live writing/editing interviews. We are excited to welcome the five selected candidates, Mahfuza, Bhaswati, Rohit, Abhishek, and Hridyesh! We can't wait to see them contribute to AsyncAPI's documentation with Quetzalli's guidance and mentorship. Do check outQuetzalli's Q1 AsyncAPI documentation reportto learn more about our docs community's recent efforts.AsyncAPI Bounty Program TrialWe are thrilled to introduce the trial launch of the AsyncAPI Bounty Program. This program aims to express our gratitude and support to our maintainers and contributors who dedicate their time and efforts to drive the initiative forward. As part of the trial, we have selected seven projects comprising various coding, design, and technical writing tasks. We invite you to explore theprojects participating in the AsyncAPI Bounty Program trial run.Code of Conduct RefreshAsyncAPI has been growing exponentially, and to maintain a safe and inclusive environment for all community members, we must refresh our Code of Conduct. Our goal is to thrive on ensuring the community remains welcoming, respectful, and supportive. Please share your thoughts and suggestions in thisopen discussion for our Code of Conduct refresh.Call for Speakers MadridAsyncAPI Conf on Tour 2023 (AACoT) is coming to Madrid on the 18th - 19th of October. TheCall for Speakers of AACoT Madrid Editionis now open, and we are looking for diverse talk topics ranging from community, API design, and best practices. We welcome both first-time and returning speakers to submit their proposals. We can't wait to see you there!Spec x ToolingWe are excited to announce the release of the newParser-API v1.0.0. The API follows an intent-driven design approach that prioritizes the user's purpose over technical mechanics. To learn more about the functionalities, please refer tothis detailed AsyncAPI article about intent-driven APIs.There won't be any spec v2.7 release as the April release window was not used. We haven't pushed any specific features and are still looking for a release coordinator. If you are interested, please indicate in the#specchannel on Slack. We are hands-on in completing Spec v3.0; hopefully, this will be done in June. You canfollow all Spec v3.0 updates on this issue.AsyncAPI Mentorship ProgramThe AsyncAPI Mentorship Program Cohort 2 is now ready for kickoff. This year we are excited to accept code-related projects and expand to technical writing and design. Whether you are interested in participating or have project ideas, we encourage you to engagein the AsyncAPI Mentorship Program discussions.Ambassador ProgramAre you passionate about the work of the AsyncAPI community and interested in becoming part of it? Look no further; you are invited to join the Ambassador Program, which is designed to foster partnership,  community engagement, and development. As long as you meet the minimum requirements, everyone is welcome to join. To learn more about the program, please refer tothis AsyncAPI Ambassador Program articleor watch thisAsyncAPI Ambassador Program stream.Women in Open SourceBarbaño Gonzalez, Lead Education Program Manager and Ambassador Program Lead, is currently working on an article highlighting women's contributions to the open-source community. Through her research, she's exploring various case studies to gain deeper insights into the number of women involved in the field, where they're located, and the specific work they do. Barbaño aims to increase community visibility of women in open source and showcase their valuable impact in the industry. Do you have recommendations on communities that should be included in the case study? Please doreach out to Barbaño.New TSC MemberPlease help us welcome our newest AsyncAPI TSC member,Heiko Henning. We are excited to have you!Coming in MayWe have some exciting things planned for May, such as:Parser-JS v2- We eagerly anticipate the release of the main implementation of the Parser API, the Parser-JS v2. You can follow the process onParser-JS v2 GitHub issueand join the conversation in the#toolingchannel on Slack.AsyncAPI Podcast- Did you know that AsyncAPI has a podcast? If you didn't, now you know! The best part? We are dropping an episode in May. Get to know the community builders and the work they do.Be sure to subscribe to the AsyncAPI Podcast.AsyncAPI Community Updates Newsletter- We will drop the next issue in the first week of May. Be sure tosubscribe to the AsyncAPI Newsletterif you like to stay on top of the latest activities happening across the community.Till next time, keep your head held high.You got this!
"""
--------------------------------------------------------------------------------


Post 43
ID: https://www.asyncapi.com/blog/2023-Q1-docs-report?utm_source=rss
Title: AsyncAPI Documentation Report - Q1 2023
Link: https://www.asyncapi.com/blog/2023-Q1-docs-report?utm_source=rss
Summary: Did you know that you can contribute Docs to AsyncAPI as well? Code isn't the only way to contribute to OSS; Dev Docs are a huge help that benefit the entire OSS ecosystem.
Content:
"""
AsyncAPI Documentation Report - Q1 2023During Q1 2023, AsyncAPI Docs had26,875 sessionsand13,506 unique users.Docs sessions by content bucket:/docs:26,875 sessionsoverall with13,506 unique users./docs/concepts:2,316 sessionswith1,308 unique users./docs/tutorials:7,719 sessionswith4,679 unique users./docs/tools:2,955 sessionswith239 unique users./docs/guides:360 sessionswith6,011 unique users./docs/reference:10,807 sessionswith6,011 unique users.Google Season of Docs 2023 (GSoD)AsyncAPI is one of 13 OSS organizations accepted into Google Season of Docs 2023!Selected technical writers will work on two projects:documenting the AsyncAPI document in detailandcreating interactive learning paths.GSoD 2023 budget at AsyncAPI:We received a total budget of $10,350.$5,000 for documenting the AsyncAPI document section details$5,000 for creating interactive learning paths$350 for participant swag+shipping costsGSoD technical writer applications are openQuetzalli Writes is currently accepting applications for technical writers who want to participate in GSoD 2023 at AsyncAPI.The deadline for applications is April 15.Interested participants must complete thisAsyncAPI GSoD 2023 written application available in a public Google form. We have received 18 applications to date.If selected, the next step in the process for candidates will be to receive a direct follow-up message (DM) on AsyncAPI Slack and an email from Quetzalli to schedule a LIVE editing and writing exercise interview. Up to 6 technical writers will be selected no later than April 21st.AsyncAPI Docs style guideTheAsyncAPI Docs Style Guide has been created as an epic issuein our docs repository, broken into individual tasks:About this guideAccessibilityCode examplesContent buckets explanationDocs contribution guidelinesInclusive languageVoice & ToneGrammarNumbersPunctuationFormattingInternalization (i18n) & LocalizationLinksSEOStylingVersion controlGlossaryWe did not pitch the style guide project for Google Season of Docs 2023 because creating a style guide does not require any knowledge of event-driven architecture (EDA). A style guide can be a good first issue to assign to new contributors unfamiliar with EDAs. By assigning them such tasks, we can help them learn about the basics of AsyncAPI and gradually move on to more complex documentation projects.Spec 3.0 ReleaseAsyncAPI community members, including Jonas Lagoni, have begunplanning documentation updates for the upcoming Spec 3.0 releasein June. We are looking for contributors to assist with the documentation efforts. A meeting point has also been established for documentation in our community spec meetings until the release is live and the docs are ready.Here are the Spec 3.0 release changes requiring documentation:Request/replyOperation/channel decouplingOperation action: pub/sub confusionUnified referencing behavior: using $ref instead of stringCommon metadata fieldsMoving root propertiestagsandexternalDocstoinfoSplitting out server URL into host and pathnameMore reusable objects in componentsContributor growthWe are pleased to report thatnew docs contributorsare already working on theAsyncAPI Docs Style Guide, such asBhaswati Roy. Bhaswati impressed us with her research strength and ability to break down new topics into managable tasks.We are thrilled to have new contributors working with us to help ensure consistency and clarity across all documentation.ConclusionOverall, Q1 2023 saw many sessions and unique users visiting the new AsyncAPI Docs after their information architecture makeover from the GSoD 2022 program. For the second time, we were accepted into Google Season of Docs 2023 for two projects that will help improve the quality of our documentation and provide valuable opportunities for contributors to develop new skills. We have also begun planning documentation updates for the upcoming Spec 3.0 release and started work on our first style guide, which will ensure that our documentation remains consistent and relevant.Creating our first AsyncAPI Docs style guide is a major milestone because it will help ensure consistency and clarity across all documentation moving forward. With three new contributors working on the Style Guide and 18 applications already submitted for GSoD 2023 technical writing positions, the future of our docs community keeps looking bright!How to contribute to AsyncAPI DocsDid you know that you can contribute Docs to AsyncAPI as well?Code isn't the only way to contribute to OSS; Dev Docs are ahugehelp that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution.❤️To get started as a Docs contributor:Familiarize yourself with ourproject's Contribution Guideand ourCode of Conduct.Head over to ourAsyncAPI Docs Board.Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started.If there is no work done in that Docs issue yet, feel free to open a PR and get started!Docs contributor questionsDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!Tag me in your AsyncAPI Doc PRs orGitHub Discussionsvia my GitHub handle,quetzalliwrites🐙.Talk to meI want and need to listen👂🏽to all of your perspectives and ideas. Please don't be shy to express to me what you think needs to be documented first or what is missing.📝There's a lot of good work ahead, butyoudetermineour content roadmapbecause the OSS community needs should always come first.✨
"""
--------------------------------------------------------------------------------


Post 44
ID: https://www.asyncapi.com/blog/march-2023?utm_source=rss
Title: Community Update: March 2023
Link: https://www.asyncapi.com/blog/march-2023?utm_source=rss
Summary: Community update for March
Content:
"""
March came with some ecstatic news for the AsyncAPI community. We welcomedThulisile Sibandaas our new Community Manager. And to top it all, our beloved community guardian,Lukasz Gornickistepped up to become the newExecutive Directorfor AsyncAPI.
This is such an incredible milestone for the community and we can't wait to see the amazing things to follow in the next few months.AsyncAPI Conf on Tour 2023One of our goals this year is to hostAACoT, a series of micro-conferences in different locations around the world. We are glad that our first location has been confirmed and we'll be in Madrid on the 18th - 19th of October 2023.Call for speakerswill be open soon and we are eagerly waiting to receive your submissions. For more details about other AACoT locations, keep an eye out for thisdiscussion.Case StudiesWe recently added a newcase studiessection on our website. It showcases real-world production scenarios and how different individuals adopt and integrate our specifications and tools. On this note, we are glad to have our first official case study fromAdeofeatured on the website. You can read more about ithere.Spec x ToolingTheModelinawebsite has been merged and if you are interested in generating data models for your payloads, do try it out.
Spec 3.0 meetings will now incorporate various discussions and will be the best place to ask about v3, how to usenon-JSON schemaswithin AsyncAPI, anddocumentation.Google Summer of CodeAs a community, we are always looking for initiatives to drive diversity and bring more people passionate about open-source. In this regard, we applied to GSoC'23. Although our application didn't make it to the final organization selection, we are privileged to participate in GSoC'23 under Postman.Contributor applications open on the 20th of March and close on the 4th of April. If you are looking to participate we have some excitingAsyncAPI projectsand if you want to make your proposal outshine do watch thissessionfor tips.AsyncAPI Mentorship ProgramIt's almost a year since we launched our mentorship program; ourfirst cohort of six AsyncAPI Mentorship Program menteesgraduated and truly impressed us. Several of them joined our technical steering commitee and became mentors for GSoC. With that being said, we are delighted to share that our second cohort will begin soon after GSoC'23 commences. Keep an eye out on our#mentorshipchannel for the official announcement.Ambassador ProgramOne of our latest additions to the initiatives in the community is the Ambassador's Program. This program is dedicated to fostering collaboration between users and community members. It is a method to promote and nurture community growth. Presently we have a total of5 AsyncAPI Ambassadorsand the best part is, anyone can join the program as long as they meet the requirements. You can read thisarticlefor more details.TSC membersTheAsyncAPI TSChas grown exponentially over the last few months. We now have a total of 44 members and a 12% increase in women maintainers so far. Shout out to our newest members,Barbano GonzalezandKenneth Aasanwe are thrilled to have you.Coming up in AprilWe have some exciting things to look forward to in April, for instance:Newsletter- We are launching a monthly AsyncAPI community updates newsletter. This is where we will be keeping you in the loop of the activities happening in the community such as discussions, meetings, and updates. Dosubscribe!AsyncAPI Bounty Program- We are launching a trial for the AsyncAPI bounty program. This program is a way to appreciate and support maintainers for the work they are doing to push the initiative forward. You can read all about it in ouropen discussion on community building/maintenance goals for 2023.Google Season of Docs- After the success ofGSoD'22, we are happyAsyncAPI was accepted as a 2023 GSoD participantagain this year. If you are a technical writer interested in open-source and improving AsyncAPI's documentation, we'd love to see you apply and fill out theAsyncAPI GSoD technical writer application. Deadline is on the 15th of April.Call for Speakers for AACoT Madrid Edition-  Call for Speakers for Madrid will be opening soon. You can expect a keynote fromFranabout the history of AsyncAPI Initiative. Bookmark thisAACoT Madrid event page, and get ready to submit that talk!Till next time, keep your head held high.You got this!
"""
--------------------------------------------------------------------------------


Post 45
ID: https://www.asyncapi.com/blog/asyncapi-say-hi-to-triggermesh?utm_source=rss
Title: Automatically pipe events from AsyncAPI channels with TriggerMesh
Link: https://www.asyncapi.com/blog/asyncapi-say-hi-to-triggermesh?utm_source=rss
Summary: TriggerMesh makes it easy to reliably pipe events from any source to any destination. Let's use it to read from AsyncAPI channels, and see how to autogenerate the TriggerMesh config.
Content:
"""
This tutorial demonstrates how to use AsyncAPI with TriggerMesh. It shows how the two play nicely together because TriggerMesh can easily ingest, transform, filter, and route events from channels defined in an AsyncAPI definition. This is one of many possible ways to use the two technologies together. This post assumes you have basic knowledge of AsyncAPI already, but are potentially new to TriggerMesh.If you want access to the source files for this tutorial, head to thededicated GitHub TriggerMesh repo.The scenario is based on the perspective of a DevOps engineer that has been provided with an AsyncAPI definition that describes an application (or set of applications) that produceorderevents over various channels, including aKafka topic, aGoogle pub/sub topic, and anHTTP service.  The engineer's task is to ingestordersfrom these channels and route them to a single downstreamKafka topiccalledunified-orders.The tutorial leverages the TriggerMesh open-source command-line interface calledtmctlto create the TriggerMeshsources,brokers,triggers, andtargetsthat make up the event flow.tmctllets you run these components locally on any laptop that has Docker.The main components of TriggerMeshThe project includes aprototype parserbuilt with AsyncAPI'sjs-parser. It parses theprovided AsyncAPI definitionand generatestmctlCLI commands that create TriggerMesh event sources that ingest events from various channels into a TriggerMesh broker for further processing. You could write thetmctlcommands manually too, but this parser shows how a well-documented AsyncAPI definition can be used alongside TriggerMesh.The following schema illustrates what we'll build in this tutorial.Schema shows the event flow we'll build during the tutorialPlease reach out to the TriggerMesh team on theTriggerMesh Slack workspaceorGitHub TriggerMeshif you need help getting this to work or have any feedback.PrerequisitestmctlInstalltmctlwith homebrew orother methods:brew install triggermesh/cli/tmctlAsyncAPI'sjs-parserWe also need to install the AsyncAPI parser. Make sure you have a recent enough version of npm and node:npminstall @asyncapi/parserQuickstart a Kafka clusterOne of the order management systems is producingorderson a Kafka topic calledorders. We also want to write all unified orders to a downstreamunified-orderstopic. We'll need a cluster to implement these topics.Here we provide an easy way to start one usingRedpandaand Docker Compose, but you could use any Kafka distribution you like (self-hosted or managed).The provideddocker-compose filewill start a single node Redpanda cluster and a handy console. It is configured to work with the docker desktop and could require some adjustments to the listeners and advertised listeners for it to work on other environments. Reach out to us on Slack or GitHub if you need help, or read thiskafka listeners blog postif you want to dive deep into this.Run the following command in the same directory as the docker compose file to start Redpanda:docker-compose up -dStart a mock HTTP serviceWe'll start a mock HTTP service locally to simulate the order management system that providesordersthrough an HTTP API. Copy theorder.jsonfile to the current directory, it will be used as a mock event. Run the mock HTTP server, ideally in a new terminal (requires python 2 or 3):python3-m http.server8000(Optional) AsyncAPI CLIYou don't necessarily need it, but theAsyncAPI CLIis a great companion for working with AsyncAPI definitions during development, particularly the Studio that you can easily run in your browser to view or edit theprovided AsyncAPI definition.1brewinstallasyncapi2asyncapi start studio &Overview of the AsyncAPI definitionServersLet's see what is in ourAsyncAPI definition. We've defined three servers that represent the three order management systems. These definitions contain information we'll need to create the TriggerMesh source components that will read from these servers.1servers:2kafkaserver:3url:host.docker.internal:90924protocol:kafka5httpserver:6url:http://host.docker.internal:80007protocol:http8googlepubsub:9url:https://cloud.google.com10protocol:googlepubsubChannelsI've defined one channel per order management system, each with its own reference to the server and bindings for its specific protocol. There may be ways to improve on this by creating a single channel that has different implementations depending on the server.1channels:2orders:3description:Kafkatopictowhichordersareproduced4servers:5-kafkaserver6subscribe:7message:8$ref:'#/components/messages/order'9/orders/order.json:10description:RESTAPIendpointthatrespondswithanorder11servers:12-httpserver13subscribe:14message:15$ref:'#/components/messages/order'16bindings:17http:18type:request19method:GET20orders-gcp:21description:Googlepub/subtopictowhichordersareproduced22servers:23-googlepubsub24subscribe:25message:26$ref:'#/components/messages/order'27bindings:28googlepubsub:29topic:projects/jmcx-asyncapi/topics/ordersgcpThere is nothing overly special about theordermessage and schema so we don't need to go into detail on it here (but you can see it at the end of theAsyncAPI definition).We can see that by combining information from the servers and the channels, we have everything we need (except, in some cases, auth credentials) to create TriggerMesh source components that can subscribe to and read from these channels. Let's do that!Generating the TriggerMesh source componentsLet's usethe parserto generate some TriggerMesh components that will consume events from the channels defined in the AsyncAPI definition.Make sure you're in the same directory as the JS file and try running the following command:nodeparser.jsIt should print the generatedtmctlcommands to standard out, and will also write them to a file calledtmctl.sh. It will overwrite the file on each run. It's contents should look something like this:1tmctlcreatebroker TriggerMeshAsyncAPI2tmctlcreatesource kafka --name orders-kafkasource --topic orders --bootstrapServers host.docker.internal:9092--groupID orders-group3tmctlcreatesource httppoller --name ordersorderjson-httppollersource --methodGET--endpointhttp://host.docker.internal:8000/order.json --interval 10s --eventType io.triggermesh.httppoller.event4tmctlcreatesource googlecloudpubsub --name orders-gcp-pubsubsource --topic projects/jmcx-asyncapi/topics/ordersgcp --serviceAccountKey $(cat serviceaccountkey.json)The first command creates a lightweight event broker, the central component that will decouple event producers and consumers, and provide pub/sub-style reliable delivery of events to their targets. The name of the broker is derived from the title of the AsyncAPI definition.Next, one source component is created perchannelthat provides asubscribeoperation and has a reference to aserverwith a supported protocol such ashttp,kafka, orgooglepubsub.To get this working on your environment, you may want to play with thebootstrapServersvalue for the Kafka source, and the endpointhostfor the HTTP poller source. You can change them in the AsyncAPI definition and then re-run the parser.
You'll also need to create a file calledserviceaccountkey.jsonwith a GCPservice account key, if you want to get the Google Pub/Sub channel working. If not, you can delete the Pub/Sub channel in the asyncAPI definition.You can visit the TriggerMesh documentation for theKafka source,HTTP Poller source, andGoogle Pub/Sub sourcefor more information on parameters and usage.We can now execute thesetmctlcommands to create the TriggerMesh components. You can either copy/paste them into your terminal or run the generated script:shtmctl.shOr you can pipe the output of the parser into the shell:nodeparser.js | shWe'll also open a second terminal and starttmctl watchto watch events flowing through the broker:tmctl watchOrders are already coming in from the HTTP serviceThe first thing you'll notice is that the HTTP poller is starting to produce events from the order management system that exposes the HTTP API, we can see the event showing up in the broker in thetmctl watchterminal:A CloudEvent that originates from the HTTP pollerThe poller is configured to fetch an event every 10 seconds. You can adjust the endpoint and other parameters depending on your environment and needs. I’m usinghost.docker.internalbecause I’m running on Docker Desktop.Ingest orders from KafkaNow we can send an order to theorderstopic and watch it land in the broker too. To do this, you can open the Redpanda console that was started in the docker compose and should be available athttp://localhost:8080/by default.Go to the orders topic and publish this:1{2"orderid":18,3"ordertime":1497014222380,4"region":"eu",5"category":"fashion",6"item": {7"itemid":"184",8"brand":"Patagonia",9"category":"Kids",10"name":"Tribbles Hoody"11}12}You should see it show up in the terminal that is runningtmctl watch:A new order from the Kafka channel shows up in TriggerMeshPub/SubThe same idea goes for the Google pub/sub topic. You can head to GCP and publish an event there and it'll also show up in the TriggerMesh broker:Publishing an event to a Google Pub/Sub topicRouting all orders to a single Kafka topicWe just showed how simple it was to captureorderevents from three different AsyncAPI channels with TriggerMesh. Now they are all arriving in our central broker, wrapped asCloudEventsso that they all have a uniform envelope that can be used to implement transformations and filters.Let's keep it simple here and route events from all sources to a new Kafka topic calledunified-orders. To do that, we'll start by creating a new Kafka target:tmctlcreatetargetkafka--nameunified-orders-target--topicunified-orders--bootstrapServers<serverURL>And then we can define a "catch-all" trigger that will send all events to that target:tmctlcreatetrigger--target unified-orders-targetAlthough we generally recommend being more specific when creating triggers by adding a list of event types that should fire the Trigger. For example I could send only the events from the HTTP service to the Kafka topic as such:tmctlcreatetrigger--target unified-orders-target --eventTypes io.triggermesh.httppoller.eventNow take a look at the RedPanda console and you should see all orders arriving on theunified-orders topic. You can send more orders into GCP Pub/Sub and AWS SQS and see them get routed to the Kafka topic.Wrap-upIn this post, we piped events from multiple AsyncAPI channels into a single Kafka topic. By pairing AsyncAPI with TriggerMesh, we can generate the TriggerMesh source components that will ingest and centralize the events into a broker. From there, we can start creating routes to deliver filtered sets of events to different targets. We did this with a Kafka target, but there aremany other targets available.If you wanted to take this example further, you could implement someJSON transformationsthat would standardize legacy order formats coming from some of the sources or could customize the format for a specific consumer on a new Kafka topic (as shown in the initial diagram). You could also model other parts of the architecture with their own AsyncAPI definitions.Oh and one more thing, try thetmctl dumpcommand. It will produce Kubernetes manifests that you can deploy onto a Kubernetes clusterwith TriggerMesh installedand run these event flows as a Kubernetes-native application.Head toAsyncAPI.comto learn more about AsyncAPI, and theTriggerMesh quickstartif you want to try outtmctlfor yourself. You can also reach theTriggerMesh community on Slack, we'd love to hear from you!All graphics byJonathan Michaux.
"""
--------------------------------------------------------------------------------


Post 46
ID: https://www.asyncapi.com/blog/asyncapi-ambassador-program?utm_source=rss
Title: AsyncAPI Ambasador Program
Link: https://www.asyncapi.com/blog/asyncapi-ambassador-program?utm_source=rss
Summary: Information about AsyncAPI Ambassador Program.
Content:
"""
AsyncAPI and its community have grown exponentially during the last few months. As a feedback exercise, both the project and the community are getting stronger with one another. The community is the driving force that leads the initiative and the bigger it gets, the greater the consistency and potential it has. It’s amazing to see a vast number of people who invest their time in disseminating and promoting the initiative through talks, articles, workshops, and program direction...To follow that line, the AsyncAPI Ambassador Program is one of the latest additions to the initiative to keep the community going.The program is, after all, a reaction to the natural impulse of the community. Thus, in this case, the ambassadors came before the Ambassadors Program itself. This proposal was born based on the recognition of the work of community members who invest their time in bringing AsyncAPI to the community and new potential users.AsyncAPI Ambassadors are passionate about open source. They are committed to making AsyncAPI an inclusive place for everyone and participate in leading and mentoring the community.Below are guidelines to be followed by anyone who wishes to become an ambassador:Promote user cooperation and disseminate the tools needed for any specific user.Engage with the project in some way, whether as a contributor, blogger, speaker, etc.Speak at community events or write technical content (e.g., blog posts) that solves community needs.Foster community growth and a welcoming environment to spread knowledge about the project.Why create an ambassador program?As we know, everyone has a unique way of looking at things and a person's abilities differ. Following that line, each ambassador can offer a different approach. They bring part of their essence into the content or the program where they are involved and disseminate. This is what brings human value to the project, enriching the conception and possibilities.The community is experiencing rapid growth. Over the past year, we started the Ambassadors Program and the AsyncAPI Mentorship program and participated in GSoD for the first time. As the community evolves, the initiative remains dynamic and open, driving new ideas and proposals.How does the program work?The Ambassador Program is a transparent system, just like any other management issue related to the initiative. Its success relies on diversity, inclusiveness, and integration. The goal is to materialize these concepts within the program.The process of recruiting ambassadors is completely open. If anyone meets the requirements, they only need to add themselves to thisdocument, attaching their personal information along with their contributions. The TSC members will then approve the proposal.Subsequently, all ambassador information will be displayed on the AsyncAPI website once the PR has been merged. The process tries to be simple, collaborative, and transparent as possible.More about AsyncAPI Ambassador ProgramThe minimum enrollment period for ambassadors is one year with the option to renew annually. At the end of each period, the number of participants will be assessed and confirmed on a yearly basis. To qualify as an ambassador, individuals must make at least four contributions per year, which may include articles, talks, videos, podcasts, presentations, or driving initiatives, etc.Ambassadors are entrusted with some amount of responsibilities. As a token of appreciation for their work, we try to compensate them with certain perks, including exclusive swags and  conference passes.Learn more about theAmbassador Program here.We are waiting for you on board!🚀Photo byIan SchneideronUnsplash
"""
--------------------------------------------------------------------------------


Post 47
ID: https://www.asyncapi.com/blog/socketio-automatic-docs?utm_source=rss
Title: Flask-SocketIO Automated Documentation and Validation
Link: https://www.asyncapi.com/blog/socketio-automatic-docs?utm_source=rss
Summary: What is Flask-SocketIO, SocketIO?

If you are reading this blog, you are probably already familiar with SocketIO python-socketio and Flask-SocketIO. If you want to learn more about them, please check
Content:
"""
What is Flask-SocketIO, SocketIO?If you are reading this blog, you are probably already familiar with SocketIOpython-socketioandFlask-SocketIO. If you want to learn more about them, please check the following resources:https://socket.io/docs/v4/https://www.asyncapi.com/blog/socketio-part1https://www.asyncapi.com/blog/socketio-part2The problemImagine that you are working on a large project that uses a Flask-SocketIO server to handle real-time communication between the client and the server. The server was originally well-documented, but over time the documentation has become out of date as the server has evolved and new features have been added.I found myself in the same situation. I needed to maintain and constantly add more documentation to a Flask-SocketIO server. To make this process more efficient, I sought a solution to automate documentation generation from the existing codebase. This would eliminate the need for team members to manually edit the AsyncAPI specification file every time there was a change, a challenging task for those unfamiliar with AsyncAPI. By automating this process, we could save time and reduce the workload for the team.To address this issue, I decided to implement SIO-AsyncAPI. This tool allows you to generate an AsyncAPI specification from your SocketIO server and validate incoming and outgoing messages against it. This functionality is similar to how FastAPI, Flask-RESTful, and other frameworks have long provided it for RESTful servers. Now, withSIO-AsyncAPI, it is possible to apply this approach to SocketIO servers as well.How to use SIO-AsyncAPIInstead of giving you a detailed, step-by-step guide, we'll use a more exciting approach. We'll take the existing Flask-SocketIO server and add SIO-AsyncAPI. To make things even more interesting, we'll askChatGPTto generate a server for us and use it as a real-world Flask-SocketIO server.Generate a Flask-SocketIO serverI had to ask ChatGPT for multiple alterations to get the desired result. Here are my queries to ChatGPT:create python flask-socket server that provides tic tac toe game apichange previous code and add type hintsfor previous example use pydantic models instead of dictionariesAnd here is the final code that ChatGPT generated for us:1fromtypingimportList,Union23fromflaskimportFlask4fromflask_socketioimportSocketIO, emit5frompydanticimportBaseModel67app = Flask(__name__)8socketio = SocketIO(app)910games:dict[int,'Game'] = {}1112classGame(BaseModel):13board:List[List[str]]14turn:str1516classMakeMoveData(BaseModel):17game_id:int18x:int19y:int2021@socketio.on('create_game')22defcreate_game() ->None:23# Create a new game and add it to the list of games24game_id =len(games) +125games[game_id] = Game(board=[[''for_inrange(3)]for_inrange(3)], turn='X')2627# Send the game id to the client28emit('game_created', {'game_id': game_id})2930@socketio.on('make_move')31defmake_move(data: MakeMoveData) ->None:32# Get the game and make the move33game = games[data.game_id]34board = game.board35turn = game.turn36board[data.x][data.y] = turn3738# Check for a win or draw39result = check_game_status(board)4041# Update the game state and send it to the client42ifresult =='X':43emit('game_won', {'winner':'X'})44elifresult =='O':45emit('game_won', {'winner':'O'})46elifresult =='draw':47emit('game_drawn', {})48else:49games[data.game_id] = Game(board=board, turn='O'ifturn =='X'else'X')50emit('move_made', {'board': board,'turn': game.turn})5152defcheck_game_status(board:List[List[str]]) ->Union[str,None]:53# Check for a win or draw54foriinrange(3):55ifboard[i] == ['X','X','X']:56return'X'57ifboard[i] == ['O','O','O']:58return'O'59ifall(board[i][i] =='X'foriinrange(3)):60return'X'61ifall(board[i][i] =='O'foriinrange(3)):62return'O'63ifall(board[i][j] !=''foriinrange(3)forjinrange(3)):64return'draw'65returnNone666768if__name__ =='__main__':69socketio.run(app, debug=True)70It's not quite correct (e.g. data inmake_movewill be passed as a dictionary, not a Pydantic model), but it's good enough for our purposes.Generate Mermaid diagramNow let's ask ChatGPT to generate a Mermaid diagram for us as well, so we can get a better illustration of our server:create mermaid diagram for previous exampleI had to alter the given diagram a bit, but here is the final result:Add SIO-AsyncAPI to the serverNow let's imagine that this is our old server written in Flask-SocketIO and we want to add SIO-AsyncAPI. Here is how we would do it:Install SIO-AsyncAPI viapip install sio-asyncapiChange import statements1# instead of `from flask_socketio import SocketIO`2fromsio_asyncapiimportAsyncAPISocketIOasSocketIOAdd an additional argument to theAsyncAPISocketIOconstructor1socketio = SocketIO(2app,3validate=True,4generate_docs=True,5version="1.0.0",6title="Tic-Tac-Toe API",7description="Tic-Tac-Toe Game API",8server_url="http://localhost:5000",9server_name="TIC_TAC_TOE_BACKEND",10)Tell the@socketio.ondecorator to get models from the type hint.Note: you can also passrequest_modelandresponse_modelarguments to the@socketio.ondecorator instead of using type hints.@socketio.on('make_move', get_from_typehint=True)Now type annotations will be used to generate the AsyncAPI specification and validate incoming/outgoing messages. Note that the return value from a function is not data sent by theemitfunction but rather theacknowledgevalue that the client receives.Add anon_emitdecorator to register/document a SocketIO emit event. Since we are not definingemitfunction ourselves but only calling it, we need to tell SIO-AsyncAPI what to expect whenemitis called. E.g1classGameCreatedData(BaseModel):2game_id:int34@socketio.doc_emit('game_created', GameCreatedData)5@socketio.on('create_game')6defcreate_game():7...8emit('game_created', {'game_id': game_id})Get AsyncAPI specificationNow we can get the AsyncAPI specification by calling thesocketio.asyncapi_doc.get_yaml()function. Here is what the rendered specification looks like:Validation and Error handlingSIO-AsyncAPI will automatically validate incoming and outgoing messages. If a message is invalid, it will raise one of these 3 exceptions:EmitValidationError,RequestValidationError, orResponseValidationError.Flask-SocketIO has the@socketio.on_error_defaultdecorator for default error handling that we can use. E.g.:1@socketio.on_error_default2defdefault_error_handler(e: Exception):3"""4Default error handler. It is called if no other error handler is defined.5Handles RequestValidationError, EmitValidationError, and ResponseValidationError errors.6"""7ifisinstance(e, RequestValidationError):8logger.error(f"Request validation error:{e}")9return{'error':str(e)}10elifisinstance(e, ResponseValidationError):11logger.critical(f"Response validation error:{e}")12raisee13ifisinstance(e, EmitValidationError):14logger.critical(f"Emit validation error:{e}")15raisee16else:17logger.critical(f"Unknown error:{e}")18raiseeInstead of re-raising exceptions, we can return some error interpreted as anacknowledgevalue sent to the client. That's what we do in the example above when there is aRequestValidationError.This is how it looks like in FireCamp if we do not providegame_idin themake_moverequest:Because themake_moverequest may return an error in the acknowledged value now, we should add a newMakeMoveAckDatamodel and annotate themake_movefunction accordingly. This will automatically update the documentation in our AsyncAPI specification.1classMakeMoveAckData(BaseModel):2error:Optional[str] = Field(None, description='The error message', example='Invalid move')34...5@socketio.on('make_move', get_from_typehint=True)6defmake_move(data: MakeMoveData) -> MakeMoveAckData:7...Final Code and SpecificationHere is the final code of the server. I also added examples to Pydantic models to make the specification more readable.1importpathlib2fromtypingimportList,Union,Optional34fromflaskimportFlask5fromflask_socketioimportemit6frompydanticimportBaseModel, Field7fromloguruimportlogger89fromsio_asyncapiimportAsyncAPISocketIOasSocketIO10fromsio_asyncapiimport(EmitValidationError, RequestValidationError,11ResponseValidationError)1213app = Flask(__name__)1415socketio = SocketIO(16app,17validate=True,18generate_docs=True,19version="1.0.0",20title="Tic-Tac-Toe API",21description="Tic-Tac-Toe Game API",22server_url="http://localhost:5000",23server_name="TIC_TAC_TOE_BACKEND",24)2526games:dict[int,'Game'] = {}272829classGame(BaseModel):30board:List[List[str]] = Field(..., description='The game board', example=[31['X','O',''], ['','X',''], ['','','O']])32turn:str= Field(..., description='The current turn', example='X')333435classMakeMoveData(BaseModel):36game_id:int= Field(..., description='The game id', example=1)37x:int= Field(..., description='The x coordinate', example=0)38y:int= Field(..., description='The y coordinate', example=0)394041classGameCreatedData(BaseModel):42game_id:int= Field(..., description='The game id', example=1)434445classGameWonData(BaseModel):46winner:str= Field(..., description='The winner', example='X')474849classGameDrawnData(BaseModel):50pass515253classMoveMadeData(BaseModel):54board:List[List[str]] = Field(..., description='The game board', example=[55['X','O',''], ['','X',''], ['','','O']])56turn:str= Field(..., description='The current turn', example='X')5758classMakeMoveAckData(BaseModel):59error:Optional[str] = Field(None, description='The error message', example='Invalid move')6061@socketio.doc_emit('game_created', GameCreatedData)62@socketio.on('create_game')63defcreate_game():64# Create a new game and add it to the list of games65game_id =len(games) +166games[game_id] = Game(board=[[''for_inrange(3)]for_inrange(3)], turn='X')6768# Send the game id to the client69emit('game_created', {'game_id': game_id})7071@socketio.doc_emit('game_won', GameWonData)72@socketio.doc_emit('game_drawn', GameDrawnData)73@socketio.doc_emit('move_made', MoveMadeData)74@socketio.on('make_move', get_from_typehint=True)75defmake_move(data: MakeMoveData) -> MakeMoveAckData:76# Get the game and make the move77logger.info(f'Making move{data}')78game = games[data.game_id]79board = game.board80turn = game.turn81board[data.x][data.y] = turn8283# Check for a win or draw84result = check_game_status(board)8586logger.info(f'Game result:{result}')87# Update the game state and send it to the client88ifresult =='X':89emit('game_won', {'winner':'X'})90elifresult =='O':91emit('game_won', {'winner':'O'})92elifresult =='draw':93emit('game_drawn', {})94else:95games[data.game_id] = Game(board=board, turn='O'ifturn =='X'else'X')96emit('move_made', {'board': board,'turn': game.turn})9798defcheck_game_status(board:List[List[str]]) ->Union[str,None]:99# Check for a win or draw100foriinrange(3):101ifboard[i] == ['X','X','X']:102return'X'103ifboard[i] == ['O','O','O']:104return'O'105ifall(board[i][i] =='X'foriinrange(3)):106return'X'107ifall(board[i][i] =='O'foriinrange(3)):108return'O'109ifall(board[i][j] !=''foriinrange(3)forjinrange(3)):110return'draw'111returnNone112113@socketio.on_error_default114defdefault_error_handler(e: Exception):115"""116default error handler. it called if no other error handler defined.117handles requestvalidationerror, emitvalidationerror and responsevalidationerror errors.118"""119ifisinstance(e, RequestValidationError):120logger.error(f"request validation error:{e}")121return{'error':str(e)}122elifisinstance(e, ResponseValidationError):123logger.critical(f"response validation error:{e}")124raisee125ifisinstance(e, EmitValidationError):126logger.critical(f"emit validation error:{e}")127raisee128else:129logger.critical(f"unknown error:{e}")130raisee131132if__name__ =='__main__':133# generate the asyncapi doc134path = pathlib.Path(__file__).parent /"chat_gpt_asyncapi.yaml"135doc_str = socketio.asyncapi_doc.get_yaml()136withopen(path,"w")asf:137# doc_str = spec.get_json_str_doc()138f.write(doc_str)139# run the app140socketio.run(app, debug=True)141And here is the auto generated specification:1asyncapi:2.5.02channels:3/:4publish:5message:6oneOf:7-$ref:'#/components/messages/Create_Game'8-$ref:'#/components/messages/Make_Move'9subscribe:10message:11oneOf:12-$ref:'#/components/messages/game_created'13-$ref:'#/components/messages/move_made'14-$ref:'#/components/messages/game_drawn'15-$ref:'#/components/messages/game_won'16x-handlers:17disconnect:disconnect18components:19messages:20Create_Game:21description:''22name:create_game23Make_Move:24description:''25name:make_move26payload:27$ref:'#/components/schemas/MakeMoveData'28deprecated:false29x-ack:30properties:31error:32description:Theerrormessage33example:Invalidmove34title:Error35type:string36title:MakeMoveAckData37type:object38game_created:39description:''40name:game_created41payload:42$ref:'#/components/schemas/GameCreatedData'43deprecated:false44game_drawn:45description:''46name:game_drawn47payload:48$ref:'#/components/schemas/GameDrawnData'49deprecated:false50game_won:51description:''52name:game_won53payload:54$ref:'#/components/schemas/GameWonData'55deprecated:false56move_made:57description:''58name:move_made59payload:60$ref:'#/components/schemas/MoveMadeData'61deprecated:false62schemas:63GameCreatedData:64properties:65game_id:66description:Thegameid67example:168title:GameId69type:integer70required:71-game_id72title:GameCreatedData73type:object74GameDrawnData:75properties:{}76title:GameDrawnData77type:object78GameWonData:79properties:80winner:81description:Thewinner82example:X83title:Winner84type:string85required:86-winner87title:GameWonData88type:object89MakeMoveAckData:90properties:91error:92description:Theerrormessage93example:Invalidmove94title:Error95type:string96title:MakeMoveAckData97type:object98MakeMoveData:99properties:100game_id:101description:Thegameid102example:1103title:GameId104type:integer105x:106description:Thexcoordinate107example:0108title:X109type:integer110y:111description:Theycoordinate112example:0113title:Y114type:integer115required:116-game_id117-x118-y119title:MakeMoveData120type:object121MoveMadeData:122properties:123board:124description:Thegameboard125example:126--X127-O128-''129--''130-X131-''132--''133-''134-O135items:136items:137type:string138type:array139title:Board140type:array141turn:142description:Thecurrentturn143example:X144title:Turn145type:string146required:147-board148-turn149title:MoveMadeData150type:object151NoSpec:152deprecated:false153description:Specificationisnotprovided154info:155description:'Tic-Tac-Toe Game API156157<br/> AsyncAPI currently does not support Socket.IO binding and Web Socket like158syntax used for now.159160In order to add support for Socket.IO ACK value, AsyncAPI is extended with with161x-ack keyword.162163This documentation should **NOT** be used for generating code due to these limitations.164165'166title:Tic-Tac-ToeAPI167version:1.0.0168servers:169TIC_TAC_TOE_BACKEND:170protocol:socketio171url:http://localhost:5000Cover image byWindmills During DawnfromUnsplash
"""
--------------------------------------------------------------------------------


Post 48
ID: https://www.asyncapi.com/blog/2022-summary?utm_source=rss
Title: State of AsyncAPI Initiative 2022 in Numbers
Link: https://www.asyncapi.com/blog/2022-summary?utm_source=rss
Summary: tl;dr We do not see any negative trends indicating that the interest in the project got stale and that the community is not growing anymore.
Content:
"""
It is a good practice to sometimes stop and turn back. Sometimes you need to see what you left behind, what successes made you go that far, and what things you missed and never had time to enjoy or explore. The more often you do it, the better your decisions may be in the future. It is essential to do it at least once a year in open source.Omg, I don't recall when I last wrote something so clever. At least, I think it sounds clever.😃This article will take you on a journey to the past to see what happened in 2022 at AsyncAPI Initiative.If you are interested in previous project updatescheck otherProject Statusposts.SlackAt the end of 2022, we had3114members in the AsyncAPI workspace. But what does that really mean? Don't get me wrong; I like when the numbers are high, especially if I see them in my bank account.The thing is that some accounts might belong to people that joined three years ago but don't even remember that they had an account in the AsyncAPI workspace. It would be good to check how this number relates to people's activity.Another important item to understand is how come we have3114members. Did all of them join in 2016? Have we had no new people join since then? That would be a disaster and a clear indication we are doing something wrong.😅Workspace sizeBelow you can see how many members have joined AsyncAPI Slack in past years. The numbers are pretty neat! People join AsyncAPI Slack because they know:someone will answer their call for helpit is a welcoming place for first-time contributorswe participate in many mentorship programsthis is the best place to get closer together with the communityMy prediction is that it will be growing and growing cause existing members will tell others what place it is and why it is worth joining.Weekly active membersBelow I'm showing the average and median activity throughout the years. I think the median is more accurate as it eliminates super-high weeks (like typical conference-related noise) and weeks when we have lots of holidays simultaneously, like Christmas break.Last year was the first time the median value was much lower than the average. It is higher than the previous year, but not something we got used to so far. We noticed a significant increase in Slack members, but I think we can say that this number doesn't correlate well with median activity.We should look into the data more deeply and understand what happened between April 23 and June 21 when numbers got much higher than usual. For example, what the heck happened on April 29 when we had 583 active members? Was AsyncAPI Mentorship the reason?Anyway, I definitely predict that data for 2023 will show an increase in activity as we plan to do a series of meetups around the world that will bring more and more people into Slack.Channels popularityBelow you can see all-time data that show the number of messages posted on each channel in Slack.TheGeneralchannel is the oldest, and yeah, it is generally for general stuff... what a joker. Anyway, the most important is the discussion size in theToolingchannel. Specifications are boring, and people are interested more in how it works. On the other hand, tooling is most attractive to tech folks; coding and talking about it is more fun.Remember that AsyncAPI Initiative cares about both the specification and the tooling ecosystem.New members' activityAs I wrote in the intro, each community must be welcoming to new people and give them space inside so they feel comfortable interacting with others and feeling safe.Below you can see the top three members that joined the community in 2022 and were most active among other new-joiners. Their activity was clearly reflected in their contributions. In the end, all the people you can see below are now members of theAsyncAPI Technical Steering Committee.Social mediaSocial media is not a silver bullet. I think social media should only be a news interface with the community, not a marketing tool.Below data will show you that these channels should not be treated as promotion channels that convert to new users. You will see that LinkedIn and Twitter brought together 2,082 users to the AsyncAPI website. Now, compare it to this singleMozilla documentation articlethat referred to our website 5,542 users.Social media is suitable for communication with the community. Promotion should target people in a location where they look for help. In other words, mentioning AsyncAPI on a WebSocket-related website performs much better than hundreds of social media posts. So we should also try to make sure AsyncAPI is mentioned in other locations. Why not mention AsyncAPI in official docs for Kafka, MQTT, and other protocols?LinkedInI'm so damn tired of LinkedIn. Seriously, a platform that drains so much data from others and earns money from job marketing cannot afford to give users access to historical data and see more than one-year-old stats. Like seriously...We had 2,139 followers at the end of 2022. Every year's data since account creation looks like below.We are not active on LinkedIn. We only republish whatever we publish on Twitter. No engagement is created. We treat it as a news feed, although LinkedIn != Twitter.Numbers went down a lot compared to last year, but when you look two years back, numbers are very similar. Why? In 2021, we spent $1,200 on LinkedIn marketing; thus, the number spike for one year.My statement doesn't change. LinkedIn is an important presence, and even without dedicated moderation, simple reposting brings people to the project. We should continue our work there.TwitterTwitter? Seriously, the most unreliable tool ever.😃But of course, I'm biased; I do not like it. So let's look at the data. Are people really leaving Twitter because of Elon Musk?Forget about the number of followers. We have over 3.5k followers, over 500 more than last year. For me, followers number are as reliable as GitHub stars on a repository. Not much...Let's see how Twitter's presence converts to visits to the AsyncAPI website.Exactly the same situation as with LinkedIn. Numbers drop between 2021 and 2022, but again because 2021 was a special year. We experimented that year with paid marketing on Twitter too. So the numbers we should compare are for the years 2020 and 2022. As we can see no change, and it is pretty stable. It looks like Twitter was not really abandoned, at least not for now😃.My take on it. This is acceptable. I do not think we have to do more there. My observation is that tweets that perform there are not technical tweets that could bring more people to the project, but "thank you" tweets and "appreciation" tweets. And do not get me wrong, we should still create such tweets, no question about it. It proves it is a social media, not a "technical geeks knowledge exchange center." I do not think any additional investment in the platform makes sense.Google AnalyticsWe use Google Analytics onAsyncAPI websiteto understand the most valuable content for you and learn how the interest is growing. The data we get doesn't 100% reflect reality because AsyncAPI is for technical people, and many technical people use plugins in browsers to block Google Analytics or browsers that block it natively.We also have numbers that confirm that. I checked the last seven days of data from Google Analytics and compared it with the raw traffic data we get from Netlify servers. The dates I checked were February 13-20:Google Analytics noted over 24k page views.Netlify noted over 26k page views.This means we are losing around 7% of the data if I calculated it right.😃Unfortunately, with Netlify we do not have access to data older than seven days. We can dump this data for future analytics, but we need New Relic or some other service to sponsor the storage for us😃Confusing dataThe "quality" of the user visiting the website is much better. In 2022, we had no paid marketing nor any viral blog posts, and finally, data is more reliable and natural.There is a much larger increase in the amount ofPageviewsandSessionsbut no significant increase inUser visits. My theory: In 2022, we didn't have a single super viral blog post like in previous years that would bring a few thousand people in just a few days (like September 9, 2021 - over 5k readers), people that are interested in an article, and not AsyncAPI in general.I think we can say that it is the first time we have had a regular increase in users and that this increase is valuable as these users generate a lot of sessions and navigate through the website a lot. In other words, the bigger difference betweenUser visitsandPageviews, the better.It would make sense to retake the above table and check it against Google Analytics, but not base it on the total number of visits and sessions, but the median for each year. In theory, this way, we would remove the traffic that is hard to predict from the equation, as it is not up to us to decide if something will be viral.The more docs we get, the more traffic increase we will seeOne of the top goals for the AsyncAPI website should be to increase the content and benefit from the SEO. This happened in 2022, thanks to participation in Google Season of Docs. We had six dedicated docs contributors. We gained newConceptsandGeneratordocumentation in the website.In the case of Generator documentation, Florence and Pratik refactored all the documentation from the Generator repository and made sure it was published in an automated way on the website. It was published on the website on the 20th of December, almost the end of the year during Christmas break, a dead season for the website. Yet the new content managed to generate an additional 1,053 Pageviews to the website!Concepts were published to the website on different dates, some in September and some in early December. This new content generated more than 17,646 Pageviews in over three months.As you can see, more technical content, which was not even released at the beginning of the year, converted into many additional pageviews. In 2023, this content will perform even better. I know it for sure, as only in the case of Generator docs, in January 2023, Google Analytics noted 4,668 views! Well, you must admit that 48kPageviewsfor 2023 would be huge!Google Search ConsoleI believe that numbers from GSC can show how many more people hear about AsyncAPI and gain interest in the topic. In other words, the assumption is that the more people google, the more people are aware of AsyncAPI. And yes, the below numbers of impressions indicate a number higher than a million.😉In 2022 we didn't perform any specific modifications on the website to improve SEO. So the only explanation for the increase in impressions and clicks is the increased volume of documentation I wrote about in the previous section. More useful content, better ranking in search.GitHubLike on other channels, we notice growing traffic inour GitHub organization.Total contributionsIn the last three years, we increased from 301 contributors in Q1 2020 to 1,520 in Q4 2022.From 301 to 1,520 contributors for things like commits, pull requests authoring and review, or issues participation. In just three years!!!This huge difference also has a negative aspect. More contributions mean more maintenance work.Negative aspect of growthUnfortunately, the number of maintainers does not grow as much as the number of contributors. This means that the difference between the number of submitted and resolved issues will get larger and larger.Three years ago, we dreamed about having thousands of contributions. We forgot to balance that number with the proper number of maintainers. Now we need to react and make sure we also get a large number of active maintainers.npmMost of our tools are written in JavaScript/TypeScript; we host them on Node Package Manager (npm).Top packagesOur most essential packages arethe project that provides AsyncAPI JSON Schema files,the Generator,the React componentandthe Parser. Below you can see how downloads of these packages increased.You do not believe in this data? Lemme repeat what I wrote last year:The increase in numbers is insanely huge. People automatically say that it is because of build systems, local development, or that some single corporation started using it at scale. In other words, the increase could result from just one project that uses these tools as a dependency.Let me challenge you:Corporations always use mirrored versions in npm. When you work on a project in a corporate network, you will always hit the internal proxy. Not included in downloads.Most build systems cache packages downloaded are ready to improve performance. Not included in downloads.When you work with npm locally, you also have a local cache that is used if you want to install something that you already installed. Not included in downloads.An interesting observation is that in 2021 AsyncAPI Parser was the only user of the AsyncAPI spec JSON schemas project (@asyncapi/specs), as the number of downloads was almost the same. In 2022, the AsyncAPI spec JSON schemas project was downloaded five million times, three times more than the parser. This means many more tools are dependent on the project.In 2021 we could see that the AsyncAPI Parser is not only a Generator dependency; today we see the AsyncAPI spec JSON schemas project is not only a Parser dependency. This means that the increase in traffic in different channels and the growing user base also reflect the number of tools built on top of AsyncAPI tools. One of the big users of@asyncapi/specsis now Spectral. Also, GitHub tells us that@asyncapi/specsis used in 1,329 public repositoriesYouTubeTheAsyncAPI YouTube channelhad a massive increase in traffic.Watch timeYouTube is just another channel where we can see the audience is growing. The conference and other regular live streams bring a lot of watchers. In 2023, numbers might drop because we do not want to do the online conference, but yeah, let's see.Final wordsWe grow. Numbers just confirm our observation.If you plan to invest in AsyncAPI Initiative, don't worry. It is still an on-top project.It was the right call if you already invested in AsyncAPI Initiative. The community is growing.We do not see any negative trends indicating that the interest in the project got stale and that the community is not growing anymore.I also recommend below conference recording to learn more about AsyncAPI Community.Photo byHannah BusingonUnsplash
"""
--------------------------------------------------------------------------------


Post 49
ID: https://www.asyncapi.com/blog/new-asyncapi-tools-page?utm_source=rss
Title: New Tools Dashboard for AsyncAPI
Link: https://www.asyncapi.com/blog/new-asyncapi-tools-page?utm_source=rss
Summary: Announcing our newly released AsyncAPI tools dashboard!
Content:
"""
We already know that the present list of tools used inside AsyncAPI is presented onAsyncAPI Tools Overviewand it is manually maintained inside the GitHub repository. All the tools are sorted according to the different categories in which they are used and maintained by the contributors. But we don't have a way to filter the tools according to our interest🤔, like languages, technologies used in it, open-source tools, etc. Also, what if you want to add your tool to the list, what you will do🤔? Do you have to create a PR?What if I say, you don't need to make a mess of PR now😉. Yep, we're introducing a new way to add tools to our website! Keep reading below to learn all about it👇.AsyncAPI Tool FileWe have introduced a new concept of the.asyncapi-toolfile which describes the type and details of a tool related to AsyncAPI. You create such a file with a set of different information that describes your tool and then within a week such information is added to the AsyncAPI website. But the question is, where you should place such a file? Inside AsyncAPI repositories? Definitely not! Here comes the twist, this file will be created and maintained in your Tool's repository, and it won't ask for our approval. This file will follow a certain schema that you have to follow to successfully and appropriately add your tool to our brand newAsyncAPI Tools Dashboard. Theproper schema of the file is described here. You can use the tools like theOnline JSON Validatorto validate your JSON data for Tools against the schema given above. For a more detailed explanation, you can refer to ourofficial.asyncapi-toolfile documentation.Tool File StructureHere's the sample.asyncapi-toolfile structure, which can be used to structurise your tool configuration.1{2"title":"ZenWave Code Generator",3"description":"DDD and API-First for Event-Driven Microservices",4"links": {5"websiteUrl":"https://zenwave360.github.io/",6"docsUrl":"https://zenwave360.github.io/zenwave-code-generator/plugins/asyncapi-spring-cloud-streams3/",7"repoUrl":"https://github.com/zenwave360/zenwave-code-generator"8},9"filters": {10"language":"Java",11"technology": [12"Maven",13"Spring Cloud Streams"14],15"categories": [16"code-generator",17"dsl",18"mocking-and-testing",19"cli"20],21"hasCommercial":false22}23}This file structure should be used to insert your tool into the website. The fields specified above are explained below:title- Specifies the title or name of the Tool. Remember this name will be used as the official name of your tool on the website.description- Specify the tool description. It should be precise, up to 30 words only.links- Object which contains important links related to the tool.websiteUrl- This is an optional field that specifies the URL of the tool's website.docsUrl- This is an optional field that specifies the URL of the tool's documentation.repoUrl- This is an optional field that specifies the URL of the tool's GitHub repository.filters- Object that contains various fields like language, technologies, and categories to provide information about the tool.language- Specifies the primary Language in which the tool has been created. There are predefined languages listed in our documentation that are available right now and will be expanded to add new languages if needed.technology- Specifies the list of technologies that are used to create the tool. There are predefined technologies listed in our documentation that are available right now and will be expanded to add new languages if needed.categories- Specifies the list of categories that defines the type of tool. There are predefined categories listed in our documentation that can be used to list down your tool under the proper category.hasCommercial- Specifies whether the tool is a commercial product or is open source.The predefined list of technologies can be found in our repository and are listed as:Languages and TechnologiesCategoriesAsyncAPI Tools DashboardOhh! Wait a minute, have I told you about the new AsyncAPI Tools Dashboard? Then, let me present you with a brand new and astonishing AsyncAPI Tools Dashboard, which has a list of Tools presented in the form of cards. Do check it out right now -AsyncAPI Tools Dashboard. The preview of the UI is as follows:The Dashboard consists of various features like the overall information about the tools inside the ToolCard, filters to sort out the tools according to your needs, and a search bar for finding tools specific to name/type.Tool CardTaking the Tools Card under consideration, you have the following sections to detail about a Tool:Specifies the Name of the Tool.Specifies whether the Tool is Free to use or requires commercial access to use it.Specifies the Description of the Tool. Clicking on theShow Morebutton will open a small box to show full description of the Tool.Specifies the Primary Language of the Tool in which it is built.Specifies the list of Technologies used to create the Tool.View on GithubButton that directs the user to the Github repository of the Tool.Visit WebsiteButton that directs the user to the official website of the Tool.Visit DocsButton that directs the user to the official Docs of the Tool.Filters for ToolsThe Dashboard also contains various filters to search for a specific Tool according to your needs. You can now search according to the Name, Languages, Technologies, Categories, and more, as provided in respective dropdowns and radio buttons. Filters are mostly divided into 2 sections - Filter Menu and Search bar. The use of each menu is explained below under respective subheadings.Filter MenuTaking the Tools Filter Menu under consideration, you have following filters to search a Tool:This radio filter button allows you to search for either free tools available on the internet or GitHub, or search for Paid Tools.The slider filter button allows searching for the tools owned or maintained by the AsyncAPI organization.TheLanguage Filterallows you to select the languages from the dropdown on which you want to search for Tools.TheTechnology Filterallows you to select the technologies from the dropdown on which you want to search for Tools.TheClear Filtersbutton allows you to clear all filters inside the Filters Modal and will show you all the tools of selected categories (or all categories).Do remember to click on theApply FilterButton before closing theFiltersModal so that filters will be applied on the Dashboard.Search BarThe Search Bar will allow you to search the tools on the basis of their names.SummaryI completed this project during the 2022 AsyncAPI Mentorship program, mentored byLukasz GornickiandMaciej Urbańczyk. It was an amazing experience to work on this project and create an automation for AsyncAPI tools. Quite a good learning experience as I researched GitHub APIs, JSON Schema, GitHub Actions, and a lot more stuff. Moreover, I became a maintainer of the AsyncAPI website repository and started contributing to the organization in lot many ways. My work in the project consists of the following Pull Requests:feat: tools backend implementationfeat: added new /tools pagefeat: manual tools added to the Tools DashboardYou are welcome to review my work in the program and I will love to get your feedback on this. You can contact me viamy emailor DM me inAsyncAPI Slack. Thank you to AsyncAPI and its community members for providing me with this opportunity and I'll be looking for more such activities to contribute to the organization. Also, we are close to announcing the next AsyncAPI Mentorship Program in the year 2023, so stay tuned with us onAsyncAPI Slack.Photo by DEWALT hand tools:https://www.dewalt.com/products/hand-tools
"""
--------------------------------------------------------------------------------


Post 50
ID: https://www.asyncapi.com/blog/release-notes-2.6.0?utm_source=rss
Title: AsyncAPI Spec 2.6.0 Release Notes
Link: https://www.asyncapi.com/blog/release-notes-2.6.0?utm_source=rss
Summary: The release of AsyncAPI 2.6 added an exciting feature which is the support for Apache Pulsar
Content:
"""
The new version of the AsyncAPI specification - 2.6.0 - is now available.This is a minor release and doesn't bring any breaking changes. You can switch to it by modifying the following value in your AsyncAPI fileasyncapi: '2.5.0'intoasyncapi: '2.6.0'Added Pulsar Bindings and Protocol to AsyncAPI specificationThe specification now supports a new custom protocol through the bindings feature calledPulsar.Here is an example of the server representation in Pulsar:1servers:2production:3bindings:4pulsar:5tenant:contoso6bindingVersion:'0.1.0'And also an example of the channel representation in Pulsar:1channels:2user-signedup:3bindings:4pulsar:5namespace:'staging'6persistence:'persistent'7compaction:10008geo-replication:9-'us-east1'10-'us-west1'11retention:12time:713size:100014ttl:36015deduplication:false16bindingVersion:'0.1.0'Thanks toAlex Wichmannfor this incredible feature.  For more details, check out thisPulsar bindings pull requestand thebinding definition.Photo by Clem Onojeghuo:https://www.pexels.com/photo/low-angle-photography-of-metal-building-on-grayscale-175771/
"""
--------------------------------------------------------------------------------


Post 51
ID: https://www.asyncapi.com/blog/a_straight_guide_to_apis_and_architecture_concepts?utm_source=rss
Title: A straight guide to APIs and architecture concepts
Link: https://www.asyncapi.com/blog/a_straight_guide_to_apis_and_architecture_concepts?utm_source=rss
Summary: Basic concepts about APIs and architectures for beginners and non-developers.
Content:
"""
It has not been such a long journey into the technology realm for me. Then I started to work at AsyncAPI, and suddenly, I needed to understand a complex world. New terms, code, and ways of seeing things were waiting for me. Coming from other fields of knowledge, the challenge was huge. How to begin? How to have a clue?I decided to start with the basics: trying to find a way to catch the meaning of some key ideas related to APIs. I read and reread over and over again definitions and more definitions. They were full of technical terms that distanced me from them rather than bringing me closer to understanding the concepts. I found myself diving into a deep and dark ocean. And I was too squared to flow in those turbulent currents. The alphabetical order is not a natural one. A dictionary is not a good tool for starting to know a language.Then, I decided to change direction, looking for data. I thought that checking some visual and intelligible sources might clarify my head. So I could understand where to put the information, helping me start weaving a tapestry. Nevertheless, not knowing the code made it difficult for me, if not impossible, to interpret rough data.Third attempt… I just remembered that someone said that practice makes perfect. So, the next try was in that direction. Playing an instrument is a better way to understand it than reading definitions or pentagrams. See it and touch it; feel the shape directly, the stage, the environment. It was time to take action: a colleague volunteered to guide me, practicing somehow with these concepts without prior knowledge. Just making fun, as a child, looking for references, playing, and understanding the technique while finding similarities and comparisons with real situations that anyone could understand pretty well.So, let’s talk some basic concepts:APISWhat is an API?APIs are program connectors. Synchronous or asynchronous, they act as glue between different applications or programs.As cables or pipes connecting different locations to facilitate information exchange or optimize resources.How does an API work?APIs act as an intercommunicator, linking one or more programs. Let's say they could be seen as a bridge between different places connecting them and transferring the required information through them. It’s a way to exchange data or give commands to each other.Types of APIsWe can classify them into two main groups, depending on their use or their type of architecture.Types of APIs according to their useInternal APIsare those used at a local level. They focus on communicating with each other within the same system or the same computer. An excellent example of them might be the pipes contained in a house. They connect the sink to the bathroom and the washing machine to the dryer, for example.External APIs, or web APIs, are those used to communicate two or more applications over the Internet. We could exemplify it with the pipes that connect different houses in the same block of apartments or neighborhoods.Partner APIsare a middle ground between internal and external APIs. This is because they are accessible to people outside the organization but only to those with exclusive permissions. Typically, this special access is granted to certain third parties to facilitate collaboration.A good example might be when we invite friends over, and they bring their controllers to play the game console. Or when a friend comes over and connects to our wifi network.According to its architectural styleIt is essential to choose the architecture style or pattern that best fits the desired use case for the API if specific functional capabilities are required. There are several architecture styles for APIs, as well as different data formats. The following are the most common:REST(representational transfer state), this architecture style separates the needs of the API user from those of the provider, thanks to commands embedded in the underlying network protocol. For example, Twitter provides a REST API that you can query for the latest tweets.RPCs(remote procedure calls), are styles that usually demand developers to perform specific code blocks on another system or different systems. RPCs are protocol-independent, making them potentially compatible with many protocols, although they do not include the benefits of using native protocol features.For example, the Network File System (NFS) plays an essential role in Unix and Linux. This system uses RPC between client and server to mount the set of files from a remote computer on a local computer, that is, to make them partially or entirely available on the latter, allowing the user to manage the files located on a remote device as if they had them on their computer.Event-driven, real-time, asynchronous, doesn't wait for the API user to make the call before sending a response. The response is issued as soon as an event occurs.A simple example might be LinkedIn notifying us that someone wants to connect with us.ArchitecturesNow that we have seen the classification of APIs, let's focus on the most representative types of architecture.In my opinion, this is the most interesting part. Understanding different construction models bring us closer to the skeleton of the system. By understanding this part, we can better sustain the concepts of APIs, supporting them on fundamental pillars.Monolithic architectureMonolithic architecture describes a kind of construction made from a single piece of material, historically from a rock, a standing stone. Indivisible. As a menhir, the simplest megalithic monument.The same goes for the traditional structure of software applications. Monolithic is an end-to-end architecture in which all aspects of the software function as a single unit.Microservices architectureMicroservices architecture is a method for developing software applications that consist of small, autonomous services. Each microservice's code can be written in a different language and perform specific functions. Microservices communicate with each other through APIs and have their own storage systems, which avoid overloading and crashing the application.An example of the use of this kind of architecture could be Netflix. This platform has a generalized microservices architecture. Every day it receives an average of one billion calls to its different services and can adapt to more than 800 types of devices through its video streaming API, which offers a more stable service. For each request we ask, it makes five requests to different servers to never lose the continuity of the transmission.We can do a simile with the work of bees. Among other things, they extract the nectar from the flowers that each hole in the comb needs, supplying every micro need of the beehive.Serverless architectureIt is a computing model that uses the cloud as the environment for executing applications and processes, dispensing with traditional servers. In this way, the Serverless architecture facilitates the work of developers.They can dispense with tasks such as allocating server resources, and focusing solely on application development. With Serverless, the code runs directly in containers.Any task requiring executing several functions simultaneously is a good use for serverless technology. These can be applied whenever concurrent computing is required.There isn't a better graphic example than a cloud.Event-driven architectureEvent-driven architecture, also known as EDA, is a software model and architecture used to design applications. Unlike other architectures, this one is characterized by asynchronous communication, which does not occur simultaneously.That is to say, the receiver will attend to the sender's message later after receiving it, so the sender can perform other tasks without waiting for the request to be answered. For example, sending an email that might be received 5, 50 minutes, or 5 hours later just because the server was attending to other deliveries.This is the kind of architecture that AsyncAPI works with. Its main goal is to make working with EDA as easy as working with REST APIs, from documentation to code generation, from discovery to event management.A good simile could be to send a message in a bottle. The information takes more or less to reach its destination depending on the currents of the sea.So, what is an API, ultimately…It's funny to notice that we live surrounded by things that sometimes we cannot even name. After all, I have started to know what an API is after noticing that I live and share space with them. There are many events for which this API model works well. A lot of examples to understand it. These are just a few: from online translators, such as Google Translate, to the moment when the temperature of a remote thermometer changes.Every concept, even the hardest to get, might always be communicated to everyone, not minding if we talk to children or people who don’t know anything about it. Just with different layers of meaning. It is always possible to make any parallel to real life, everyday objects, or situations. It doesn’t matter if we talk about kicking a ball or ordering a pizza. Every day we are surrounded by maths, physics, technology, code, and APIs… things that we are not able to see but that make things comprehensible and our life easier, sometimes. There are always codes and structures that give them shape.Following the path I walked before, it was my turn to explain the essential concepts of the API world without technicalities, creating simple comparisons that place us in the function of each thing. Just to make us understand the place of each piece in the puzzle. In case my experience is helpful to anyone. That’s the way I get it. And once you get it, it is forever.* Cover photo byShane Rounceon Unsplash;* Photo 1 byAzka Rayhansyahon Unsplash;* Photo 2 byEric Muhron Unsplash;* Photo 3 bySophie N.on Unsplash;* Photo 4 bySendi Gibranon Unsplash;* Photo 5 bySnapwireon Pexels.
"""
--------------------------------------------------------------------------------


Post 52
ID: https://www.asyncapi.com/blog/conference-2022?utm_source=rss
Title: 2022 AsyncAPI Conference was amazing!
Link: https://www.asyncapi.com/blog/conference-2022?utm_source=rss
Summary: The 2022 AsyncAPI Conference was amazing, and I had a great time. I volunteered at this conference, not knowing what to expect, and I must say, I left with a new resolve. The organization was top-notc
Content:
"""
The 2022 AsyncAPI Conference was amazing, and I had a great time. I volunteered at this conference, not knowing what to expect, and I must say, I left with a new resolve. The organization was top-notch, from interesting sessions to an amazing community.The challengesBecause AsyncAPI is a community-first organization, I was able to follow along with the whole process of planning the conference, and I could see some of the challenges the community faced when planning to organize the conference.Here are a few of the challenges:Went from hybrid to online: The event was supposed to be an in-person and virtual event held in Barcelona, Spain. But because the foundation they partnered with couldn't find a venue within the provided date, they had to scrap the in-person idea.Fewer Sponsors: I believe the whole planning for the 2022 AsyncAPI Conference started quite late, which made it difficult to get a budget for the event in such a short time.But despite these challenges, AsyncAPI still reached the top of the mountain by giving a blast conference with the power of the community.How was it doneAsyncAPI proved how much you can do when you have an amazing and strong community behind you.Despite AsyncAPI leveraging their experience hosting online events, they also created a conference support squad where so many amazing folks from the community volunteered, including me. This squad involves two categories of volunteers: on-stage and off-stage.This approach worked like a charm, bringing over 15 members of the community to help coordinate the conference in a collaborative way which, in my opinion, was what made the conference a blast!Was it worth it?I wouldn't say it was amazing if it weren't worth it! The conference was amazing thanks to the contributions from the organization, community, speakers, and sponsors.Look at the number of views we had on Youtube alone; don't forget numbers don't lie.Day 1: 584 viewsDay 2: 325 viewsDay 3: 247 viewsBut hold on, we celebrated too early because two weeks after the conference, the number of views doubled.Day 1 views grew to 1403Day 2 views grew to 1181Day 3 views grew to 400AsyncAPI also had significant women speakers & stream hosts. Isn't this an important move in the right direction for true diversity?A sneak peekThe AsyncAPI conference was so great that some of the sessions were not all technical; we had sessions where folks talked about their journey into Opensource and shared their experiences as a part of the AsyncAPI community.We've carefully curated this type of session for you, and it can be found in this youtube playlist calledInspire & Aspire with AsyncAPI.We also have all sessions from the conference recorded and available publicly. Feel free to check it out and shareAsyncAPI Conf 2022.Meet the heroesWith the help of these amazing organizations and individuals, AsyncAPI was able to host an incredible conference, and here's a special shoutout to each and every one of them.Meet the SponsorsPlatinum SponsorGold SponsorMedia SupportSpecial thanks to Restream for supporting us with their amazing product for media coverage.Meet the volunteersAishat MuibudeenAzeez ElegbedeBarbanio GonzálezBenjamin GranadosDale LaneDeepak VermaFran MéndezKaruna TataKhuda Dad NomaniLukasz GornickiMaciej UrbańczykMissy TurcoQuetzalli WritesSergio MoyaSouvikV Thulisile SibandaWeeProduccionesA glance at the budgetThanks to the conference sponsors, we were able to get some money to fund the conference and here's an overview of how much we raised and spent.IncomePostman - $4,854.70 (Platinum Sponsor)Ably - $2,882.70 (Gold Sponsor)Leftovers from conference 2021 - $7,951.71A total sum of $15,689.11 was raised for the 2022 AsyncAPI Conference.SpendingsSwags for speakers and people that helped run the event - $2,847.81Facebook ad - $114.40Linux Foundation services (registration and schedapp) - $10,000.00Descript licenses for speakers to provide high quality recordings - $696.79Headphones for Anisat - $21.74A total sum of $13,680.74 was spent on the conference needs.What's Next?Because the AsyncAPI Conference happens yearly, it means there will be another one next year(2023). I can't wait for it to happen because the community happens to have learned from its mistake by deciding to kick off the planning as early as possible and I believe this is a big step in the right direction. So many lessons learned to put into play for next year!Wrap upI am truly honored that the community "came together." This was 100% done with the community in mind, and each party involved in the conference has been thoughtfully and intentionally positioned to ensure the project is successful! Cheers to that success!We had a great time and learned a lot from this year's conference thanks to everyone who attended, was involved, and got behind AsyncAPI in putting this event on. We value and appreciate each and every one of you for making it a blast, and we can't wait to see you all next year.
"""
--------------------------------------------------------------------------------


Post 53
ID: https://www.asyncapi.com/blog/hacktoberfest-2022?utm_source=rss
Title: Hacktoberfest was a blast!
Link: https://www.asyncapi.com/blog/hacktoberfest-2022?utm_source=rss
Summary: Hacktoberfest was a blast this year! We can't believe it's over already. We had a great time participating with you all and wanted to share a bit of our experience in a review.

Why Hacktoberfest

Hac
Content:
"""
Hacktoberfest was a blast this year! We can't believe it's over already. We had a great time participating with you all and wanted to share a bit of our experience in a review.Why HacktoberfestHacktoberfest is an annual event that encourages people to contribute to open source throughout October. AsyncAPI is an open-source project and, like many other open-source projects, built and maintained by passionate people who often don't have the staff or budgets to do much more than keep the project alive. Hacktoberfest is all about giving back to those projects, sharpening skills, and celebrating all things open source, especially those who make open source so special.Planting the seedFor us, contributions come in all shapes and sizes. From typo fixes and bug reporting to more significant improvements. But that's not all! AsyncAPI also creates time to help onboard contributors who find it difficult to start contributing to the project or provide help to contributors who get stuck while contributing.How we preparedNot gonna lie, this year's Hacktoberfest snuck up on us like Batman in Gotham City, and as soon as we realized this, we immediately started planning. We kicked off by defining our goals for Hacktoberfest as we've always done.PromoteAsyncAPI Initiativeas a place where we work not only on the AsyncAPI specification but also lots of toolsHelp members of the broader open-source community make their first contributions in a friendly environmentWe spent time writing a how-to-contribute guide for folks participating for the first time and also wrote a maintainers guide for potential maintainers.AsyncAPI is a great project to contribute to because you can learn about AsyncAPI while fixing an issue. That's why we carefully curated issues and prepared especially for Hacktoberfest. And because most of these issues are existing issues, we made sure we reached out to project maintainers to identify which of them is a good one for Hacktoberfest contributors to look intoWas it worth it?Absolutely! Even though we kicked off late, we still received an amazing contribution. AsyncAPI merged 23 PRs from 12 contributors as part of this year's Hacktoberfest! I know it's less than the previous years but let's look on the bright side because some of these contributions were fun to make.Meet the heroesThis is a huge amount of work, and we are really proud that so many wonderful people have come to help AsyncAPI to produce better software.We want to thank everyone personally who submitted improvements to our repositories. Here are the names of our heroes:Amishakumari544 -  1 PRtoukirkhan -  2 PRsaeworxet - 2 PRsmanavdesai27 - 1 PRAnkitchaudharyy -  3 PRsnawed2611 -  1 PRdhfherna - 1 PRamit-ksh - 1 PRmastdev -  2 PRscodingtenshi -  4 PRsakshatnema - 1 PRMayaleeeee - 4 PRsLate to the party?Not a problem. We've got tons of issues you can explore and start contributing to in no time. Because we are a community-first open-source project, we've made it our responsibility to make it easier for contributors to navigate through issues easily. That's why we've built the AsyncAPIcommunity dashboardto help you explore some exciting good first issues.Things to learn fromWe were overwhelmed and weren't fully prepared to handle the enthusiastic response from the community. Because we needed to curate more issues tagged Hacktoberfest, many of the issues were claimed before the mid of October, which left other contributors interested left out because of the lack of more issues.Once beaten twice shy. In order to avoid these potential pitfalls next year, we're gonna put some things in place, which include the following.Start planning earlierCreate more accessible Hacktoberfest issuesUsage of social media as an advantage to bring in more folksWrap upThank you so much to everyone who took part! We welcomed new contributors but were just as happy to see our existing contributors join in the fun, too. We hope you all enjoyed participating in Hacktoberfest as much as we did.Hacktoberfest is over, but Open Source is for lifeAre you interested in getting involved with AsyncAPI? You can always find us onAsyncAPI GitHubor ourAsyncAPI Slackworkspace. Can't wait to meet you and merge your PR!
"""
--------------------------------------------------------------------------------


Post 54
ID: https://www.asyncapi.com/blog/release-notes-2.5.0?utm_source=rss
Title: AsyncAPI Spec 2.5.0 Release Notes
Link: https://www.asyncapi.com/blog/release-notes-2.5.0?utm_source=rss
Summary: The release of AsyncAPI 2.5 brings helpful additions, such as extended Server Variables reusability and many clarifications.
Content:
"""
The new version of the AsyncAPI specification - 2.5.0 - is now available.This is a minor release, and it doesn't bring any breaking changes. You can switch to it by modifying the following value in your AsyncAPI fileasyncapi: '2.4.0'intoasyncapi: '2.5.0'Server Variables can be now referenced from inside the Server ObjectPrevious AsyncAPI 2.4.0 release came with the support ofdefining Server Variable Objects as reusable components.
Unfortunately, AsyncAPI 2.4.0 doesn't allow referencing reusableserver variable objectsfrom within theServer Object.
So we ended up in a situation where reusable server variable objects can be defined but cannot be reused.
AsyncAPI 2.5.0 remedies this deficiency by allowing the use ofReference Objects wheneverServer Variable Objects can be used inside theServer.variablesfield.The following example is now fully compliant with the updated specification:1asyncapi:2.5.02servers:3development:4$ref:'#/components/servers/myserver'5production:6$ref:'#/components/servers/myserver'7components:8servers:9myserver:10url:"{stage}.my-server.com:{port}"11protocol:ws12variables:13stage:14$ref:"#/components/serverVariables/stage"15port:16$ref:"#/components/serverVariables/port"17serverVariables:18stage:19default:dev20port:21enum:[5000,6000]22default:5000This new feature was contributed byVladimír Gorej. For more detail, seeVladimír's/spec #776pull requestand theGitHub issue where Vladimír's change toserverVariableswas discussed.Decorating Server Object with tagsTags categorize or group resources. 2.5.0 introduces support for defining tags at the Server level, which can be used for many use cases such as grouping servers by their features: environment name, cluster name, visibility, owner, etc.For example:1asyncapi:'2.5.0'2info:3title:StreetlightsKafkaAPI4version:'1.0.0'5servers:6scram-connections:7url:test.mykafkacluster.org:180928protocol:kafka-secure9description:TestbrokersecuredwithscramSha25610security:11-saslScram:[]12tags:13-name:"env:test-scram"14description:"This environment is for running internal tests through scramSha256"15-name:"kind:remote"16description:"This server is a remote server. Not exposed by the application"17-name:"visibility:private"18description:"This resource is private and only available to certain users"19mtls-connections:20url:test.mykafkacluster.org:2809221protocol:kafka-secure22description:TestbrokersecuredwithX50923security:24-certs:[]25tags:26-name:"env:test-mtls"27description:"This environment is for running internal tests through mTLS"28-name:"kind:remote"29description:"This server is a remote server. Not exposed by the application"30-name:"visibility:private"31description:"This resource is private and only available to certain users"32channels:{}This new feature was contributed bySergio Moya. For more detail, seeSergio's/spec #809pull requestand theGitHub issue where Sergio's change was discussed.Added missing IBM MQ Operation BindingWe noticed that we overlooked and did not define the Operation Bindings Object in the case of IBM MQ.
In AsyncAPI 2.5.0, the definition is empty, but its name is reserved for future use to be consistent with the rest of the bindings.This change was contributed byMaciej Urbańczyk. For more detail, seeMaciej's/spec #840pull request.Added new Google Cloud Pub/Sub BindingsThe specification is now extended to support another custom protocol through the bindings feature:Google Cloud Pub/Sub, thanks toJeremy Whitlock. For more details, check out thispull requestand thebinding definition.ClarificationsHere are notable clarifications that got into the AsyncAPI 2.5.0 release. Here is the list of notable clarifications that may have an impact on the tooling authors:ChannelItem.$ref resolution rulesAll references ofMUST be in the format of a URLsentence have been substituted withThis MUST be in the form of an absolute URL.
The meaning ofabsolute URLis now defined byRFC3986, section 4.3.Clarification around URL resolution rulesThe resolution rules aroundChannelItem.$reffield were not clearly defined. AsyncAPI 2.5.0 comes with explicit clarification that the resolution is done as defined by theJSON Reference.Tooling supportThe following official AsyncAPI tools are already updated to support the 2.5.0 specification version:JSON Schema that supports validation of AsyncAPI documents is updated in ourspecification JSON schema repository. We updated the@asyncapi/specspackage on NPM to version3.2, containing the JSON Schema document for AsyncAPI Spec 2.5.0.JavaScript Parsercan be used to parse and validate 2.5.0 documents. Upgraded tothe 1.17.0version.AsyncAPI React Componentallows you to render and validate the documentation of your asynchronous API provided in the AsyncAPI specification format. Upgraded to thev1.0.0-next.43version.HTML templateuses the latest@asyncapi/react-componentpackage. Upgraded to the0.26.0version.JavaScript Converterenables conversion from any AsyncAPI version into the 2.5.0 version of the spec. Upgraded to the1.1.0version.Generatoruses the latest @asyncapi/parser package, so while generating output, it can validate 2.5.0 documents. Upgraded to the1.9.12version.Modelinacan be used to generate typed models. Upgraded to the1.0.0-next.11version.Bundlercan be used to generate typed models. Upgraded to the0.2.3version.Cupidcan be used to generate typed models. Upgraded to the0.6.20version.Optimizercan be used to generate typed models. Upgraded to the0.1.11version.Gleecan be used to generate typed models. Upgraded to the0.10.23version.Spectral AsyncAPI Rulesetthat you can use for lining of AsyncAPI documents will be released soon.The pull requestis ready.Last but not least comes AsyncAPI Studio.Check out AsyncAPI Studio with this YAML example.Look aheadWe aim to have a quarterly cadence of releases of the AsyncAPI specification. For more information about when to expect future releases, you can see ourrelease process document.We're also working on the next major release of the AsyncAPI specification: 3.0.0. If you'd like to contribute, or just follow the discussions, you can seework on the 3.0 release issue.Photo byJeremy ThomasonUnsplash
"""
--------------------------------------------------------------------------------


Post 55
ID: https://www.asyncapi.com/blog/event-driven-api-documentation-made-simple-clientside-rendering?utm_source=rss
Title: Event driven API documentation made simple (Client-Side Rendering).
Link: https://www.asyncapi.com/blog/event-driven-api-documentation-made-simple-clientside-rendering?utm_source=rss
Summary: A simple guide for programmers looking for instructions on how to generate documentation using their AsyncAPI files.
Content:
"""
This post originally appeared onMichal's CornerThis guide is directed toward folks seeking instructions on generating documentation using their AsyncAPI files. Event-driven APIs are not the same as the synchronous APIs you usually document with OpenAPI or GraphQL. Many people use AsyncAPI now, and it is time to provide the community with a guide that shows what options the community has to render documentation on the client side.Oh, if you are still not sure about client or server side rendering, then you can read all about it hereWebsite rendering for beginners(shameless plug ).I will cover the usage for:ReactVueWeb ComponentsStandalone BundleThe AsyncAPI sample file👇is used as JSON to make it easier to use on the JS side.
All examples will use this same sample.1{2"asyncapi":"2.4.0",3"info": {4"title":"Account Service",5"version":"1.0.0",6"description":"This service is in charge of processing user signups"7},8"channels": {9"user/signedup": {10"subscribe": {11"message": {12"$ref":"#/components/messages/UserSignedUp"13}14}15}16},17"components": {18"messages": {19"UserSignedUp": {20"payload": {21"type":"object",22"properties": {23"displayName": {24"type":"string",25"description":"Name of the user"26},27"email": {28"type":"string",29"format":"email",30"description":"Email of the user"31}32}33}34}35}36}37}This is the expected look of the generated document👇All usage examples from this article are available to check on theasyncapi-docs-rendering-examplesrepository.ReactIf you wish to render documentation from your AsyncAPI file in React application, then you need to use theAsyncAPI React component.1️⃣To install theReact AsyncAPI componentrun the command:npm install --save @asyncapi/react-component@next2️⃣Now, create aindex.jsfile and type the following:1importReactfrom"react";2importReactDOMfrom"react-dom";34importAsyncApiComponentfrom"@asyncapi/react-component";5import"@asyncapi/react-component/styles/default.min.css";67import{ specMock }from"./testDoc";89constrootElement =document.getElementById("root");10ReactDOM.render(<AsyncApiComponentschema={specMock}/>, rootElement);Here we can see that theReact AsyncAPI componentis imported online 4.If you are happy with AsyncAPI styling then you need to import their CSS pattern with:import"@asyncapi/react-component/styles/default.min.css";Line 7is where the sample AsyncAPI file is imported.VueIf you wish to generate documentation from your AsyncAPI file in a Vue application, you need to use theAsyncApiStandalone bundle.The given instructions are for Vue 2.x.1️⃣The React AsyncAPI component is also required here, so you need to run the command:npm install --save @asyncapi/react-component@next2️⃣In yourApp.vuejust add this code:1<template>2<div ref="asyncapi"></div>3</template>45<script>6import AsyncApiStandalone from '@asyncapi/react-component/browser/standalone';78// AsyncAPI specification, fetched or pasted.9const schema =10'{"asyncapi":"2.4.0","info":{"title":"Account Service","version":"1.0.0","description":"This service is in charge of processing user signups"},"channels":{"user/signedup":{"subscribe":{"message":{"$ref":"#/components/messages/UserSignedUp"}}}},"components":{"messages":{"UserSignedUp":{"payload":{"type":"object","properties":{"displayName":{"type":"string","description":"Name of the user"},"email":{"type":"string","format":"email","description":"Email of the user"}}}}}}}';1112const config = {};// Configuration for component. This same as for normal React component.1314export default {15name: 'AsyncApiComponent',16props: {17msg: String18},19mounted() {20const container = this.$refs.asyncapi;21AsyncApiStandalone.render({ schema, config }, container);22}23}24</script>2526<style scope src="@/assets/asyncapi.min.css"></style>As you can see online 6, you need to import theAsyncApiStandalonebundle with commandimportAsyncApiStandalonefrom'@asyncapi/react-component/browser/standalone';3️⃣If you like AsyncAPI styling, then there is one more thing to do. You can do it in few ways:◾First way; you need to go to👉node_modules/@asyncapi/react-component/style/default.min.css.Copy that file and then paste it into yourassetsfolder.
I renamed mineasyncapi.min.css.Then, you can import this in yourmain.jsfile withimport'./assets/asyncapi.min.css'You can also import it at the end of theApp.vuefile with:<stylescopesrc='./assets/asyncapi.min.css'></style>Second way; import styles from@asyncapi/react-componentpackage:<stylescopesrc='@asyncapi/react-component/style/default.min.css'></style>Web ComponentsTo generate documentation from your AsyncAPI file, you can use it as an element of an HTML webpage or as a web component in any other web framework you choose. You can do this by usingweb-react-components.1️⃣Just create an.htmlfile, then copy and paste this code:1<script src="https://unpkg.com/@asyncapi/web-component@1.0.0-next.39/lib/asyncapi-web-component.js"defer></script>23<asyncapi-component4schema='{"asyncapi":"2.4.0","info":{"title":"Account Service","version":"1.0.0","description":"This service is in charge of processing user signups"},"channels":{"user/signedup":{"subscribe":{"message":{"$ref":"#/components/messages/UserSignedUp"}}}},"components":{"messages":{"UserSignedUp":{"payload":{"type":"object","properties":{"displayName":{"type":"string","description":"Name of the user"},"email":{"type":"string","format":"email","description":"Email of the user"}}}}}}}'56config='{"show": {"sidebar":true}}'78cssImportPath="https://unpkg.com/@asyncapi/react-component@1.0.0-next.39/styles/default.min.css">9</asyncapi-component>2️⃣If you need support for old browsers then you need to add this script as well:<scriptsrc="https://unpkg.com/@webcomponents/webcomponentsjs@2.5.0/webcomponents-bundle.js"></script>That is it!🤯Just awesome!Standalone BundleIf you want to render documentation from your AsyncAPI file without the use of any framework but with just an HTML webpage then you will need theStandalone bundle.1️⃣All you need is just a basic HTML template.2️⃣To get AsyncAPI document styling, in theheadelement enter:<linkrel="stylesheet"href="https://unpkg.com/@asyncapi/react-component@1.0.0-next.39/styles/default.min.css">3️⃣In thebodyelement type the following:1<div id="asyncapi"></div>23<script src="https://unpkg.com/@asyncapi/react-component@1.0.0-next.39/browser/standalone/index.js"></script>4<script>5AsyncApiStandalone.render({6schema: '{"asyncapi":"2.4.0","info":{"title":"Account Service","version":"1.0.0","description":"This service is in charge of processing user signups"},"channels":{"user/signedup":{"subscribe":{"message":{"$ref":"#/components/messages/UserSignedUp"}}}},"components":{"messages":{"UserSignedUp":{"payload":{"type":"object","properties":{"displayName":{"type":"string","description":"Name of the user"},"email":{"type":"string","format":"email","description":"Email of the user"}}}}}}}'7,8config: {9show: {10sidebar:true,11}12},13}, document.getElementById('asyncapi'));14</script>This fetches everything required from the bundle<scriptsrc="https://unpkg.com/@asyncapi/react-component@1.0.0-next.39/browser/standalone/index.js"></script>There is one more way to configure the AsyncAPI component.
You can do it throughconfigprops; the same as for the normal React component.MyWeb ComponentandStandalone Bundleusage examples haveconfig='{"show": {"sidebar":true}}'which turns on the sidebar, but if you change it tofalsethen your rendered document will not have that sidebar. Whatever works best for you.I almost forgot.AsyncAPI Standalone Bundle can be used in Angular 2+. Please check theofficial docsif that is something that you may need.This was only a sample of what could be done. AsyncAPI can do a lot more. Check out theAsyncAPI documentationfor more information on how to amend the sample so it will meet your expectations.I hope you liked this quick guide about the AsyncAPI client side document generation.Till next time👋.
"""
--------------------------------------------------------------------------------


Post 56
ID: https://www.asyncapi.com/blog/documenting-sqs-event-driven-apis-with-asyncapi?utm_source=rss
Title: Documenting SQS event-driven APIs with AsyncAPI
Link: https://www.asyncapi.com/blog/documenting-sqs-event-driven-apis-with-asyncapi?utm_source=rss
Summary: This post demonstrates how documenting event-driven architectures is possible, using SQS as a (real-world) example.
Content:
"""
Hey, do you remember what this field looks like in GET /operations?Ever since I started working in a team, the answer to that first question has been pretty straightforward:Sure, let’s check the OpenAPI documentation file.After two or three times, people who didn’t work with our codebase started remembering where the information was and stopped asking altogether. At least when it came to synchronous HTTP APIs. But as the previous question disappeared, another, slightly different one arose:Which are the fields we need to send in this asynchronous message?And the answer was not as easy. Finding it involved diving into the code, looking at DTO and data mapping objects, or even ancient Slack messages. While the HTTP API documentation was stored in a well-known file, everything event-driven API related was scrambled around. Wouldn’t it be nice if we could deal with both the synchronous and the asynchronous APIs in the same way? Turns out, we can!AsyncAPIAsking around, I stumbled upon AsyncAPI, a specification just like OpenAPI, but made for Event-Driven Architectures. Just like with OpenAPI, it describes how to communicate with an application, defining channels and message formats. Let’s see how to use it with an example.One of the requirements was a way to notify an event to our provider, only once. We decided to useSQS, an AWS message queueing service, into which our backend publishes messages with a specific format, and the provider listens to them.Simple diagram showing an application (our backend) which publishes messages in an SQS named OperationCreationQueue, and an external application which consumes those messages.To begin, we need to define the basics: the specification version, and our API name and version, in a new .yaml file.1asyncapi:'2.4.0'2info:3title:BestAPIintheworldOnce that’s out of the way, we’ll add a new channel, through which the messages are delivered. In our case, that channel is our SQS:1asyncapi:'2.4.0'2info:3title:BestAPIintheworld4version:0.1.05channels:6OperationCreationQueue:The next field we need is one I struggled a bit to wrap my head around. If this were an HTTP API, it would be obvious that the endpoints exposed are to be called by the client. But since our API works either by receiving or sending messages to clients, we need a way to express how the clients will interact with the application. Will the clientsreceivemessages through the SQS, or will theysendthem? Or, in other words, will the clients interact with the channel bypublishing messages, or bysubscribingto listen for new messages?In our example, operations are created in our backend and then forwarded to the provider, who will listen for new messages. Since we are documenting how others can interact with our API, the correct operation for this queue issubscribe1asyncapi:'2.4.0'2info:3title:BestAPIintheworld4version:0.1.05channels:6OperationCreationQueue:7subscribe:Once we have the basics, we can start documenting the operations as we see fit. For instance, we can add a description, expected message schema, and even protocol information if necessary. For instance, following our example:1asyncapi:'2.4.0'2info:3title:BestAPIintheworld4version:0.1.05channels:6OperationCreationQueue:7subscribe:8description:Theapplicationwillsendnewoperationnotificationmessagesthroughthischannel.9message:10payload:11type:object12properties:13operationId:14type:string15format:uuid16description:idoftheoperation17operationAmount:18type:number19description:OperationamountinArgentinianpesos.The message properties are defined usingJSON Schema.Visualization and other toolsJust like we have Swagger UI for RESTful API docs visualization, we can paste our AsyncAPI file into theAsyncAPI Studiofor pretty visualization, like this:Async API StudioThis tool will even generate basic examples for our messages, if we don’t provide our own.Additional tools, such as code generation tools, parsers, other UI components, and CI integrations, can be found on theAsyncAPI tools website page.There are many other features I have not explored in this article — I haven’t even tried most of them yet! — but this is enough to write a simple document. The question introduced in the beginning has, from now on, an answer which is easy to find!This post was originally posted in10Pines blogCover image bySafar SafarovfromUnsplash
"""
--------------------------------------------------------------------------------


Post 57
ID: https://www.asyncapi.com/blog/creating-consistency-announcing-asyncapi-spectral-together?utm_source=rss
Title: Governance for Asynchronous APIs: Announcing AsyncAPI & Spectral – Together!
Link: https://www.asyncapi.com/blog/creating-consistency-announcing-asyncapi-spectral-together?utm_source=rss
Summary: The collaboration between Stoplight’s open-source linting tool, Spectral, and AsyncAPI will be a game-changer for creating more consistency in your API program. Check out what comes with the release of the AsyncAPI ruleset!
Content:
"""
The collaboration between Stoplight’s open-source linting tool, Spectral, and AsyncAPI is going to be a game changer for creating more consistency in your API program. Check out what comes with the release of the AsyncAPI ruleset!Consistency is a top concern for companies across the globe.At Stoplight, we’re seeking to help your organization achieve consistency. We believe that API descriptions should be
treated the same way as code. APIs should have style guides with rules, and be reviewed to ensure they are descriptive,
readable, and concise for the developers who use them. Developer experience is, after all, another top concern for
companies.So, we created our open-source JSON linting tool Spectral. It promotes standards with the flexibility for custom rule
creation to validate and lint any JSON.For example, while an AsyncAPI or OpenAPI document might be entirely valid, it could be missing important fields like
descriptions for parameters or have other problematic design issues. Spectral can warn about possible improvements to
ensure API definitions can reach their full potential, without needing to have special code owners review every change
to the documents.Although Spectral is mostly referenced in the context of OpenAPI, AsyncAPI has been an integral
part of Spectral for quite some time now. In fact, last month our Spectral AsyncAPI ruleset celebrated its
second anniversary.Why AsyncAPI?While OpenAPI remains one of the top specifications, AsyncAPI is growing. And each has their ownunique benefits and
challenges. The ability to have options gives Spectral users more flexibility for their APIs.Spectral had primarily been an OpenAPI linter that was simply capable of working with other JSON documents. Now, by
enabling AsyncAPI rulesets, organizations can achieve the consistency they’re looking for with more flexibility.Introducing AsyncAPI & Spectral - Together!The release ofAsyncAPI rulesetwas more than just another feature added; it was considered a milestone. Previously,
Spectral lacked meaningful rulesets for other formats, and the number of learning resources was somewhat limited, making
the adaption of Spectral outside of OpenAPI rather minimal.Our collaboration with AsyncAPI means that we’ve given the respective AsyncAPI maintainers write access to the Spectral
repo AsyncAPI rulesets, though here at Stoplight we will still continue to operate with PRs, and ensure these get
priority.The Game ChangerThe introduction of support for another major API definition helped us further assess its level of importance as well as
initiated a notable shift in the way we perceived Spectral internally. Treating AsyncAPI ruleset as a first-class
citizen pushed us to entirely decouple our codebase from OpenAPI. The core purpose of Spectral (linting API definitions)
remained unchanged and still holds true, but from an engineering standpoint, it meant a shift in focus to the other
specs and a renewed attention on writing code that can be applicable everywhere.Back in 2018 or 2019, plenty of code was oriented around OpenAPI, tests, and naming. All were focused solely on OpenAPI,
meaning rulesets themselves couldn’t be applied easily to other formats (Spectral didn’t support them previously).With the release ofSpectral 6, that transition period wrapped up and Spectral is now more flexible than it’s ever been.Steps to Utilizing AsyncAPI & SpectralLinting AsyncAPI documents is quite similar to linting OpenAPI documents, meaning
most of the information about Spectral you’ll find on the internet will apply to AsyncAPI. Together with AsyncAPI
initiative, wemaintain a Spectral rulesetcontaining a number of useful rules you can leverage in your workflow to help
you get started.Step One:To get started, you need toinstall Spectral first. Note that you need to havenpmorYarninstalled, runningnpm install -g @stoplight/spectral-clioryarn global add @stoplight/spectral-cliis sufficient
to get Spectral.The CLI package bundles@stoplight/spectral-rulesetswhich
contains the actual ruleset we’ll use.
If you intend to use an older version of the AsyncAPI ruleset, you could additionally install a different version of @stoplight/spectral-rulesets.
However, it’s an optional step, and it's generally recommended to stick with the latest versions if possible.Step Two:Once you’ve got all the required dependencies installed, you can start by creating a simple ruleset. To do so,
create a file called.spectral.json. The following template can be used as a decent baseline:1{2// This makes sure our rules apply only to AsyncAPI documents.3// It might be handy in case you have other specs in the directory you intend to lint.4"formats": ["asyncapi2"],5// this includes the ruleset linked below6// https://meta.stoplight.io/docs/spectral/ZG9jOjUzNDg-async-api-rules7// Note that by default, only recommended rules are enabled.8// Some rules listed in the article above may not be a fit for you,9// therefore we don’t enable them by default.10"extends":"spectral:asyncapi",11"rules": {12// we can add our own rules here13}14}Step Three:To better facilitate the actual demands, Spectral allows you to create your own rules. These rules will fill the gaps
and cover use cases unique to your workflow, or style guide. While a more thoroughreference regarding custom rules is
available here, a basic rule could look as follows. The rule we’re about to implement will assert the presence and correctness of the version inside of theInfoobject.1{2"message":"Version must match 1.x.x",3// one can also define description property here,4// which is supposed to be a markdown string5// containing a more detailed explanation about the rule6"severity":"error",// or warn, or info, or hint7// any JSONPath-compliant expression8// https://goessner.net/articles/JsonPath/9"given":"$.info",10"then": [11{12"field":"version",13"function":"defined"14},15{16"field":"version",17"function":"pattern",18"functionOptions": {19"match":"^1(\\.[0-9]+){2}$"20}21}22]23}Step four:Now that we have a basic rule, we can insert it into the ruleset we previously created:1{2"formats": [3"asyncapi2"4],5"extends":"spectral:asyncapi",6"rules": {7"valid-document-version": {8"message":"Version must match 1.x.x",9"severity":"error",10"given":"$.info",11"then": [12{13"field":"version",14"function":"defined"15},16{17"field":"version",18"function":"pattern",19"functionOptions": {20"match":"^1(\\.[0-9]+){2}$"21}22}23]24}25}26}Step five:Now that we have all the pieces together, we can run Spectral. We’ll take theHello Worldexample from the AsyncAPI documentation.1# hello-world.yaml2asyncapi:2.2.03info:4title:Helloworldapplication5version:'0.1.0'6channels:7hello:8publish:9message:10payload:11type:string12pattern:'^hello .+$'To lint, execute the following command:spectral lint hello-world.yamlThanks to the built-in AsyncAPI ruleset, we receive more feedback than just the information about invalid document versions. The default configuration is usually reasonable for most, but should you want to tweak the version, please visit ourdocumentationthat explains everything in greater detail.Tada!🎉We are looking forward to the continued collaboration with AsyncAPI and the exciting things to come. Let us know your
thoughts about what you would like to see next or visit theAPI design blogfor more insights.
"""
--------------------------------------------------------------------------------


Post 58
ID: https://www.asyncapi.com/blog/2022Q1-summary?utm_source=rss
Title: Summary of things that happened at AsyncAPI Initiative from January to April, 2022
Link: https://www.asyncapi.com/blog/2022Q1-summary?utm_source=rss
Summary: New AsyncAPI brand. AsyncAPI 2.4 and work on the 3.0 spec release. Meetings organization change. 2022 conference organization. AND SO MUCH MORE!
Content:
"""
Welcome to another update from the AsyncAPI Initiative. In this article, I want to highlight the most important items contributed to AsyncAPI during the first few months of 2022.I usually ask the community if folks have anything important that I should put in my updates. Still, this is a pretty subjective article because it's based mainly on things I see in my personal bubble.😃Brand RefreshThis one is pretty easy to spot, especially if you have been with AsyncAPI Initiative for some time.😃On March 10, we announced a change to the AsyncAPI brand. Change that was needed. A refresh of this faded green that I personally never liked.😂It was a massive effort led byMissy Turco. Months of work, research, and discussions with the community.It is not all. More work in the area is needed:Design System💪- Get involved in therelated design system repositoryif you are interested in helping out.AsyncAPI Mascots refresh - We need to refresh our existing Eve and Chan mascots to match the new brand. Any help would be appreciated.For more regular news and updates on topics around brand and design in AsyncAPI Initiative, I definitely recommend you followMissy Turcoand read herregular design updates.AsyncAPI ConferenceWe want to organize our first hybrid conference, one you can watch online and participate in person. May is right behind the corner, so not much time is left. We need to start working actively on the event now.We discuss all aspects of our upcoming conference in ourCommunity Discussion for 2022 Conference Organizationopenly. Please join and actively support the effort. We need lots of volunteers to make this happen.We need to have a special task force that will focus on the subject. Please join thediscussion on hosting a conference-dedicated weekly meeting.Meetings scheduling automation and related changesBecause of the community's growth and the growing number of topic-specific meetings, we had to spend some time improving things and automating as much as possible. After some initial discussions, such asthis discussion about Google-services, some initial requirements were defined, calledMeeting as a Service.A week ago, we stopped using ourasyncapi-usersGoogle Group. We removed it, and all the members were migrated as subscribers to the AsyncAPI Newsletter. This newsletter is the new place where we'll send email notifications every Monday morning with a list of upcoming meetings.We switched to the new Google Calendar instance managed by the official AsyncAPI Google account. You should remove/unsubscribe from the old calendar andsubscribe to the new calendar,Our Technical Steering Committee (TSC)approved to sponsor 8 Zoom licenses to host official AsyncAPI meetings. So far, only 3 licenses have been assigned. We have lots of room for more meetings and hosts, if there is a need.Huge thanks toKrishna KumarandShreyansh Jain, who helped research the implementation.❤️If you want to learn more about becoming a meeting host, or something else related to meetings, get familiar with ourdedicated meetings FAQ.Oh, and I almost forgot, look at this.👇⭐️
Allinfo about AsyncAPI-related meetingsis in one beautiful place! ❤️View of dedicated community/meetings page on the AsyncAPI website.Upcoming 2.4 and 3.0 releases of the specWe released anew 2.4.0 version of AsyncAPI Specification. There are many good features, like the possibility to provide a unique Messageidfor the entire AsyncAPI file or the ability to specify that security is valid only for a given operation. You definitely need to read therelease notes.Huge shout out toSergio Moya, who was a release coordinator for the 2.4.0 release and pushed all the doors to make sure the release could go out.2.4.0 was released, but this doesn't block us from working on something much bigger, 3.0.0 version of the specification!🚀If you haven't heard about 3.0.0 yet, I highly recommend you have a look at the3.0.0 release articlewritten byHarsh Mishra.Please join these efforts, as there is much work ahead of us, but not many hands doing actual work. We meet every two weeks to sync the work efforts and discuss important topics. Feel free to join🙏I also recommend followingSergio Moyaand reaching for hisregular updates on specification-related effortsContributors onboarding initiativesOne of thegoals for our 2022 community-building effortswas to involve AsyncAPI Initiative as a mentoring organization in as many coding (but not only) events as possible. We have many maintainers here who like to help first-time contributors land their first pull requests in an open and relaxed environment.Google Summer of CodeWe did not start well. We were not accepted forGoogle Summer of Code. Don't ask me why. I really do not know. I wish I could have a clear answer from them about what failed on my end, where I made mistakes in our application.😢We never give up here at AsyncAPI, though.😃OpenForceMarch was a month where we joinedOpenForcethanks to amazing support fromHargun Kaur. As a result, we managed to onboard a few new folks and gained important contributions in exchange. There are  a few PRs still open, but here are some of the completed PRs:Namya LGintroduced a great improvement to our CI by creating dedicatedCI workflows that search for broken linksin our documentation across all repositories.Harsh Mishraintroduced aCI workflow that validates docker imagesin projects where we publish them.Abhijeet Jejurkarimproved the Kubernetes deployment for ourserver-apiservice.Samriddhicontributed anew/bundleendpoint to ourserver-apiservice.Ritik Rawalcontributed anew/diffendpoint to ourserver-apiservice.Everly Precia Sureshadded a possibility tohost API reference docs for ourserver-apiservicethrough a dedicated endpoint.It is also super important to mentionAbir Pal, who helped to coordinate efforts and was the first point of contact for the community coming from OpenForce channels.Google Season of DocsSuccess with OpenForce was followed by the unexpected announcement that AsyncAPI was accepted as an organization for Google Season of Docs (GSoD) 2022, with a $10k budget.💪An amazing success forQuetzalli Writesand an excellent opportunity for the AsyncAPI Initiative to improve its documentation big time!
On May 16, we will announce the names of six interns we want to hire to work on two different projects to have better docs. Quetzalli leads a super challenging task to interview as many candidates as possible (around 150!). Keep your fingers crossed.Quetzalli and I will be mentors for our GSoD interns in the following months. Stay tuned to watch the progress.AsyncAPI MentorshipWe did not want to give up even though the Google Summer of Code (GSoC) 2022 application was declined. We knew many community members joined and started contributing because they counted on AsyncAPI being part of GSoC.Well tl;dr, our TSC just accepted an idea to start our ownAsyncAPI Mentorshipprogram!🚀Now we have until May 15 to discuss with mentors yourmentorship ideas, understand the scope of each idea, and state clearly for which idea you are a candidate. Then we will ask TSC to vote and select 10 ideas that the AsyncAPI Initiative should sponsor this year.AsyncAPI TrainingICYMI, we run an effort to create official AsyncAPI training videos.Barbaño Gonzálezleads this topic and almost finishedtraining scripts and storyboardsfor the first set of videos.I do not think it is a secret to say that great content is created only with great input, feedback, and review from people waiting for it. Please join Barbaño's efforts with any help you can, as she is not doing it for herself but the community.I recommend youfollow Barbaño's monthly updates, especially if you want to participate.Docs Feedback FormOne of our missions is to have kick-ass documentation. Easy, right?Writing docs is easy, just like writing code (at least in my opinion😜). Well, we all know the devil is hidden in details. Details like gathering requirements, figuring out architecture, and making sure you have a well-motivated group of people working on it. And last but not least, make sure the community can easily share feedback on your work transparently.I wrote already aboutQuetzalli Writesand the efforts to get AsyncAPI into GSoD. Getting a well-motivated group of people to work on docs, checked.✅Ournew docs information architecture is almost here too. I think we can say "checked"✅to this one too.Since this week, we can also say "checked"✅to the idea ofgetting docs feedbackfrom the community.Each documentation page has a dedicated feedback form that one can fill in anonymously. The form injects the feedback into adocs-related GitHub Discussion like this example.Huge applause to:Quetzalli Writesfor leading the changeMissy Turcofor amazing support with designMaciej Urbanczykfor detailed reviewAkshat Nemafor implementation. Akshat demonstrated a lot of patience here. As an individual contributor, he waited for the merge for quite some time. There was a long discussion, many parties involved. Many contributors lost interest in such long-running PRs. Not Akshat!💪Anyway, I recommend you followQuetzalliand herregular docs-related updates.Photo byMitchell LuoonUnsplash
"""
--------------------------------------------------------------------------------


Post 59
ID: https://www.asyncapi.com/blog/release-notes-2.4.0?utm_source=rss
Title: AsyncAPI Spec 2.4.0 Release Notes
Link: https://www.asyncapi.com/blog/release-notes-2.4.0?utm_source=rss
Summary: AsyncAPI 2.4 is now released. This brings really helpful additions, such as the new `messageId` field, Server Variables reusability, and security at Operation level
Content:
"""
The new version of the AsyncAPI specification - 2.4.0 - is now available.This is a minor release, and it doesn't bring any breaking changes. You can switch to it by modifying the following value in your AsyncAPI fileasyncapi: '2.3.0'intoasyncapi: '2.4.0'Message uniqueness thanks to the new messageId fieldAs operations haveOperationId, AsyncAPI messages can now definemessageId. This new field is used to identify a message across a whole AsyncAPI document uniquely.
This new field will be helpful in tools that ask the user to select a message as input, such as validating their schema or filtering code to be generated.For example:1asyncapi:2.4.02components:3messages:4SomeMessage:5messageId:SomeMessage6payload:7type:object8properties:9name:10type:stringThis new feature was contributed byWaleed Ashraf.
For more detail, seeWaleed's/spec #751pull requestand theGitHub issue where Waleed'sMessageIdfeature addition was discussed.Server Variables can be now referenced from componentsTo allow for more flexibility in how AsyncAPI documents are structured and enable content to be reused,serverVariablescan now be defined as reusable components.For example:1asyncapi:2.4.02servers:3development:4$ref:'#/components/servers/myserver'5production:6$ref:'#/components/servers/myserver'7components:8servers:9myserver:10url:"{stage}.my-server.com:{port}"11protocol:ws12variables:13stage:14$ref:"#/components/serverVariables/stage"15port:16$ref:"#/components/serverVariables/port"17serverVariables:18stage:19default:dev20port:21enum:[5000,6000]22default:5000These are added to the many other aspects of the AsyncAPI specification which can be declared as reusable components. You can see the full list in theComponents Object section of the AsyncAPI specification.This new feature was contributed byDaniel Kocot. For more detail, seeDaniel's/spec #717pull requestand theGitHub issue where Daniel's change toserverVariableswas discussed.Security can now be defined at Operation levelUntil today, Security requirements were defined at Server level. That restricted the security requirements to be the same for all channels linked with a Server, and for all operations of those channels.
In fact, when setting Security in both the Server and the Operation, both should be satisfied.For example:1asyncapi:2.4.02servers:3production:4url:"mykafkacluster.org:8092"5protocol:kafka-secure6security:7-service_auth:8-auth:write9-auth:read10channels:11some/events:12servers:13-production14subscribe:15# This operation level security implies the ability to subscribe to messages from16# `some/events` channel with Authorization headers17# that have `auth:read` scope. Note that an operation level security must still satisfy18# security requirements specified at the server level.19security:20-service_auth:21-auth:readThanks toSekharbans, is now possible to increase security granularity by defining a set of security requirements at Operation level. For more detail, seeSekharban's/spec #584pull requestand theGitHub issue where Sekharban's suggested feature was discussed.Reusability of Servers defined in Components is clarified in the specificationReusability of Servers was introduced inAsyncAPI 2.3.0. However, the change was not fully clarified in the specification, leading to confusion.Thanks toVladimir Gorej, this is now clarified by mentioning that elements for the Servers Object can be either Server Object or a Reference Object.
For more detail, seeVladimir's/spec #706pull requestand theGitHub issue where Vladimir's Servers Object change was discussed.Tooling supportThe following official AsyncAPI tools are already updated to support 2.4.0 version of the specification:JSON Schema that supports validation of AsyncAPI documents is updated inthisrepository. Also@asyncapi/specspackage has been updated on NPM to version2.14.0, and it contains the 2.4.0 JSON Schema.JavaScript Parseruses latest@asyncapi/specspackage and can be used to parse and validate 2.4.0 documents. Upgrade to1.15.0version.HTML templateuses the latest@asyncapi/react-componentpackage. Upgrade to0.24.9version.JavaScript Converterenables conversion from any AsyncAPI version into the 2.4.0 version of the spec. Upgrade to0.11.0version.Generatoruses the latest @asyncapi/parser package, so while generating output, it can validate 2.4.0 documents. Upgrade to1.9.3version.Last but not least is the AsyncAPI Studio.Check out the Studio with this example.Look aheadWe aim to have a regular cadence of releases of the AsyncAPI specification, four times a year. For more information about when to expect future releases, you can see ourrelease process document.We're also working on the next major release of the AsyncAPI specification: 3.0.0. If you'd like to contribute, or just follow the discussions, you can seeWork on 3.0 release issue.Photo byAlexandru TudoracheonUnsplash
"""
--------------------------------------------------------------------------------


Post 60
ID: https://www.asyncapi.com/blog/google-season-of-docs-2022?utm_source=rss
Title: 📑 Google Season of Docs 2022 at AsyncAPI
Link: https://www.asyncapi.com/blog/google-season-of-docs-2022?utm_source=rss
Summary: Check out the Docs project proposal we're submitting to GSoD 2022! You won't want to miss out.
Content:
"""
¡Hola, AsyncAPI community!For today's blog post about AsyncAPI Docs📑, I wanted to share with all technical writers about our organization’s plan for participation inGoogle Season of Docs 2022 (GSoD). Any and all technical writers are welcome to come participate with us for GSoD 2022 season, regardless of tech background or years of experience! At AsyncAPI, we love mentoring folks who want to get involved in OSS, tech, and Docs. ❤️As some of you may remember from myGist Docs update for 31 Jan - 11 Feb 2022, I noted that GSoD 2022 was coming up and that AsyncAPI wanted to participate in the application process once it opened on February 23, 2022.In anticipation of this, I also created a new AsyncAPI Slack channel named#temp-gsod-2022that anyone can join! First,join our Slack workspace☎️and please respectour slack etiquette.🙂 Then join thetemp-gsod-2022channel, our temporary channel to coordinate GSoC 2022 setup. I'll publish regular updates on where we are in the application process, so stay tuned as the process continues.😄Join the#temp-gsod-2022slack channel for:mentees identificationmentors identificationideas identificationmentees and ideas and mentors matchingBelow is theproject proposalwe're submitting toGSoD 2022and then we close with a reminder of how to get started as an AsyncAPI Docs contributor:Update Docs Information Architecture - AsyncAPI InitiativeAbout AsyncAPIAsyncAPI (currently version 2.3.0, first released in 2016) is an Apache License 2.0 libraryunder the Linux Foundationthat seeks to improve the current state of Event-Driven Architectures (EDA). The AsyncAPI Initiative is a specification and growing set of open-source tools to help developers define asynchronous APIs, and build and maintain event-driven architectures. Developers familiar with OpenAPI (aka Swagger) for RESTful APIs will see strong similarities when using AsyncAPI. One common use case is generating documentation (HTML or Markdown) of an asynchronous API. The specification is both platform and language agnostic. Current tooling includes support for common message brokers such as Apache Kafka and RabbitMQ, and languages including Python, Java, and Nodejs. Our long-term goal is to make working with EDAs as easy as working with REST APIs. That goes from documentation to code generation, from discovery to event management, and beyond. Our 150+ Open-Source (OSS) contributors are EDA enthusiasts from all around the world.About our Docs projectOur current Docs problemOur current Docs and their Information Architecture (IA) needs a major makeover. The current content buckets are far from ideal and much basic content is missing to help onboard new contributors. Users new to our API spec need/Conceptualdocs that explain our spec terminology in more detail with engineering diagrams: people often learn visually! We also have to move our CLI docs under the Docs upcoming newReferencecontent bucket; currently, we have a README version of CLI docs only. Similarly, we're adding a new and broader/Toolssection of documentation for our tools in individual tools' GitHub repositories, under a/docsdirectory. Those should still remain there and continue to be maintained, but they also need to be documented in our Docs in a less informal way than what you see in a README. In time, we also need to add many more tutorials (i.e. Websocket, Kafka, etc) and Use Cases and Troubleshooting Guides, under a newHow-Tosection.We also need to re-structure theGenerator tooldocs. Because this is one of our main tools, it's big enough to be it's own independent project for 2022 GSoD. Currently, our Generator docs need a major update, to better explain every single functionality of the Generator.Our Docs project’s scopeWe're already invested in utilizing theDiátaxis methodologyfor determining ourcontent buckets(Concepts, Tutorials, Tools, How-To Guides, Reference). Along with this change, it makes sense to add new landing pages that introduce each content bucket. Each content bucket landing page could include cards featuring requested content from the community that still needs contributions. Then each card will read, "Contributors Needed."AsyncAPI has several CLI and Tools markdown README documentation in miscellaneous GitHub repositories that we plan to migrate over to the main Docs site. This task is part of our goal for finalizing our 2022 AsyncAPI Docs Information Architecture makeover. We explain this in more detail in our previous OSS blog post titled"Change is coming to our AsyncAPI Developer Documentation". It's also extensively documented in ourAsyncAPI Docs GitHub Project Board.In addition, we want to also target improving theGenerator tooldocs that are only READMEs in a repo right now. The Docs for this one tool are a big enough job to merit being our 2nd proposed project for 2022 GSoD.We're also writing voluntary OSS bi-weekly updates via GitHub Gists to speak about the latest updates made in the AsyncAPI Docs Ecosystem. Due to our commitment to investing time in gaining interest in our community and getting Google excited about us, we've made sure to maintain updates about ourGoogle Season of Docs 2022application too! In fact, you can take a look at the latest three where we made said mentions here inAsyncAPI Docs update (31 Jan - 11 Feb 2022),AsyncAPI Docs update (14 Feb - 25 Feb 2022), andAsyncAPI Docs update (28 Feb - 11 March 2022).Measuring our Docs project’s successWe will partially measure success in the Docs project by capturing specific feedback about the IA changes via our soon-to-come newDocs Feedback card. We need this specific and granular feedback to make sure we listen and make changes according to what the community requests from Docs. In previous AsyncAPI Docs Gist updates, we've mentioned that Design contributors were teaming with Docs on/websiteissue#453for the ideation and development of our newfeedback cardthat will be added at the bottom of each Docs page. What the community decided over the last 2 weeks was that theSubmit feedbackbutton in the card will publish the feedback anonymously via the AsyncAPI bot and create a newGitHub Discussionwith said feedback:The other way we would consider the project successful is the number of our contributors and Docs PRs increased from 3 to 6 community members. Currently, a majority of our OSS contributor community focuses only on contributing code, but we would like to instill a greater interest in contributing to documentation that provides value for everyone.TimelineThe project itself will take approximately 4-6 months to complete, depending on the different levels of knowledge from diverse technical writers (TW) that might get involved. (At AsyncAPI, we want to work with any TW, regardless of their years of experience. We have a passion for mentorship, and we do not wish to have a bar that would prevent any TW from contributing to our OSS Initiative. In fact, we look forward to potentially mentoring TW(s) who are completely new to tech and making them feel welcome!)For our 2 projects, we would like to request a minimum of 2 TWs, so that we can work on both the CLI/Tools and Generator Docs.The timeline would look as follows:May:Orientation on how to contribute to AsyncAPI Inititiave, how Docs issues are organized, detail how we're migrating our CLI and Tools Docs, and assign goodfirst-time-ticketsto get each new TW contributor started.June - August:Each TW goes through designated issues marked for both first time contributors and work set aside forGSoD 2022. Each TW starts creating documentation for their individual issues assigned/selected.September - October:We determine if we're going to be able to complete both CLI and Tools Docs plus the Generator Docs, depending on how many TWs are in our group and how much they've been able to complete so far. We re-align priorities as needed and asses what is missing to reach our 2022 IA change goals for AsyncAPI Docs.November:Project completion and all contributors receive some swag!Project budgetWe have set aside 2 mentors for now, for our 2 projects: improving our IA and re-structuring our Generator Docs. Should we be selected, AsyncAPI would like to request from Google a US $5000 budget for each project. For both projects, the request then totals for a $10,000 budget.Budget itemTotal AmountTechnical writer updates, reviews, edits, and publishing new documentation for the IA improvements.$5000Technical writer updates, reviews, migration, and publishing improved Generator tool documentation.$5000Get started contributing to AsyncAPI Docs TodayLast but not least, don't forget thatCode isn't the only way to contribute to OSS; Dev Docs are ahugehelp that benefit the entire OSS ecosystem. At AsyncAPI, we value Doc contributions as much as every other type of contribution.❤️To get started as a Docs contributor:Familiarize yourself with ourproject's Contribution Guideand ourCode of Conduct.Head over to ourAsyncAPI Docs Board.Pick an issue you would like to contribute to and leave a comment introducing yourself. This is also the perfect place to leave any questions you may have on how to get started.If there is no work done in that Docs issue yet, feel free to open a PR and get started!Docs contributor questionsDo you have a documentation contributor question and you're wondering how to tag me into a GitHub discussion or PR? Never fear!Tag me in your AsyncAPI Doc PRs orGitHub Discussionsvia my GitHub handle,quetzalliwrites🐙.-Q.W.👩🏻‍💻and Canela🐕‍🦺
"""
--------------------------------------------------------------------------------


Post 61
ID: https://www.asyncapi.com/blog/async-api-spec-3.0-release?utm_source=rss
Title: AsyncAPI Spec 3.0 is coming!
Link: https://www.asyncapi.com/blog/async-api-spec-3.0-release?utm_source=rss
Summary: Announcing the start of work on AsyncAPI Spec 3.0. Check out all the potential new features coming to AsyncAPI 3.0 and how you can get involved!
Content:
"""
AsyncAPI is a specification for describing your event-driven architecture. Our specification allows you to describe and document your message-driven APIs into a human-readable format. The AsyncAPI community is currently inching towards a 3.0 release that will bring together multiple features, enhancements, and breaking changes. We followrelease cadenceand we will continue to release the Spec to the community as we continue to build on it.Potential ChangesMany new features for AsyncAPI Spec 3.0 are being planned, written, and discussed. Among them are:Introduce Schema VersioningIntroducing Data Format bindingsMaking servers aware of their service nameSolving publish/subscribe confusionWhat does an AsyncAPI file meanFixing schema inconsistenciesDefining a schema format other than the default oneRemove$reffield fromChannel Item ObjectApplication of message traits (intentionally) replacing existing attributesAddress perspective and channel reuse issues through introducing 'endpoint' conceptThe tooling issues and pull requests which are tied up with the Spec 3.0 release are:Implement intent-driven Parser APISplitting out definitions into separate filesMove binding JSON schema files to main JSON schema repositoryWe are usingthis GitHub milestoneto track down all the issues related to Spec 3.0 release. If you are willing to take up an issue, filter the issues withneeds championlabel and drive the initiative forward. We also have arelease journalfor the upcoming Spec 3.0 release to keep note of all the references, build the right documentation, and track the progress for the upcoming release.Contributing to the releaseAsyncAPI is a community-driven project and we welcome all kinds of contributions! To get started, join ourSlack workspace. After joining, reach out to us on the#03_specificationchannel and participate in the conversations.To better understand AsyncAPI and how the Spec 3.0 release will play out, we recommend watching ourpast meeting recordings. To know how you can contribute, we recommend checking out ourcontributing guidelines. If you wish to keep track of all the work that is happening on the Spec 3.0 release, we recommend checking out ourGitHub issue.Before landing in your contributions, make sure you follow ourCode of Conductand the pull request you raised isdescribed properly. To know how we collaborate using Git & GitHub, follow theGit workflowthat we have developed for contributors.When will the release happen?We are yet to arrive at a date but the community is working towards releasing this by the end of 2022. Currently, we meet every two weeks to discuss the upcoming Spec 3.0 release and share updates and you are welcome to join it! We are going to have our next meeting onUTC 16:00 on March 16, 2022. You can access theAsyncAPI Calendarand explore our upcoming meetings.The release will happen gradually, where the new specification and tooling will live in coexistence until there is a collective consensus that everything is ready. This gives everyone an easy way to test out the new changes and provide feedback before the release. Finally, after rigorous testing, we will make an official announcement about our release!Join us and help make the upcoming release a successful one!(Cover picture byAndrew CoelhoonUnsplash)
"""
--------------------------------------------------------------------------------


Post 62
ID: https://www.asyncapi.com/blog/openforce-2022?utm_source=rss
Title: AsyncAPI at OpenForce
Link: https://www.asyncapi.com/blog/openforce-2022?utm_source=rss
Summary: Two years ago, the AsyncAPI Initiative participated in Hacktoberfest to help folks start their journey in open source. Hacktoberfest was a very successful event. We got feedback that the level of comm
Content:
"""
Two years ago, the AsyncAPI Initiative participated in Hacktoberfest to help folks start their journey in open source. Hacktoberfest was a very successful event. We got feedback that the level of commitment that we presented makes us perfect candidates for Google Summer of Code.Last year, we participated in Google Summer of Code and again in Hacktoberfest. It went great! We onboarded many new, super enthusiastic contributors that stayed with us longer.This year won't be different. We want to do it again and yet again, on a larger scale. Thus, active participation in initiatives focused on introducing new folks into open source becameone of our main goals for 2022.Thanks to one of our contributors,Hargun Kaur, we learned aboutOpenForceand decided to join it in March 2022.What we offerAsyncAPI maintainers prepared some GitHub issues that are easy enough to be completed in one month. We offer full support in discussing possible solutions and on-time review in pull requests.The AsyncAPI community is a safe place for your first open source contribution. Many folks are open to supporting your first steps in this great world.In exchange, every person that completes these tasks will get an AsyncAPI t-shirt!How to connectJoinour Slack workspace. Just make sure to follow ourSlack etiquetteandthe code of conduct.We will also haveAbir Palpresent in the OpenForce Discord channel, in case you need help on your way to AsyncAPI.List of issues you can work on [TODO]CI/CDWorkflow that updates every PR with clear info about conventional commitsReadme links checkCI on PR's should build the Docker imageK8S/HelmAutomate Helm chart release version bumpCreate better Kubernetes liveness, readiness and startup ProbesAdd livenessProbe and readinessProbe to K8s DeploymentTypeScriptAdd asyncapi bundle command in AsyncAPI CLIAdd asyncapi optimize command in AsyncAPI CLIRemove usage of Parser, validation and update docs from AsyncAPI bundlerAdd support for Markdown output in AsyncAPI DiffAdd support for HTML output in AsyncAPI DiffAdd implementation for /bundle pathAdd implementation for /diff pathServe openapi.yaml file as documentation pageEnable validation of an example payloadShow how to integrate Modelina in an AsyncAPI generator templateShow how to integrate Modelina in a websiteAdd support for WebSocket clientsJavaScriptSwitch for rendering whole channels by template parameterCreate eslint plugin for organization repositoriesGoSupport Kafka- Also includes JavaScript work.Create Avro schema parserOthersDefine a better API that can be used by other applicationsIdea: Using EventGateway Websocket with GrafanaPhoto byOpenForce
"""
--------------------------------------------------------------------------------


Post 63
ID: https://www.asyncapi.com/blog/2021-summary?utm_source=rss
Title: AsyncAPI Initiative 2021 in Numbers
Link: https://www.asyncapi.com/blog/2021-summary?utm_source=rss
Summary: AsyncAPI Initiative growth presented in different metrics from different channels in 2021.
Content:
"""
This article is a continuation of a tradition where once a year, we summarize all the metrics that we can collect from our different tools to see how we are growing as a community.It is good to see how we are doing, how are we growing🚀If you are interested in previous years, look atthis 2020 summary article.SlackWe noted 1846 members at the end of 2021:20202021New members490877(79% increase)In 2021 we also went through reorganization of the channels setup, created etiquette, and most importantly, got a standard subscription from Slack. We definitely are not going away from Slack.Weekly active membersSlack is our primary community channel, a kind of direct connection between community members. In my opinion, it indicates the community's growth that is more active in the initiative.For this year, I removed the stats about the number of posted messages. We have many messages posted by bots (about GitHub activity, for example) affecting the numbers. They are big but do not indicate only Slack activity.Data is shown weekly and not daily, so the numbers are not affected by usually silent weekends.20202021Active members weekly81 average77 median174 average(114% increase)173 median(125% increase)Active members posting messages weekly20 average19 median40 average(100% increase)41 median(116% increase)I think the median is accurate not only because it shows higher numbers. It basically eliminates super high weeks (like when we organized conferences) and weeks when we have lots of holidays simultaneously, like Christmas break.LinkedInLinkedIngrows like other channels. We mostly attract folks with job functions related to engineering (51%). Other are also tech but related to business development or product management.I personally wish we actually reach more product managers (PM) than 2%. As a person that was a PM in the past, I remember how much specs and APIs were important for products and hope other PMs go that path too.Followers and impressionsAt the moment, we have 1534 followers. Unfortunately, LinkedIn memory is short and remembers only numbers one year back. I do not have access to January 2021 data.In the case of a percentage increase, I take only numbers related to organic growth.20202021Followers61157 from payed marketing745(34% increase)Impressions80 095248 571146 252 from payed marketing(28% increase)We published 265 posts on LinkedIn, and with a growing number of followers, it converted into many users visiting ourwebsite.20202021Users7151 857(160% increase)New Users6561 699(159% increase)Sessions1 0422 511(141% increase)Sponsored marketingWe spent $1200 on paid marketing on LinkedIn to increase awareness about AsyncAPI Hackathon and Conference. We noticed a large increase in impressions on our sponsored posts. These sponsored posts did not link to our AsyncAPI website but to the conference registration site. To summarize, $1200 converted into 763 visits to the registration website and ... wait for it ... wait for it ... 15 registrations. I have to tell you that 2021 taught me that there is nothing better than organic marketing. Better pay $1200 to contributors for their work rather than give it out to LinkedIn.I recommend everyone to maintain a relationship with the community also on LinkedIn. This social media is changing. Many folks that are not active on Twitter are active on LinkedIn, and you should target them. In the end, reposting stuff you have for Twitter to LinkedIn is not very time-consuming.In Q4 of 2021, we also started streaming different meetings to LinkedIn. In three months, we noted 1180 views of our streaming content. So we basically enabled over 1k users to watch the content they would probably not watch if LinkedIn was their only social media channel. Think about it, omnichannel is the only way to build the community,Google AnalyticsWe use Google Analytics onAsyncAPI websitebecause we want to understand what content is most valuable for you, and we want to learn how the interest is growing.Traffic got much higherThe interest is growing by a lot! Our website handles it well with the support ofNetlify, which is free for open-source projects.201920202021Users visits27 09083 655(208% increase)131 802(57% increase)Sessions50 405147 409(192% increase)235 321(60% increase)Pageviews143 059362 686(153% increase)590 501(63% increase)Top blog postsAsyncAPI blogis a place where the AsyncAPI Community can publish articles. Anyone can share knowledge, experience, and showcase their work there. Justlet us know what you want to write about.What is the benefit of writing/republishing on the AsyncAPI blog? Visibility among the AsyncAPI community plus our activities to make your work go viral. Just look at the below table to see our top 3 viral posts.PostUnique pageviewsAuthorAsyncAPI vs OpenAPI: Answers to Your Burning Questions About Two Leading API Specs(September 2021)8 107Jesse MenningUnderstanding AsyncAPIs with a Practical Example(March 2021)6 161Dunith DhanushkaCreating AsyncAPI for WebSocket API - Step by Step(April 2021)5 049Lukasz GornickiGoogle Search ConsoleIn 2021 we integrated our Google Analytics with Google Search Console (GSC). I believe that numbers from GSC can show how many more people hear about AsyncAPI and gain interest in the topic. In other words, the assumption is that the more people google, the more people are aware of AsyncAPI.The last data we have access to is from the 20th of September 2020. So we cannot fully compare 2020 and 2021. We know we had 1 230 000 (OVER ONE MILLION) impressions and 104 000 clicks in 2021 in total, but in the table below we only compare data between the 20th of September and the 31st of December.20202021Total clicks19 20034 400(79% increase)Total impressions300 000350 000(17% increase)Impressions conversion into clicks6.4% average9.8% averagePosition in search results31.3 average29.7 averageWe can compare only three months, so numbers for 2022 will definitely be better than 2021.We did somesuper basic SEO improvementsin mid 2021, which sure took effect on increased click rate. We also published a few articles with topics that people google for together withasyncapi, WebSocket, and OpenAPI.I think we have proof that all additional activities planned for 2022, such as rework of existing documentation, should improve numbers even more.If you have more ideas on improving, just open up an issue inthe website repository, and let's discuss how we can get better.TwitterBy the time I gathered data for this blog post, we had 2997 followers on Twitter. 1 564 increase since the last time we had published such metrics in mid-December 2020. It is78% more followers in a year compared to 2020.I'm not gonna hide, I'm not a Twitter fan, really.😃Who cares about my preferences, though, our community is present there, and we must too. In the end, Twitter led 2 478 new users to AsyncAPI website.What I can tell you for sure. Do not spend your money on Twitter marketing. We tried it for AsyncAPI Conference. Of course, I might configure something in a bad way, but does it change anything? We spent $560.21 on sponsored tweets that converted into 16 471 visits to the conference registration page. Guess what,0 folks registered.Now yes, of course, might be that tweets were not targetted properly, might be that registration page was not attractive. But I challenge you with a question: is it worth spending many extra hours and money on this classical marketing instead of the community?GitHubWe notice growing traffic inour GitHub organizationlike on other channels.Most popular repositoriesOur most popular repositories contain the AsyncAPI specification and the AsyncAPI Generator that the community can use to generate documentation and code.The AsyncAPI Specification repositorythat had 1 357 stars in 2020 jumped to 1 870.The AsyncAPI Generator repositorygrew from 198 to 417. So the number of fans doubled.The number of contributors also increased, but the problem is I no longer have access to tools that can help me get exact numbers, like the ones I got last year.The good news is that we should get access to Linux Foundation Insights tool around April. It will enable us to look deep into not only GitHub stats in one place. We will definitely get more accurate numbers for 2022.npmThe majority of our tools are written in JavaScript/TypeScript, and we host them on Node Package Manager (npm).Top packagesOur most important packages arethe project that provides AsyncAPI JSON Schema files,the Generatorandthe Parser. Below you can see how downloads of these packages increased.201920202021Generator21 536136 994396 766Parser18 591187 4751 460 275Module with JSON Schema files for specification(new@asyncapi/specs& oldasyncapi)79 527215 0161 483 839!The increase in numbers is insanely huge. People automatically say that it is because of build systems, local development, or some single corporation started using it at scale. In other words, the increase could result from just one project that uses these tools as a dependency.Let me challenge you:Corporations always use mirrored versions in npm. When you work on a project in a corporate network, you will always hit internal proxy. Not included in downloads.Most build systems cache packages that are downloaded already to improve performance. Not included in downloads.
When you work with npm locally, you also have a local cache that is used if you want to install something that you already installed. Not included in downloads.An interesting observation is that Generator uses Parser and Parser uses the package with AsyncAPI specs. So you can read from this data that packages with specs are primarily used in the AsyncAPI Parser. You can also see that Parser is a backbone for many more projects than just the AsyncAPI Generator.Do you see it? Last year Generator and Parser download numbers were super close to each other, now the difference is much higher, 1 MILLION!YouTubeTheAsyncAPI YouTube channelhad a massive increase in traffic.Watch timeYouTube is the only channel where numbers were not higher than in previous years. The main reason is that in 2020, our conference took place in March, while in 2021, it was November. We only released like 1/5 of all presentations. Let's see if I'm right. Numbers in 2022 should get up.201920202021Views5278 83010 444Watch time29.9h1 900h1 672.9hSubscribers35396292Open CollectiveWe earned and spent lots of money this year.🤑Huge applause👏to allour sponsors!SourceExpensesBalanceAsyncAPI Hackathon & Conference$1,200.51 LinkedIn marketing$563.00 Twitter marketing$2,200.53 Daily.dev marketing (converted into 22 registrations out of 369 visits)$11,023.92 Hackathon prizes$1,972.31 Swags for Hackathon participants and Conference presenters$8,146.63AsyncAPI Initiative$15,093.31 Marketing and Maintainance$3,000.00 Donation toJSON Schema$56 252.68We also have a good amount of money thanks to the new Platinum sponsor that joined last year, IBM. Also, RedHat joined as a Gold sponsor. We also had other donations.Final wordsWe grow. Numbers just confirm our observation. We grow not only because people love to build a community around the specification. We grow because AsyncAPI Initiative is attractive for contributors because we also host tools related to AsyncAPI.If you want to look at more data, some of it is availablein this spreadsheetand for others you just need to contact me directly.In 2022, we need to establish a stronger bond with the community. We have many folks that give back a lot of time into the project, and it is time to give back. The main goals we have:Meet in person for AsyncAPI ConferenceSetup Ambassador program to give back to most active community membersGet involved in more events like Google Summer of CodeJoin us so we can work on these together!Photo byAlternate SkateonUnsplash
"""
--------------------------------------------------------------------------------


Post 64
ID: https://www.asyncapi.com/blog/radical-transparency?utm_source=rss
Title: Radical Transparency
Link: https://www.asyncapi.com/blog/radical-transparency?utm_source=rss
Summary: There are multiple ways to manage an open-source project. At AsyncAPI, we chose the Open Governance model for many good reasons that Lukasz explained in his article Finding a Good Open Governance Mode
Content:
"""
There are multiple ways to manage an open-source project. At AsyncAPI, we chose the Open Governance model for many good reasons that Lukasz explained in his articleFinding a Good Open Governance Model for AsyncAPI.However, there's more than"just"doing Open Governance.If something can't easily be found, then it's not really transparent and, therefore, not truly open.We not only chose Open Governance butRadical Transparency.What is Radical Transparency?radical/ˈradɪk(ə)l/(especially of change or action) relating to or affecting the fundamental nature of something; far-reaching or thorough.Forming an inherent or fundamental part of the nature of someone or something.transparency/tranˈsparənsi,trɑːnˈsparənsi/(of an organization or its activities) the condition of beingopen to public scrutiny.Radical transparency is about doing every single thing in public. It's about empowering the community with the necessary tools and information to scrutinize everything we do.What does it mean for me as the Executive Director?Believe it or not, it's relieving. Most people —including myself in the past— would have been scared of letting so much power go and opt for radical transparency.I often get a lot of pressure from different companies to do something for them. Here are some examples:Invite someone to the TSC in exchange for aPlatinum Sponsorship.Exchange logos on our websites. Oh my! It just happened as I'm writing these lines😂Donate some money only if they get "something" in return. These people don't get open-source, do they?😄So Radical Transparency is actually making things easier for me. I just have to say something like this:I'm sorry, but I can't do what you're suggesting. If you're still interested in a similar deal, please head over tohttps://www.github.com/asyncapi/communityand open an issue with your proposal. We can happily discuss it there.All of a sudden, it's not just my responsibility. It'sthe TSCwho gets to decide if their proposal moves forward or doesn't. This makes the TSC (including myself) accountable for the decision. And most important, it's all registered and accessible to anyone in the community to scrutinize.Radical Transparency is removing all these trouble-makers for me. Whoever is truly interested in making an honest proposal, will also suggest it publicly. This system allows me to get rid of those whose interest is not making the project better and are only seeking profit. And, so far, these people stand for 100% of the cases.Of course, I'm still happy to take private calls and emails when they make sense. E.g. they contain sensitive information, you don't speak English, you're shy to propose things in public, they're not related to AsyncAPI, etc.What does it mean for the community?Whether you are a user, a contributor, or a code owner, everyone must make decisions in public. For code, we use pull requests. Use issues or discussions on the related repo when it's something else. And, if there's no related repo, usethe community one.Whatever we do, needs to have its associated public record. That doesn't mean we don't do video calls to discuss complex topics. We actually encourage them when the writing form is not enough or too difficult. We never take decisions on meetings because that would be leaving many people out. E.g., those in other time zones, having other meetings at the same time, those on holidays or sick, etc. In any case, whatever is discussed in the meetings should be reflected in its correspondent issue or discussion on GitHub.Of course, the "downside" of this is that the whole process becomes slower and more bureaucratic, but I don't think it's really a downside but a feature. By doing this, we make sure to behave as a community, as a group, as a huge team. And you don't want to leave any teammate out, right? It's a matter of respect, after all.Challenge us!That said, we're always looking for ways to improve. We're already radically transparent, but I'm sure we can improve some things. So here's a challenge for you, find something we're not doing transparently enough and let us know. Or, even better, join us to improve it!Thanks for reading!(Cover picture byAnh Tuan ToonUnsplash)
"""
--------------------------------------------------------------------------------
